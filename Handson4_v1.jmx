<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Handson4">
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group 1">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </Arguments>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC_01_Launch" enabled="true">
          <stringProp name="HTTPSampler.domain">10.0.0.5</stringProp>
          <stringProp name="HTTPSampler.port">0</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">/demoair/home_page.php</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">max-age=0</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Click Login" enabled="true">
          <stringProp name="HTTPSampler.domain">10.0.0.5</stringProp>
          <stringProp name="HTTPSampler.port">0</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">/demoair/login_page.php</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://10.0.0.5/demoair/home_page.php</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC_02_Login" enabled="true">
          <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          <stringProp name="HTTPSampler.domain">10.0.0.5</stringProp>
          <stringProp name="HTTPSampler.port">0</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">/demoair/login_handler.php</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments">
              <elementProp name="username" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">admin</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="password" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">password</stringProp>
                <stringProp name="Argument.value">passpass</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="user_type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">user_type</stringProp>
                <stringProp name="Argument.value">Administrator</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="Login" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">Login</stringProp>
                <stringProp name="Argument.value">Login</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://10.0.0.5/demoair/login_page.php</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://10.0.0.5</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">max-age=0</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LoginPage" enabled="true">
          <stringProp name="HTTPSampler.domain">10.0.0.5</stringProp>
          <stringProp name="HTTPSampler.port">0</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">/demoair/admin_homepage.php</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://10.0.0.5/demoair/login_page.php</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">max-age=0</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC_03_ClickAddJetDetails" enabled="true">
          <stringProp name="HTTPSampler.domain">10.0.0.5</stringProp>
          <stringProp name="HTTPSampler.port">0</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">/demoair/add_jet_details.php</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://10.0.0.5/demoair/admin_homepage.php</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AddDetails" enabled="true">
          <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          <stringProp name="HTTPSampler.domain">10.0.0.5</stringProp>
          <stringProp name="HTTPSampler.port">0</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">/demoair/add_jet_details_form_handler.php</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments">
              <elementProp name="jet_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">jet_id</stringProp>
                <stringProp name="Argument.value">2910</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="jet_type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">jet_type</stringProp>
                <stringProp name="Argument.value">A1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="jet_capacity" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">jet_capacity</stringProp>
                <stringProp name="Argument.value">170</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="Submit" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">Submit</stringProp>
                <stringProp name="Argument.value">Submit</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://10.0.0.5/demoair/add_jet_details.php</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://10.0.0.5</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">max-age=0</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SuccessMsg" enabled="true">
          <stringProp name="HTTPSampler.domain">10.0.0.5</stringProp>
          <stringProp name="HTTPSampler.port">0</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/demoair/add_jet_details.php</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments">
              <elementProp name="msg" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">msg</stringProp>
                <stringProp name="Argument.value">success</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://10.0.0.5/demoair/add_jet_details.php</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">max-age=0</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC_04_ClickDashboard" enabled="true">
          <stringProp name="HTTPSampler.domain">10.0.0.5</stringProp>
          <stringProp name="HTTPSampler.port">0</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/demoair/admin_homepage.php</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://10.0.0.5/demoair/add_jet_details.php?msg=success</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC_05_ActivateJet" enabled="true">
          <stringProp name="HTTPSampler.domain">10.0.0.5</stringProp>
          <stringProp name="HTTPSampler.port">0</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">/demoair/activate_jet_details.php</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://10.0.0.5/demoair/admin_homepage.php</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AddDetails" enabled="true">
          <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          <stringProp name="HTTPSampler.domain">10.0.0.5</stringProp>
          <stringProp name="HTTPSampler.port">0</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">/demoair/activate_jet_details_form_handler.php</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments">
              <elementProp name="jet_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">jet_id</stringProp>
                <stringProp name="Argument.value">2910</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="Activate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">Activate</stringProp>
                <stringProp name="Argument.value">Activate</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://10.0.0.5/demoair/activate_jet_details.php</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://10.0.0.5</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">max-age=0</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Success Msg" enabled="true">
          <stringProp name="HTTPSampler.domain">10.0.0.5</stringProp>
          <stringProp name="HTTPSampler.port">0</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/demoair/activate_jet_details.php</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments">
              <elementProp name="msg" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">msg</stringProp>
                <stringProp name="Argument.value">success</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://10.0.0.5/demoair/activate_jet_details.php</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">max-age=0</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC_05_ClickDashboard" enabled="true">
          <stringProp name="HTTPSampler.domain">10.0.0.5</stringProp>
          <stringProp name="HTTPSampler.port">0</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/demoair/admin_homepage.php</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://10.0.0.5/demoair/activate_jet_details.php?msg=success</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC_06_ClickAddFlightDetails" enabled="true">
          <stringProp name="HTTPSampler.domain">10.0.0.5</stringProp>
          <stringProp name="HTTPSampler.port">0</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">/demoair/add_flight_details.php</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://10.0.0.5/demoair/admin_homepage.php</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AddFlightSchedules/uma/v2-22" enabled="false">
          <stringProp name="HTTPSampler.domain">clientservices.googleapis.com</stringProp>
          <stringProp name="HTTPSampler.port">0</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">/uma/v2</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&#xd;
��&#x3;&#x8;_�P���&#x18;���|�A�\�&#x7f;&#x4;�ͬ&apos;dE�&#x0;����&#x1c;8,�D�&#x12;&#x17;���ߍ��S�Q&#x19;&apos;&#x11;�Jc����2&#xd;
���Q]&#xc;�u���7�,�&#x16;�B�/���=&#x5;�����+!�N��8��uf&#x1e;譝&#x14;&#x18;&#x4;&#x1;&#xc;��l�O!x�vͅ7$�z�&#xb;ZE&#x0;YDす�D!�Q���2$���d�&#x17;p�&#x7;Z@*&amp;9&#x2;�&#x1c;�y�l��s2�кa;�q�dԻl�]&#xc;����)&#x3;_&gt;�zp����&gt;�4~,M&#x1b;�Ou��{--?e�+	�F��?�̓}�v�9�o���3�m�&#x1d;&gt;�j�I&#x7;�l3��U���+G��&#x16;&quot;��o�ေ�V\&#xe;6�6�&#x11;P6&lt;8�{_��(�F2(����5&#x18;�&#x1;�&#x13;&#x1b;��&#x2;k�O5&lt;�3ʞz��I���p�t�&#x14;&#xd;�X&#xc;D��&#x1f;f�&#x1;��Bk&#x1b;j&#x10;�́1Z�&#x0;f`�|�&#xc;W&#x15;=L�CQ�)�&quot;�&#x1e;�Ӹ�.�&#x4;F��[6�&#xe;~��(a�-�&#x1f;�n&#x3;l���oP�θ����f&#x2;�-���l�{&apos;*pP?lP����ĭaT�&#x1d;ՑG1$?���`���Ry��&#x7f;4�&#x17;�B`�B�lQ%m5_��cu�&#x8;�ܪ-��@�������&#x0;����F]4�&#x18;-�l&#x4;�&#x7;� �kg�Lx#��8Ƭz��Z��c&#x0;S8J2n�SN&#x6;��S���/T�!�b&apos;���+&#xc;]cv|Y��w�&#x2;�&lt;	�ڸ�&#x7;&#x5fa;�U&#x15;���\�&#x14;&#x17;�	&#xc;�rn$�.I&#x1a;��xd�&#x8;�&#x18;0!ߞn~�yEw�d&#xc;&#x1f;&#x11;����F�&#x8;����L4�֯�ؽ�z�&#x14;X���¨}%J�щ���9Z�|&#xf;��I�p&#x8;���́&#x2;폁��@�˄aa��{Nb�l�ʋ&#xf;�M&#x16;���*&#x12;�&#x15;��&#x13;1��&#x2;&#x0;&#x8;�U&#x15;Ty��,&#x5c9;��&#x2;Е��:$��&#x15;��&#x15;�z�E ���F���5&#x4; �f9��w����Q�F��EG6�l&#x12;b&#x14;a_�P�O�4�KK�m&#x1a;���[-Me�D�(��&lt;�N��\f�Z��&#x1d;�q�n��Dr��&#x1a;#�|Fl�����&#xf;&#x7;��&#x1b;��696����Z��&#x1f;}��w�(o�?-�އ�;$� �&#x6;&#x1c;%�fH.&#xd;&#x5;�w����o�&amp;+&#x1a;4G�sJ�-�&#x6;(ײR�&amp;�$h�dD��5!L �av�&#x11;:�L��Dk7�Kln��&#x1;���yh�T�_ k�z8K&#x12;�#/d&#x4;�rF��a�)&#x1b;����%���.��&#x14;&#xd;���,�VS�F&#x16;&#x6;Oz���73&#x0;;uZ�}&#x2;�F�a����MC�V&#xb;m#��Z���/s��&#x7;�&#xc;&#xf;���ڨ1ˈ�U.�L��&gt;4&#x15;�;�*k�p��pg���&#x11;&#x8;&#x18;�&#x1;&#x12;�s/&#xb;G�v�&#x1e;?wZ��ń&#xb;c�~@_�.&#x10;�(Ri����G}&#x16;骟���&#x3;^&#x14;&amp;b������W�K�7�c&#x1b;{KfW:�s&#x17;&#xe;7�rF���j_�a��3&#x1d;�&#x4;1&#xb;���{&#x16;!.!�x&quot;&#x10;���&#x1;��E�&#x2;i�4���&#xc;T�.�&#x5;W���MZ�&#x8;h��&#x1;Z�n�	���p�屼��&#x1c;&#x1e;&#xe;��L1��5(���KJ�W&quot;l�z�/y&#x1;&#x7;ͅ��F��b�ؼ��&#x6;���ɋ�����,��UD&#x1;Ɗ�^��b����	+�s#�&gt;T&amp;�e�6&#x1f;��&#x19;ɷ��&#x4;o��r$iR������ģĂg�U�J�)x��4&#x11;ĝ��sGMm,���8��3�����á7.�`��&#x1a;��3Xp�@�y�&#x1a;��p���&#x5;@&#x17;�&amp;&#xd;
VuG�&apos;�&#x10;F��`Aͯ�»�	���(�+Μ	u�E}h̡K��&gt;���&apos;&#x1;���ڂ&#x1b;M&#x17;v&#x1a;�&#x3;U���&#x12;E�,^}�h睂�7�`r�I�}&#x7;K!3�KL�Ş�&#x17;��&#x16;���!�&#x14;I��u6	�B,��̂&#x15;�(�&#xf; &#x1;�m�&#x1d;)���U$}���&#xc;�J��&#x7f;��[��&#x7f;���&#x19;m&#x1b;�܉�&quot;�ABܰ*ȅ&#x7;UDӈ�z�g3��4)&#x1f;���Tِ�Q��`&#x14;�&#x16;�z2�~2+�Qt*�&#x8;&apos;�gZ��߹`i-����&#x1b;^�M&#x19;H�e��}&#x18;dE�2��&#x1f;u�&#xd;xyWnf�-dJD=�f*���&#xf;&#xc;B���ʁe&#x1a;���&#x17;�M�U$HpA��~���&#x1b;Þf��W8�&#x1e;.�b2�Ju&#x4;9�ai/؛&#x15;#o&#x18;��w��5�$P�q4&#x12;�E&#x17;E&#xd;
9^&apos;���&#x16;r��U����eWj&#x13;[O:�&#x4;&#x15;�&#xc;vu&#x11;�&#xc;&#x1f;����i&#xc;jJ�&#x4;/`���ǹ�B&#xd;
���&#x10;���E�%&#xb;&#x14;&#x5;�*{����ʜ��&#x11;[�&apos;}�&#x17;i|&#x2;�4N�;Ց��g?���Yݼ�jz&lt;&#xf;���n�&gt;lĤ&#x16;�&#x8;��&#x2;C&#x1c;`�1N(�r�&#xd;�x&#x13;�e��&#x0;��o@Qk�(�4;&#xe;�&#x1;r�dG)&#x1c;&#x0;��#���9�&#x0;H�~���Բ�&#x6;&apos;��zd]`����~����#�&#x7;oU&#x1c;�*f�۵hx&#x1a;�t&#x12;V&#x7;�&#x5;S�&#x1d;�3��$g�q�~Eۮb��E�Vz$��0�&#x1f;,&#x1e;&#x18;��&gt;�&#x17;�v� ���~Ch�愫�9����S&#xc;�4&#x1c;G�~����&amp;d�n���1��C�A�_�&quot;�����&#x7f;�&lt;\�&#x7f;�	S���Q�k!:ߤ䉍�&#x19;&#xf;^x�;%�h˅�&lt;��ߛ�/Hl��&#x11;&#x19;�F&#x1b;�HS&#x0;n?�&#x2;�C����F���z뱢&#x1d;�/��8E����j&#x1e;酾q�;��&#x1f;&#xd;
3�&#xc;f�)�E�&lt;���&#xe;�&#x1;y!ɒ,*&#x17;�cYe&#xd;n\&#x8;&#x13;J�2�g�Ŝ�p���pt�(���\sG���/�	��&#x1b;&#x7;�T~�x��&#xd;y�O��&#x3;-&#x1;�^:J�H�&#x17;���*=&#xd;k���&amp;0�ms�֛��t&#x1d;���&#x1f;&#x18;����=x&#x12;�nv����&#x1d;�&#x6;:!&#x10;i�:Bݵ�&#x1a;�&#xb;�]�Än#&#xc;W9p�q�&#x0;l�&#x16;��&#x8;Q	&#x11;e&#x4;�����p92�m�&#x1b;&#x15;�&#x3;&#x1a;&#x17;ߗ2ѫǜ|&#x17;r|�n&#x11;��gij�B�&#x11;�4�d��&#xe;R��t��9��K�&#x1f;N&#x2;�iuRZ;�+w1	�fm�Q�&#x14;�&#x1a;�&#x1a;�C&#x7;�2 �1,�97�D����K�$��[&#x7f;&#xc;�s�J�]��&#x6;��G58Pt7@\&#x16;&#x15;~&#x0;&#xd;e��&#x1;�e�&#x11;89V����7���=w�p����AEy��d�F����I�1�Eb&#xd;�!�#,��$���&#x1c;��&#x6;LQI�8x��G��G�^�x�6&#x18;&#x19;7��[�&#x1f;+q�J&#x6;��Q�&#x11;M�Ԙv&#x11;��\&#x11;S�);j&#x83;\�[�}��k]�^��&quot;&#x16;�ljg&#x3;W�&#x1a;�L\&#x0;��D;�&#x7;3�&#x4;�J&gt;���&#xd;
��H//�&#x0;V&quot;&lt;�4+=k&#xd;
�+Ĺ&apos;���m\��g=�&#x12;���*ɇ�c5[�&#x19;hUx9�phG͢���0*���&quot;o&#x5;~0��/�&lt;Xs��]ω9�&#x13;Ǆ&#x0;D��&#x3;c&#xc;�;&quot;�&#x1b;}#�&#xf;��AY�D&#x7;G&#x3;�ʒ�&#x1f;&#x5;*��&#x13;�cn�)�=l�!C&#x1b;&#x0;Y�_W�n횈����B&#x4;�&#x7;ִ���&amp;)=��ږK�מA�P^�&#x18;��v�yJ��E1���#&#x7;�P&#x13;Mb�6	&#x6;�1�����1�����&#x1;4*&#x1c;^&#xe;����C�&#x19;+���8�3D�kS]�xj&#x5;&#x16;&#x7;E�ް���O)7��&#x6;d&#x1f;F��&gt;�O�ǌ�գ�p:�N�&#x18;v͛y�-�&#x1c;�&#xd;������j&#x1d;6)8&#xf;�5;�GN�so���T-��Dn��z���&#x7f;���A&quot;�a�f5�&#x6;&#x1;�ee�V&#xf;�q��B��e)MGdq�=&#x17;&#x1a;�v&#x7f;6$0�P3��mQ&lt;F�%&#xc;�U��.	uJ&#x1;��2Ě^7Š�+u-)ߴ�&#x5;�&#x1a;&#x1f;o�&apos;x��5&#x1e;#��7�&#x19;Lt&#xc;.?��ũuy&#x7bd;�l&#x15;��)�xƟ�&#x19;Sj&#x15;&amp;;��&#x1;�ǋ&#x12;&#x4;@�p�\��^&#xe;~Z�&lt;&#xd;
�{&#x1a;4�&#x1f;�I(0t�F�c����:���&#x19;^�ө�W8?&#x1d;�IY&#x6;7���K&#x15;&#xb;�t�U��$_H��S1�6�m&#x7;�2��8ٚڸ?��=�c�DAO]&#xc;&lt;S&gt;�73R�[Y�WLǱ����w���U��~�r�&#x18;{�&#x1a;&#x14;(&#x2;��&amp;,�G&#x15;��m@;�0�xJC3&#xf;M�s��܇�&gt;\��o�l&#x11;��o�{c�&lt;���x&#x1e;PS�Y�_�E&#x11;O&#x8;]�)]&#x1e;f1&#x1c;p=�Y&#x12;k��&#x7;���&#x1;�6��|+&#x18;o&#x7b4;��&amp;&#x10;&apos;؟��&#x1f;uI�&quot;���;yGq嚝&#x4;�ǒ��߰a�YoHTO��iNl?�&gt;&gt;��/.	��&#x1b;�́8��M�&apos;$�j�&#x18;�@��x6�!�B&#x8;��&#x4;�R&#x1a;���f��j\&#x6;�65�6V*#VR����&#x1d;�9u�XM{�&#x0;s+���L:&#x7f;ͯ��&#x0;��G� XV&#xe;�&#x8;Qa�o&#x15;^&lt;p�}�/�|v�m��&#x1d;&#xc;�%��E�ED&#x17;��up!�H��&#x2;ա������du��^�T���������G�.S�2��&#x11;d&#x10;�H&#x1e;��_x�`q2�Ne�IS��^%����w��&quot;[~rB&#x1f;Ɠ�ܮp���ӿ�:H&#x1b;;}��Gjj&#x6;��d&#x7;����f&#x17;�`���G�&#x1c;�&#x7;[�&#x19;���&#x14;�[&#x12;�&#x17;��N�s&#x17;}���&#x2;G�bǏ֘5۝ynǌ)�3Y�-������&#x16;�=�}��&#xb;��8ٝ�&#x18;�����Q/��P��垥����p�	&#x1b;��&#x17;�a&#x0;�/�����&#x1;����&lt;�W:o���@�k�{�VP=-n��	&#x1e;��&#x1f;�����&#x7;_&#x16;��&#xc;J��n�;�ĺ&#x17;m{�ɑ#�����:	�?r�TE&#x1;&#xc;���C�]?;��,�D&#x1f;�n�Ivg&#x13;�%��&#x19;��uQ&apos;�g&#x5;/�����ڲ&#x18;h96��S&#x6;`�&#xb;u&#x1;���%M�s��z�&lt;�&#x17;&#x0;�辘�q�j��?�X$#�&#x18;&#x19;o�&#x3;j&#x13;�ǰ&amp;�&#x14;�����`�-�]ֳ9&amp;p���&#x13;��^{N�q�@;&#x2;�/�3�IA�%c&#x1b;�uy�$&#x10;�(&#xd;
��_�fF&#x14;�ڷk��VG�l���@�&apos;J��|p&#x0;�Z�^&#x10;&#x89;&quot;&gt;&#x15;�&#x5f8;E&quot;&#x7;���ΦG�2GJP�&#x2;��.݀���#�_A�=uy�&#x14;&#x18;��}���&quot;�q�k;j:K]���hc���&#x14;��;1Y��&#x11;�&#x14;�/���&#x14;/�&amp; ���u�\;&#x1d;��V�&#xd;(@�zh&#x1d;1�!��J3����W�@tt��?1p��D?�V�.&#x7;~���x�h^N�3.�e~-�+�J��DtDV:7�b&#x11;&#x0;��}&#x13;�6&#x1d;�&amp;-�c&#x1a;��|�*p�&#x1e;��͇/S#&#x14;�&#x1f;�A&#x3;�a�&#x13;&#x3;�&#xf;�|�cnA����&#xb;�&#x4;�&#x3;@�O�ŨK&#xd;
*�=mY�J�&#x1b;�Y�t�.	OV��s|&#xd;i�1�r&#x18;����~:&#x7b3;�&#x1;&#x0;&#x1e;�&#x12;�qY6k&gt;�&#x19;g�y&#xc;-�&#x1d;Q.���(�^5&#x1d;s�Ν�U�&#x1b;5&#x18;o�D5�w�G���-�&#x4;�&#xf;�&#x15;JU��A&#x2;�&#x1a;�)P�&#x17;�����&#x8;`G�&quot;��&#x11;��w�N&#x15;�&#xd;
c&#x1e;;/\����$�X��n�V��&#x15;j)o���P�G��Q�2K*�H�Nۣ�&quot;��&amp;�[��z&#x5;`A5jN-��V(��&quot;�Rg���i&#x5;���y��j�&#x12;�2j&#x2;3N4`��Y��lˏ��&#x1e;`�G&quot;�^�3R���&#xb;E���욷\+�&#xd;
��wC���&gt;�CA&#x15;F`�&#x2;�&lt;\�ޭMA�&#x17;�X�x^_Y�Rb+��3\C[��&#x5;�4&#xe;b���e���;&#x17;.π&#x1c;��&quot;&#x15;� fCu�ճ���U.Lg�&#x1;Ġ&#x8;�&#x7f;�����/AU�I����b�;�B���;&#xc;��K2&#x1e;����&#x19;�u�i@&#x0;&#x19;&#x17;��6��μ�]{\��&#x17;��&#x7f;�&#x8;�!ď&#x1a;m���&#x1c;��J�0{�=�&#x5;����Q��D��&#xf;[���T^�&#x10;&#x1b;�I; -eLz �E�!Yx2ŧ&#x2;�alg?�i��@�Ȏ�dA��Q�Sx����&gt;&#xd;&#xb;��W����ؚj&#x7;|W�	W�ǭ��z~W&#x10;(͢���DE�]]����̀d��&#xb;�5�����&#x7f;g&#x3;.w��6&apos;8��&#x8;���_)Z����A�L&#xf;&#x3;�{�.o��q� ��&gt;ESim&#x4;�&#x13;�&#x7;)w&#x19;&#x10;���տ�&#x1f;6=�/&#x16;�.�Y�_&#x17;&#x13;(g��6�&apos;�|R��&#x1;&#x3;���82l���w8I���.��&#xf;S&quot;D&#x7;�G��͘�oF?&#x1c;�&gt;;�~��&#x1e;�����&#x19;�)&#x1b;/ܦ����%���w�vk^�	虐%��G{_&#x15;�&amp;)�*�fh�&#x3;&#x5;�&apos;Q��:���&#x7f;r���!(g&#x17;�MYD�[�&#x1c;&#x18;���]hda��&#x1a;m�6&#x10;$�&amp;T��&#x14;�&#x4;&#x12;�&#x11;|��&#x16;pdm?ٔp�&#x0;�G�&#x15;�&#x7f;�ڜ��&#x7f;�8bdy ��&#x16;�;��MJ�Ldˍ�Y�	�&#x12;&#x13;ǉz��R�&#x19;`�����C�*&#x12;1jK��|&#x1e;&#x6;�:&lt;+�Z&apos;�%ĳc&#x1a;&#x1a;&#x1e;�&#x2;I]&#x13;zEG&quot;��;^Ơ�סL�.�}$�,����&#x1d;�,���&#x11;��#��&#x4;2�����,Q�\AS^&#x12;w�!r[&#x1a;�_#�պ�a|�w@4�(&#x7f;al&#x13;F�(L&#x1c;K�`&amp;7�)Y�����&#x16;�&#x4;�_�)&#x7;)�+�p���^&#x1;A&#x12;s)��	&#x16;y&#x1e;�&#x4;c1: �s�+&#x1b;���0&#x18;������b��&#x10;��)�&#x1a;��k&#x1b;��ϒ�0����1&#x11;�	��&#x18;�&#x8;&#xf;�&#x11;&#x1e;z~�$��2G��&#xf;Զ&#x13;H�W#&gt;E�&#x1d;�yA�/E�#BE��Y(�|D!��&#x6;a��&#x14;�&#x5;J@&#x97;R+&#x1;�&#x3;�&#x8;kpE+&#xb;��	p�gw��y��2w�aϦač�&#x11;��!Ȑ�2����H�b���D`,��&lt;&#x18;gCJ&#x13;��&#x1f;�,0R��$�{lqB��&#x1e;�&#x4;&#x1d;�&gt;:J����zN5&#x2;�&#x19;�p�8)���ƈ�&quot;��@~&#xf;�C&#x1e;���=&#x3;��/&#x12;$�],��&#x7f;Kg0&#xe;��\�M&lt;$doz�:�\&#x15;v&#x14;)�����g�2GSL�&#x13;I&#x17;Wc���&#x1b;�&#x12;��1:V�&#x15;��6�N��׀�Z&gt;&#x16;ݚ`��@�r���9��5�;�����&#xe;$&#x3;��*&#x1e;&#x1a;�ֱ�:���O�j��,�&#x15;�&#x1c;m�jp��V��$&#x0;t&#x10;��=��&#x5;��&#x4;A.���:�:��7��&#x1;A�1&#x17;hX!I%!C]&#x1c;��&quot;�I&#x6;�&#x14;kfM�cfT&#xf;l%E�5x�*)�κ�&#x1;�v�P&#x1a;қ&#x7;��!�&#x7;�I�HD4&#x0;&#x3;��]�&#x7;��s�Z�&#x1a;&#x14;��$�&gt;&#xf;�v�8,&#x1e;&#x3;�&#x7;�\�Ţܙ&#x10;�țD&#xb;�C�&#x10;��_�/&quot;�&#x17;�k���&#x1a;�&#x5;��&#x6;�3��&#x1b;���E�:��1&#x16;g&#x7f;����2@�&#x14;cc��Xw��d��&#x1;tX&gt;q�k&#x10;��{&apos;5ε�&#x2;�&#xe;�&#x1a;�Z#��eEGA&#xe;&gt;v��Ą?�&quot;	�E,�祶�z�Z·,o&#x18;t:�n�!_�E-&#x14;�^�MU������,!B&#x8;&#x19;�&#x1d;�&#xc;�&#x15;�ޘ&quot;\5/��.S&#x4;�&#x2;���	�d�:OD���_�·�^���8lr&#x1a;C;-�&#x1d;�.&#x14;��F�R&#x7;&#xc;�7E펙1l�r��u&#x18;�&#x5;&#x10;Hʌ��{�}Xm���tG���$p�Р��&#x6;�̃�htU�LT�B�D�,�W&#xe;cr��f�J�&#xb;n\&lt;��̨�&#xc;���Ⴧ��j&#x1b;�&gt;��6���A�5&#x6;Q&apos;1��G2�&#x1e;�8&#x7;:�y�&apos;&#x11;��a�F��&#xe;!�)&#x8;m4i&#xc;hA��4yڬx&#x1d;�\o&#xe;��_�U�Y&#xb;&quot;�4&#x6;��&#xe;&#x8;��ս&amp;XB�9W��&#x4;Ҭ=��p��&#x3;�GQ�M&#x12;Q���.t�&apos;�ce�9�Tɓb&#x3;�9�&#xe;&#x6;O&#xb;���UC��&lt;��x�yO����&#x15;�&#xf;�&#x4;&#xc;� ӫC�ϯ����( O;Tl}{T@&#x1d;�u�|]4z�&#x1;X&#x6;&#x5;��+��^({��|#&#x2;��$e�9Z�����{0!��B�����I�&#x6;�.����y��A�)uDBH��Z&quot;�.��&#x3;z&#x1b;{&gt;&apos;)�5�����ж�&quot;y`��/Խ��&#x18;&#x1;�6�S��&#x7b9;X_�1��U���&#x16;6i/xż�H5o&#xf;�ʿ)V�0�&#x17;=P�h&#xd;�z9o�&#x15;��:h�&#xc;��ty0��&#x18;&#x13;&#xb;&#x5;�&#x1;�;�)4���@�\Y�&#x12;���W�q��aQނ1&#x14;zTt�&#x1c;Cqz��%w�&#x1;�&#x7f;&#x14;�&#xc;�G�؇?]&#x1d;�-Q{����&#x4;5}k&#x2;���5t&#x13;&#x1f;?��X=bW��&#x1f;��6$��&lt;E&#xd;�^������b�mM�|�c&#x3;&#x14;��&#xe;;]�i��l)6?����N&#x17;Z�O!y��\&#xe;����A+����E��zo�$�w9&#x0;P�_�U�R;�?2Z����&gt;�8&#x18;1~�X$��{&#xf;Zms��&#x11;R� q�~ڇҲۭuE.�4&#x3;1O~&#x8;ԑ�v�:Ŋwp�&#x4;����C�&#x6;�&#xe;{��])od�����v}�7\���&amp;&apos;\\�9&#x15;jju(j/��)?&#x5;��Ï���Tv&#x2;�b�|��o.�&#x7f;9[�&#x10;�S1�M����I�&#x1c;��&#x1e;f]R�&#x1a;|3��%&#x1a;�*Ϥ�OG��ݽS���$23�7E���&quot;��|�2&#x1f;�/�&#xd;�1�0&#x10;߷��C&#xb;�&#x7;9�&#xd;ǎ&#xd;
2�&#x2;�wW3�aZB�C��Mc&amp;���/�+���]&#x16;&#x1b;N�nAM&amp;&#x12;7��)�RrB&#x18;��&#x18;&#x1f;[�n&#x7f;�&#x1a;&#x8;ĵP��&#x7;g��&#x3;A�&#x12;5�;�����©JژqGu�v4��G��	��&#x1c;����}��&#x8;UZ2�M&#x1c;[�&#x4;ɔ�I��h�J��&#x2;�ݐ&#x14;U&#xf;�Qz&#x1b;��E��&#x1b;�.��Ụ&#x1b;�&#x7f;M�&#x12;&#x1;�3&#x13;-%�r&#x5;�L;Id�;�8&#xc;�A��&#xc;6h5����*�&#xe;qʏzb&#xd;&#xe;&#x17;&lt;&#x7f;i)�!�&#x1c;��9EK�	q����&#x17;\&#x10;e�,�#�HI�H�&#x10;	f&#x17;&#x1;�V&#x7f;m���&#x1d;�+6_x��3xp��MTj;R7����5�9��&#x10;�e�&#x15;&#x1;a&#x15;�?&#x8;�V�y�f&#x12;&amp;/Y����s�&#xd;��&#x5;�5��6ݤv�[&#x19;a�&#xf;Oܻ&#x8;�~�&#x7;^&#x10;�x�K&#xd;
1g�&#x2;�&#xb;�6��|�v&#xf;��N_�/��`D�&#x1c;&apos;&apos;h���[�+�?J�&#x1d;X�OL&#x18;&#x3;���n�]�kj0�&#xe7b;|^�.&#x0;`�a��3���k4��Cd�Ql�&#x529;���qv!~�&#x8;���[&#x19;sI苇#�5;�Ǖ5�/0�0@o�&#xd;&#xf;W���Ħ&quot;wB��&quot;&#x7;��c�-&#x1;��򾪷+5�&#x1c;n!��%7=�=���&#x6;&#x6;�Sz�.�o�&#x8;�I�t�&#xf;&#x5;�&#x12;��#&#x3;�ܘ$&#x0;⨾&#x1d;a:&#x12;&#xf;b�&#x16;�$�6���:�&#x13;&#xf;�]�3A���,V1&#x6;&#x5;\f�P�w*�&#x0;&#xd;
��/�&#xc;��&#x7;��wG�R�/��%TV�;-&#x7;5a�C$Ռ&#x1b;,�&#x14;P�&#x11;�&gt;%Y͘��+&#x2;�����&#xd;
=&#x12;H�}��9��K	�H&gt;&amp;&#x18;�#��&#x1a;5A�9�E�8&#x13;�yO1&#x1;A�&#x18;�5�Æ&#x7;���&#x1;i&quot;h��sMխ&#x7;��AJ�\�&#x1d;˰���`{��q���h��&#x1a;p�t�&#x6;�*�5l��ԡ�Qq���&#x1f;�?&#x1;p��&#x1e;��X� �#&#x1;��@Xv��;&#xc;Y���&#x1e;&#x3;&#x14;�Q�Q�y�S�R�&#x1b;h�4�gW�&#x19;�J=�w���%zl��_�0��ۀ-���&#x1a;u��;�k��=�&#x3;�������?�(�I�$���uؖ*�ͨ#�&#x14;ʹ�Q�4C��&#x5;ʰ�Xf~#G�γ�;s!�@��}�?�Y�����&#x14;Ba�������%HM&#x17;�z&#xe;&#x1;�NÕ&#xe;8��W(h���Z�M&#x5;\4]&#x3;H�&#x5;w*&#x1;��&#x11;&#x19;\8}{:.�,��&#x1e;�ո&#x17;�y�#�&#x3;��@���A��&#x10;&#x0;��&#x1e;���^-&#xd;&#x1e;ǖ�ݤ�%&lt;�������e��۳OmC�.Y��,��&#x18;\X�+�^�&#xb;�6�T1��`���&#x0;�b�;&#x16;D&#x13;b��è(}��=X�&#x1;��ra&#x16;G�(���|j(-¼R)�s���z&#x7;��.&#x18;��c&#x15;�&#x13;&#xe;��=�%�W��Z�&#x11;Z���Z_j�\���&apos;�q��sO&#x1b;��W��Y�a�&#x14;���r&#x11;���Ob&#xc;�s�7��9������&#x1f; �&#x1d;T�hT#&#x19;ʹ歲��&#xe;]Δа�&#xc;��&#x1d;&amp;��]��&lt;V�o&#x10;&#x12;7��O�V�S�]�k=\^�&#x19;�&amp;�����&#xc;R&#x19;�&#x2;|&#xe;�?yү�4K&#xd;
�&#x1b;yO�糞�� ƌ^�&#x3;��ax��dC�,�r�z��k�P��Z&#x1b;]��D����a�=�%&#x6;�g���+��&#x12;�`&#x0;&amp;:��*~1@A�B3p(��c�~7P&#x1d;-&#x12;u�&#x19;:�^[��4��&#x3;`&#x4;�&#x2;&#x1;Mo&#x99;&#xf;H�&#x4;۵=�&#xd;�&#x5;$Ӗ�=`�_߃�ܪ&amp;��߇�Bg�jJb�&#x1f;����&#x1a;�8�Î�&#x5;��&#xf;&#xe;�: �c&#xe;�d��ܩ��N�V�#��UT�g&#x10;s�驑i���I���Y��%�s&#x1d;�B��Dk�&#x17;\�������ʉ@H��Uy[Y�&#x1d;�*&#x10;w&#x18;Ge��&#x16;r,�6�z%#y�J�M��(n�&apos;	D͑�kr,�#���4Y&#x1f;�?~��&#x1e;&#x1;P\�(�&#x10;�&amp;�#�&#x14;���eQ�O�����:W��&#x0;&#x10;�kRBRg�&#x10;&#x8;��&#x7;{���&#xf;&#xc;Y�T &#x13;_d�_�iu���8�s�&#x1e;�2���&quot;h&#x16;�v�&#xd;&#xe;��� B�3�Я&#x17;&#x14;��Ǐ\����w�Boؿ�&#x1e;��&#x2;��(� �m&quot;�&#x1e;&#x10;���	{)Z�mЇJɔ�&amp;�:|z�E��X&#xb;��F�[��&#x1;K &#x14;�&#x0;|d@&lt;`��&gt;��zӨ�?Uy�&#x1;�0f�i���&quot;�Q�f���&#x1d;&#x1;9���-�F&#x1b;��H��6M_*��0&#xd;
&#x6;ܙԉ�&#xe;���t��&#x19;`&#x1b;gXK)2��f&#x6; �o�ع�{�&#x7f;=���ke&amp;&#x5;�K�&#x18;��&#xd;�5����&#x1b;�&#x12;L�A.�7��&#x4;&#x1c;b��L�uU�Z�&#x4;]��I&#x3;B�JP�Λ(�&#xb;�8Q&#x18;&#x14;&#x1f;P&gt;&#x2;&#x2;��ᗌ5�U�UL��؁��\AA�&quot;8�&#x2;[.eN���c��V�#��E�C�-tT^&#x1;��&#x5;��&#x1c;CQn�5����&#x7f;��&#x4;d�-?�o��ί|J$VKS�&#x4;r82�&amp;&#x2;���XL&quot;&#x15;Vl&#x15;�~��q+�&#x5;�&#x18;in�Nc]����&apos;F��Jv��IU��&#x11;)�_��&#xc;_�1��&#x1c;�y(2�&#x13;&gt;Хeے&#x1f;&#x5;O�&lt;|Q�ɾO&#x4;Fb�i&#x7f;2&#x5;�jz_��4򀧚&#x7;�&#x1b;S~T�ȶ��8�8�;&#x13;&#x2;�a�!B��2&#x7;�V�I���v���kO����2/��t&#xb;&#x1f;8��&#x17;лo}�_�&#x4;:vp�^�&#x13;�&#x18;��_./�Ǡ&#xb;�IO�&#x5;�&#x6;&#x1a;��KU&#x2;b�o�w#&#x5;Ŷ4���&#x8;@o��~5��B&amp;!L��(�qSH�&#x74b;&#x18;�jO@Ƚ�&#x14;l�h��-&#x15;e��&#x4;�sR�9R�x�$&#x17;R&#x18;�\�u��!WĈC�&#x8;�#θ���q�8p��i�r&apos;�QG�5�bj�A�F&#x13;&#x11;=+�?&amp;���0,̼)#�M&#x15;�(;��Ɵ&#x1b;m&#x3;BI�	+��b������G����)/��Բ&#x1;&quot;9zG&#x6;&#x14;�=�8F�&#x6;��D�~^�S�4��.	���cy�P&#x13;I&#xd;
�*ǰ���U��H�H`T�v�&#x1f;5�0�ټ&#xf;���&#x1c;Ka&#x5;&#xf;&#x7f;&#x4;H�Z�@�C�&#x1c;Y��L|U�$^�&#x15;�I��&#x2;7w&#x10;&quot;(��&#x17;�ˏ��(坞D�&apos;�/�*�31&quot;��c��&#x16;ǘ�S��&#xf;aMP`&#x15;)@�&#x10;ܫ���Se�&#xe;f&#x1c;#����_��U&#x7f;�&#x19;����&#x1;��Y&quot;��d��Hx&quot;&#x1a;���8Il���:�P��)��M �,��&#x1d;&#xb;J����8�Mwm�����&#x17;�D��R_&#x5;��&apos;�g&#xd;
��#9�\�-�&#x13;�}t��o�&#xd;
�7�h�ѳ�b�D&#x11;&#x13;�U�Զi^&#xd;
h��&#x13;HJ&#x18;E&#x6;�Z&#x3;��&#x3;K)�&#x18;�G�]&#x11;kގP�&amp;d��qC$&#x7;�y&lt;�&#x6;7�G��V6�,���Y&#x4;�Zֽ&#xd;
�*&#x7f;&#x8;�G��&#x1b;+T:�wh��&amp;&#x2;�{D&#xe;�g�Lx��Rl&#x8;	�D[M�_�:�`D��N&#x5;�L&#x7f;�,b�K�p/WSk��z�&#x5;��&#xb;&#x2;9B�&#x1d;��u�&#x6;hn���N&#x1c;���&#x1;��`&#x13;�Ϛ��B�z(n&#xa83f;�t����Gᾰ�&amp;�v�V�Y&#xd;�˹�&#x0;�S!��U�	��Gߴ����&#x15;�S��F&#x2;�恷%n{&#x2;�R �F^�&#xd;��ֿ�H�r&#x16;���&#xc;^&#x7;�7�#sa@�&#xd;ٜ�C��9)���ߠ�Eo:��(����5��#�ft�r&gt;&apos;h�&#x10;�&#x1a;&#x17;�&#x8;��;X&#x19;mYX&#x1e;��}�Fs0�?&#x7;y�xO/�5&lt;�P̃�\�{�#��]�߯��D{cJ�_W�&#x7f;�`���p&#x1e; �if:&#x10;..\x�1��&#xe;�k�ß��#l�ː&#x4;�&#xd;
�u���&amp;�V&#x7f;&#x13;��4Rp�/�l�&#x2;��-���&#x10;h3���}��&gt;u�@�P��&#x16;��n�5�C�E&#x17;�&#x3;��ߞ��&#xb;�&#xb;m��&#x19;Ó�t�1��M��&#x1d;�K��Y�C��\{�����&quot;�&#x7f;Z&lt;����W&#x6;�&#x8;(4�槊\�M���x�&#x5;_u&#x1f;�&#x5;�L��F�b�&#x13;�,���[�o&#x5;�K �K��}�$�ZU&amp;O&#x4;&#x12;��8ԕ�&#x1f;j���g&#x0;P�H��&#x12;�(A5�������o�&#x1c;^Pf�f]��-t�D�S&#x1f;&#x5;�gD��&#x3;`���+������ �z�[ٱ%L��w-_�&#x4;&#xd;�&#x7;��	(&#x13;�=���P�&#x7;&#xd;_&#x8;��&#x5;��}&#x12;�&#xc;��4G�^&#x1d;bw���l�s�&#x6;&#xe;a�?��~&#x8;U�&#x1;&#x1;m�&#x10;�&#x15;�E�؁���&amp;ƽy��ة/Y�/�g�AJ�l��&#xb;�&#x0;��&#x15;&#x7;��ni/�&lt;��7�ˌJ��_O&apos;��R�z�3i��/tI�/.&#x1a;�&#x11;&#x7;��@�:��P���)h^��ji�&#x1b;k�$�&#xf;Y�[��&#xe;�&#x13;����W�l&#x1e;�&#x6;�w�/&amp;X��V����#&#x14;�&#x14;CV�&#x15;&#x5ed;�ۻp���a+�aAK&#x14;V͠��@&amp;?uo&#x1d;&lt;ܹ7��+o�E�&#x1d;��&#x1e;�G�&#xc;4���&#x10;E	&gt;���F��&#x1f;Ȅz�ZeW�&#x1d;�7(\����y�-U��|L&#x4;����1�5P&#x1b;?[���&amp;1&#x10;�&#x17;�mK)�X�p�##C&#x2;A&quot;L��&#x15;��&#xf;ᮔ��&quot;&#x1c;&#x4;&#x1a;�&#x15;�q�x�+�����].&#x14;6�ҡ� m&lt;]�&#x10;��B�0Lar&#x0;��&#x19;&quot;����v&#x12;$&#xd;M$&#x1b;&#x5;N�j��X�&#x19;V�7@&#x12;&#x12;&#x1b;xF���s&#x15; ,���&#x0;��A7����!/7��Zd�V0�����%e�.&#xb;�5����e�8�Y����z5W=�&#x16;��&#xf;��&#x1a;Qஓ5WO��7�@�h��#���	&#xd;�&#x13;��A�W�#+N4�&#xd;
N�c�%�8&#x11;�pUk�B|�YU&#x11;&#x17;�GK_���G&#x11;J�&#x7;|_�&#x1d;�Ew&amp; 3=��H��pw�=��&amp;&#x16;a��&#x14;R��]�gaz��9F��w�&#xf;&#x0;8M��p�ή�{��F�����(�qf�|P&#x6;��T2؀�R0��&#x7f;���&#x13;�h�r�k(?2]����Mm�[��&#x19;��=t�&#x1b;��?���M&#x0;��o5��&#xe;��WI�� �V��9w|�&#x19;�Z��R�.7C,�_�.,&#xd;
�r�u3َ&#x7f;�&#x6;��&apos;�ԧ����&#x7;�q?�r�Q�&#x1a;&#xd;Ѐ�&#xe;���d;u�W��&#xd;
w��}�&#x19;�4��0����0À�ĝ��&#x1d;$�v&#x2;c�9&#xd;
�YmS�y��&#x1d;�&#x17;^���� ���&#x7f;�v	,�h����?�n��Q&#x1d;ٜ&#xd;
פ���/�D�o�9��E�$&gt;#يs�&#x7;�6&gt;&#xc;&#x1d;DQ.��tJN����&#xf;�&apos;&#x11;F	L�]{xb��Y2&#xf;�8}&#x14;�V���&#x14;�v\�-�F�,��4�%ݔ��&#xc;�% �U����B�6+�+r2&#x3;a&#x3;�bJi�s*�&#x7;�&#x1a;��S&#x19;;&#x5;��7��-��6&#x18;H&#x4;�&#x14;�4��&#x7f;C�Q!@A�U&#x5;�i4��L]�PY~Z�&#xc;���&#xd;�����&#x1;Y}q:m�h&#x1d;�y&#x10;2�N[-��9�&#x14;�ߝ&#x12;���Sv��&#x3;�KV�N�&#x1;&#x13;����&#x7;}&#x1a;&quot;�N�Z&#xc;�/����D4C�&#x10;s��&#x6;�&#x7f;5�RQ�&#x1b;��&#x1c;&#x1a;�&#x1f;�&#x5;팠�A�Z�)�k��!����?+&#xc;�&#xb;elιj$��&quot;����M&lt;y��ϡ��&#x1e;Az)�=&#x10;.�_�&#xb;�y�&#x12;�&gt;�z���L�㬖�&#x12;v&#xf;�R&#xf;H&#x3;&#x6;s�����d���H.���&#x14;q?:�뙆�[�tcI`�&#x7f;�&#xd;
�(�bh��W�Q n��&#x0;�e���b��4XJ��a�\&#xc;	���E#5.&lt;���&#x15;jm&#xb;��&amp;^����q�@��L�&#x1a;Ox:�6X.�&#x1a;�a��2�����27�Ź������&gt;���&#xb;&#x1f;�2�;3&#x11;A�s_�qI&#x17;�S6U�`�No�R��&#x18;���g��&#x1e;QR�]X�&gt;䴜A�r&#x1d;���M�)l����&#x17;&#x10;e��9�&#x16;au�&quot;{��}1��	*�&#x1b;^g��m^�&#x74c;3%�mM�&#x17;%�mΜ�&#xd;
�p�&#x1d;�T%*&gt;�&#x4;���{i�&#x13;&#x7;d�����&#x5;&lt;&#x1a;:��&amp;(&amp;��}�����n�kG����Z:��+`&#x8;8R	���ݏ�*E���K��­���&#x8;&#x1f;s&#x7;17KV,+d̏&#x6;&#x1d;&#x0;�ou$.&#x1d;�&#x1a;H�q�r�V&#x12;@&#x8;��4&gt;N&amp;C&#x16;ͷ����+�����&#x3;AU��(�Qa籖r2��ʄgkp}rM���-ݧ�&#x6;N-�&#x13;Ŭ3��n&#xb;R�~�(\P�&#x15;6�C&#x2;!�CK��q&#x1a;&#xd;�w�Q����=o�v�k&#x16;?�F�v��AK-j&#x3;*釟&#x2;�&#x17;�y,�&#x14;n������K&#x8;��&#x2;��Al&#x7f;�A�&#x16;�,RqqX&#x4;�*�9��F����9�g3Ώ&lt;�G$l��&amp;��G9��?��r:&#x6;�&#x1c;��9{�&#x14;&#x1c;S�&#x1f;�g�&#x1b;2���#A9����W&#xb;�9&#x1a;�8U�Im&#x11;.���?�Aօ�V&#x1a;&#x1c;�,���d�H+�=Ӆm&#x5;�o���mA���B��&#x14;�����4�&#xf;E�K�۸��H 1�^�&#xd;c&#xe;�ĽI&#x16;/&#x8;hÐ&#x19;�r��qn�&#x4;��l��@�&#xd;
�샶���ߴ&#x15;H��9{HX�A��	.�&#x1;W��ɟC*&#x19;�a�&#xb;����pf4&#x0;4X����(&#xd;
�AM���:~Q ;�&#x2;��b=�ix��&#x17;�@&#x7f;1��N&#x1a;X&apos;�&#xd;@�&#x18;oƋ&#x3;9C�_;��&#x1c;��X&#x0;Z��M��I�%�&#x8;��$�&#x18;&#x16;^�&amp;n^�M�}���gA����&quot;&#x1f;�aJr�O�c��&#x10;S̘1&#x12;��&#x1f;&#x13;n$&#xb;O��&#x1a;~&#x15;I��&lt;��Z���z�S���L|��sy��6~��z&#x1c;`{&#x2;�K&#x6;���	&#x18;�R�V�&#x6;�FG&#x17;������_��$�&#x18;�7���Eķ�g����4Bat�W{%&lt;�	����&#x14;�RQ�D􍉨&#x3;!ْ@t�&#x0;��&#xe;�0A�&#x15;�&gt;�R	��&#x1d;�&#x1d;�+&#x1f;�L7�s&#x1a;j��L��p�X��&#x15;�&#xc;p&#x12;u�]i�gާX_�1tsp&#x1;�/8c&#x6;�F&#x1c;&#x1a;&#x14;d*&#x2;L̂*&#x12;.�4�#�o��&#x4;X��&#xf;&#x4;��6&#xd;�&#x3;���&#x83;��:t|)[���8I�&gt;&#x13;U�&quot;&#x0;�z&#x0;&#x12;&#x12;Q&gt;���\�3�pӀ�Cߍ�b�mͬĂ�u���&#x19;J&amp;&#xc;Q�&#x5f6;&#xf;�oz*&#x10;x�w�&#xe;��}Ɯ�A�:�k�������ef&lt;��k�ۘ��&#x8;@�RϦG�&#x8;�g�C&quot;�q;��&#x1a;x��&#xb;&#x5;&#x3;���pE=�B�.�la&#x1e;��L����; ��s&#x13;&apos;�${ڜ�*Kx&lt;(ƅ�&#x1d;g����&#x7f;&#x10;F�&#x3;�&apos;��M&#x1e;�dZF��]A&#x5ff;��}0��}s.&#xd;
���B�Q#�� ^�JmK�&#x1f;�J��4&#x2;�&#x1f;8L�a&#xf;������&#x1;&#x0;b�u��D&#x7f;=��򔸎&#x15;����8�&#x17;��ߝ&amp;�����&#x2;x�����zz1�3��Vc&#x11;��&#x12;NMzz&#x18;2�&#x1f;&#x6;�������;-KH�zXBPs%0[���&#x7f;X�&#x5;�:&#x16;����!���#�Zf&#x13;�&#x10;ST�h�I��w���2;{&#x8;͒$:�~�f^&#xb;ߒe@�&#x18;��&#x8;&#x1b;Tȫ��vȷ��o�6uۑ�XTC@&#x5;���&#x3;,Y&#x19;f5$)@3&#x7;?&#x11;�E�M�b�F���&#x14;YD7�&#x1d;�f�&#xc;V&#x17;&#x1b;���ϟ��&#x8;ٕ�Υ&#x8;�&#x7;V�Z&#x1a;�&#x10;S����s�&#x8;+�o&#x8;&#x17;��&quot;J�4U&amp;��&#x5;20,�Q�xŸ�&#x7;&#x18;&#xf;�&#xe;�&#x1a;�rq#t�8c©S&#x14;�&#x1b;i�{B�йiV�&#x10;&#xc;�T(&lt;�T�&#xd;
}&#x2;�_&#x15;r&#x1c;�v�c܁s44�\n�J��&#x7;~��+&quot;�&#xf;��&lt;����&#xc;�r���&#x8;..:Î���&#x16;d7]����O`7�&#x6;�,&#x6;�%�M=�ߴ���C.c�&#x1b;ܞ���Rg�%1&#x1;&#x10;k��&#xc;n�gƵ,�q��9K��k�&#x17;U�Ā�^&#x10;&#x4;ɠ��X�*�fJ��zHo�����9�\&#x1b;V\���V]&gt;�:��3ore?XKJ� �&#x1b;�(&#x1e;驥[��r��*&#x5;�+�&#xd;sS�=�+��-��2Y���ߟ��&#x5;66{��*��o�Y&#x14;к�&#x3;&lt;�oF�x��&#xb;�݂�8�w4XK��ui��RE2���5i\n@�$HY	̂&#xe;��^&quot;U_�FB*�����(TC�&#x1c;��P\�8�&#x1;��8Y�]~S�����f��Xo-�_�76�&#x19;��7&#x1a;&#x1e;&#x17;ruq�&#x6;���&quot;�&#x7f;t��/�絟�Z���&lt;&amp;eЦ�|bZ_��4g�*e?����&#x1f;�L&#x1a;�9�:8&amp;�&#x16;&#xd;
s�J&#x19;&quot;|&#x11;&#x7;����w&#x5;]�&#x6;����U���&#x7;&#x1f;�C�&#x10;���A���B=c6����:m�-&#x1;���8�&#x4;WU�ţ&#xf;�/�&#xd;X��~ʟ$&lt;ɥzL&#x1;c�&#x4;v��r��&#x6;�8hg�R&#xf;�7�I\c�փ99�&#x5;��������U�l���mD����S�&#x15;�o��&#x10;`���;���FdsBT�;} d&#x8;�a�����x+e���h��4�o&#xc;����EA�M�k��&#xd;.�XqM&#xd;
1�&#x0;}����Q�}�&gt;�xM���ƫ�N�*�&#x11;��-O7Y��&#xd;
�S��&gt;4�V&#x16;�aN{�&#x4;�1i��&#xb;�&#x1e;7�J�&#x16;v&gt;�1�&#x4;���#e&#xd;&#x1;�%]�&#x1d;WQ&#x12; �&#x13;� &#x10;�&#x18;&#x12;�������^&#x18;&#x5;�&quot;x&lt;@�$���)g�����v�]�w�&#x1;��-�Bc�&#x18;�*�I�T%&#x14;iU��F�0&#x5;���7�&#x8;2�J��Ҏh�~@�#j&#x18;�*�u�&gt;xQ��s&gt;,̳�EU��[&#x8;��&#x0;&quot;���ܭ�rK횾�#947�D(�&#x17;��&#x1;�D�u,��S�&#x1d;&#x16;��_l&#x4;�&#x14;|���&#x11;x&#x0;/&#x1e;��&#x6;�d8S&#x8;��&#x15;�J����ڵqhgBQ����ݕU�=&#x7f;B���&#xf;�]��x��(A�˞�&#x14;CDω&amp;{�Y�J��&#xd;
dXwf�&#x5;����&#x11;@dL&#x5;�%�f�4*�K�b����̩0��&#x6;���.&apos;�&#x8;�6�H�z�&#x18;$&#x7f;_&#x10;&#x1e;�F���k%ܒ��v�&#xd;�&#x18;�P�HfE�+uqLb�&#x7;�V���&#xe;&#x12;ƚ!�Ba�&#x1d;]&amp;&#xf;������&quot;���_�&amp;�ʯ�4�ş��M�&#x17;&#x5;Z&#x13;��0u&#x1c;��R��}�x�]�?%evY��&#xd;
z�J&#x17;u{&quot;&#x1b;��f�L�Av�B2ˁ�&#x8;J��&#xb;*�����;���&#x16;��^|�8�=�&#x5;&quot;q$,�WIf��Lڿ�.��]���&#x18;�9��&#x14;�})�c�����)ݻ�ߨ�&#x1e;�ur�u&#x7;&#x3;�&#x0;&#x13;���&#x6;��&#x1b;&#x1e;f�&#x6;�S]�?��K�n&#x7;z*�ȶVuE�?����&#xd;}x��_&#x12;&#x3;�}�&#x1b;&#x1b;&gt;�RY��&#x1e;ڣ�v,��=m&#x0;�9&#xe;D��}+&#x1;�Ƽ����3�&#x1b;GXκ�V��	�Jc?b�E&#x3;��~����m��&amp;&#x1e;,�1��&#x1d;����v���ll&#x1b;�&#x2;�@���|&#xc;&#x0;��&#x7f;H�[N&#x1d;e�ۏ�ìZ�vڲgJ &#x16;W&gt;����Fp&#x15;}�%�x6���ђZ±&#x12;&#x18;�v&#x378;�¸&#x15;h�22�&amp;�3&gt;�&#x6;�R�n����E�HȘ&#x19;b�&#x0;�&#x11;�&#x1e;r��&#x8;�X�+&#x11;Y&#x17;�O&#xd;��A����O��0���㈯�RPqs�!�x9J��m�&#x13;�g���Yߖ�H���0����8�&#x2;z�&#x5;h&#xd;
&apos;�]�&#x1a;I&#xf;Z�8H���k(5�&#x14;�d�&#x10;J��ə�r�8�g&#x7;����&#x8;&#x1e;no&quot;&#x1a;rc�Ld)��&#x11;#&#xe;���d��9}��/���T&#x15;����&#x0;�&lt;3���I¢�&#x7f;��&gt;&amp;P�x�&#x1b;&#x7;����*�K�2�T�Gh�p�&#x4;r�s�����&#x1e;�5��Ζq�&lt;!����&#x2;��*R&#x14;�������&#xe;Ő/&#x1;�J�4��&#x13;�K!G��oz�۪�Y��3A�v�؉�&#x19;&#x6;&#x1e;�mQ�cT&#x7f;�SzH����4&#x1;ìi���)#o��tU��Lx���n8�&#xd;OҴ��D���,9N�@m�dn}.H�&#x0;�A�$�p�#U�#&#x1e;H�&#xc;�M.&#xd;&#x7;�]��]�&#x8;���}&#x17;��˂���Q��&#x14;&#x1;ǯ��Q�:���NM�&amp;�4�I&lt;&amp;�#���2��D9݉&#xc;nx&#x1b;)��T�U�4�	m�Alq��У&#xe;�����:�q��)n��t&#x1d;��(���&#x8;�,c� ��&#x1c;6����&#x1a;Y�&#xd;�y�2u@��M��&#xc;���ݑ�w���~�N�&#xc;���&#x0;fER	t�q 4�/��\Qv��C[��锟cPξq]&#xd;�sg�[�d&lt;�4T��h[&#x14;d�܂�9M����S&#x7;��&#x10;&#x1e;u�91��&#x1b;���#��0R�&#x1f;2JY`�&#x13;&#x1;h��&#x17;,&#x4;8&#x4;�r�&apos;�)#���H��S&#xb;8�&#x18;c|�R&#xb;G�t3�&#xe;^-F?��㢖94&#x3;��#&#x7f;�6�&#x11;�u�@|�&#x12;�ļ����&#xe;ư��&#x5;4D�7��Q.���&#x1f;�{��է&#x4;L0a�&#x15;J�&#x7;U�&apos;u�a&lt;&#x1f;�&#x1a;OX�No}�NP&#x1a;�&#x1e;6O�C�&#x5;&#x1d;:��v2&#x19;&#xc;��G&quot;�&gt;�\2)�j�.]�++��&#x2;R�g։&#x1a;�	�L�/Sl&#x12;&#x6;��f@&#x0;&gt;�#��K�Fv�ck���M�0t8�p�&#x16;�W8�PT�&amp;�����g���&#xd;�q���&apos;$�&#x16;�XaA&#x86;6T��@�e����h&#x18;H^&#x18;|&#x7;��|�B]�}�&#xd;�&amp;)�&apos;�&#x12;&apos;�8ʿ�yn��X�����a�&#x1;���}&#xf;߈&#x0;Ya&#x9d;�Cn&#x4;&apos;��B�U�&#xd;�K��&#x557;�D�&quot;�46�?�\6&#x8;�VI�&quot;��T!?&#x0;�x�Z�&#x1c;&#x6;:�&#x7f;�k(�,k�W�&#x1;&#x1f;�&#xf;,�ε��sϫ&#x18;�&#x15;��F&#x16;������,h_3F��C��t�s&#x0;���&#x5;���B&#x1d;�h�&#x4;�A&#x1e;A��ڊ%�ʼ��r�*1&#x4;pw���91�Г�nY%�A�&#x0;��;:�1�&quot;&#x18;���&#x16;,6&#xf;7ȫ����{\�&#x1;�&#x1f;��&#x18;&#xd;
&#xd;�K�&#x5;H�BO&#xd;
G}&#xc;#���[�Q�%&#x1a;8�;��`�H|&#x18;&#x1e;Q۩�&#xc;�Y��&#x2;&#x7f;V�&#x1b;��&#x8;cƩ?MڕDP�Bꢶ�&#xf;&#x1e;&#x19;t�=ѐe�?t�t/���[&#x11;���Q�G0�HV����zj�Aa4A]@�&#x1;�-�p&#x0;�z&quot;&#x8;$&lt;@�[0&#x1d;#-Y�]&#x1c;�o��y��&#x8;�0WG��&#x15;[^&#xd;3ߠ&#x7f;&#xe;�(,��6�&#x17;&#xc;�ZV��z�}�&#x7f;W�w�a&#x17;)z�&#x1d;��l�A&#x2;&#x1f;G0�?_�&#x1b;W�;�ڿ�A�ZQFƏ��f96&#xd;&#xb;�&#x19;�E��&#x5;y��b&#x14;&#x1;�&#x7;���}���&#x37f;��I&apos;��$�i&#xb;A&#x1b;	n;�&#x17;���{�K�&#xd;
&#x6;�F���&#x11;���$X&#x7b7;��l&#x17;J?&#x1d;&#x10;D��[:�)��:��I�&#x16;�l��&#x8;�_m&#x7;n2Z&#x1;y�n?:&#x6;���J`&#xd;`D��e�&apos;k�!��),n��`&#x5;��kjuѯ�#&#x17;��7�R�5�8&#x18;�&apos;���u&#x14;���&#x1d;�	�D�X������;�=)&#x17;�*_�-C8�:&#x1e;&#x19;(ܦ�&#x10;_&#xb;�i���&#xd;
�S.���X��_��e���&#x7;UJh��ƺ̗m�&#x1c;�&#x2;�QH)�&apos;�Y�&#x13;��&#x16;��&#x14;ʍ+��&#x1b;+n-G&#x11;&#x1c;J0�&#x1b;5Sۄ���-�Crl�&#x16;Q]Jf�&#xe;&#x17;&#x14;j�&quot;�&#x7;�m&lt;�̡&#x14;��&#x7f;68���=s&#x7f;��&#x6;&gt;|t=�&#xe;N&#xd;
�\&#x1e;�d+;���3�|�eI~&#x8;�&amp;!�l&#x12;uڅj��I&#x2;�ƹb͘&gt;�ԋ�&#x1a;&#x6;���)W&#x18;U�ತN�?�&#x1;�cr�4�X���&#x13;�&#x1b;+�ufidS��g�&#x10;����jY�&#xc;��%�&#x7f;$�q8!&apos;�]�&#xd;�5�Or&#x2;�gG�X�	&lt;m$&#xc;���&#xe;&#x1;����2Fs:pt&quot;�Z�&#x13;�iOcE&#x17;U�?w�&#x17;���8�0&#xd;]��&#xd;
�[&#x5;}�;����&#x2;&#x4;�����lO�H��3���q�y&#x7f;+-&#x7f;�,�&#x14;\&quot;]QTJ�Qd&#x6;�&#x12;�-o��mw�~�s��%�R��ۭ|��ءI��3�&#x13;�O����&#x8;sVlR&quot;�,l%���۵����&#x19;�0��B��+�-z&#xc;&lt;&#x15;yd�&#xd;
���&#x18;�!�&#x1e;�2TI�&#x12;��Z���&#x1;����b�A�1{�&#x2;�q�a�Y~�ԣ&#x13;4��� b��Qu��&#x19;&#x15;��p���&#x10;6�6�M�Vnsae]&#x1;j&#xb;aƊ�8,V�3!�6/&#x1;��Z�@zDO�&#x17;~����@r!�&lt;i~���X��A�O@Y&#x17;_=&#x1a;�[&#xc;&#x1a;&#xd;
`o����`&#x6;Y��7b�z�&#x1c;V�3����f��*v_l�����&#xd;
���{&#x19;&#x17;�N�&#xe;�px��#�*	&#x13;Jg��l�H�R�b��&#x12;�&#x19;U&#xd;
�z,&#x1c;֣Q-ʰa.�j�R&#x7f;����i�&quot;�,R��&#x1d;m&#x11;]��G�)&#x2;r$$&#x1c;@&#x1b;��3~:�v4&#xd;
��l�&#xb;�zP�a�&#x1;u�5U&#xd;&#x1c;.SG�H���&#x1e;�H7��P��ُ#&#x19;�d��N&#x1f;�X9��&#x52c;�&#xd;&#x0;���n6�霥����wI&lt;&#x4;e*�mT�&#xc;ޙ��_*�V�m��(���&#x1;AC&apos;���mw&amp;�X1��`u��F�&gt;&#x19;^p��&#x7f;�t���Zr&#x13;&lt;��9��&#x6;P3���6�&#x14;9��&#xd;
�����a�+&#x1f;&#x11;8�J�&#x1e;&amp;	��7f!&#x12;�&#x16;&#x14;�p&lt;k�p�X�&#x7;��&#xb;J=�2��j�(�9Id��I&#x3;V��\�+lw�@n&#x17; �&#x7;�&#x4db7;T&#x1c;�=&#x8;&#x6;&#xb;�S�M��(4o�,���X�&#x7f;&#x1;ܴ)V�&#x0;&quot;օp�q&#xf;T��-,:��Y�u&#x4;T�z}�Ņ8&#x14;�^j�&#x1a;Ǘ&apos;�n�&#xc;|���,��&#xf;;�&amp;X�Fg&#x1;�&#x1e;l&#x17;eI�&#x4;�s&#xd;
J�s&#x7f;-��VAd�&#x14;+8��{ ���&#x7f;G�ڋ5�&#xf;&#xb;�&#xd;o�k���4�����2�I���&#x1f;�Oᤒ������}�m���ž��&#x12;a��W�\�{�zbM&apos;O&#x7;�&#x7f;[j�̷)	�/�� ���&#x5;�� �g���S�&#x11;Q�]&#x6;&#x0;�&#x14;�LJ_N&#x0;&quot;�n�2&#x11;L�u���;�J%���N��\W�U,CEVF��Z����=�5#�f��+5�bx��&#x8;m�2�c=�Bȫ��5L�`5&#xc;Td�VOq�&#x7f;H,۞2�}�8�&#xd;
�)Ѿ�&#x1;��&#x18;&#x4;�kL+$ՎcL&#x11;e&#x8;X�&quot;��9P�Q�_��j�&#x1f;�&#x13;kK&#x1d;�0�5]{��ܦ��5&#x15;��H��8��9�LU��&#x4;M}�oA2g&#x0; ��t^{o�h��~0b��lx�z�$��+&quot;�����`���&#x1e;��&#x10;��������D�_���&#xd;(U&#x1b;&#x5;�&#x1c;�E3�s�WR���ۮ$�h=��e&#x11;�&#x11;&#xd;
N���&lt;�H]�!&#x17;$�&#x11;	���N�r¤��p[��&#x11;�&#x10;e&#x2;��Dw����o&#x7f;�C���&#x4;�.�&quot;U��&#x1f;&quot;W&#x3;&#x16;k������@���&apos;�n��*�~՜�Q�V�۷}�&#x15;��&#x12;&#x1b;��,&#x19;��߹e�(&#x0;�&#x1f;φ�N���&#xd;&#x14;�v�C&#x8;}�/��&#x10;�m/�&#x2;h��0�&#x7f;&#x14;&#xf;�?��5�&#x7;Ȯ�w&#xb;�W�&#x2;sss=�� ��@�J��&quot;�(&#xb;0����C�ɋ&amp;���+�_U�sJ)V�&#xb;�~&#x17;&#xe;HĂ9�����ǻ�|��M�&#x1c;~�e6&#x18;�&#x18;��뜑wGH/&#x1e;@&#xc;MQ4X��rGo�Z�4�&#x0;���&#xd;
]C�&quot;��&#x8;��A$l�&#x10;&#x6;W�˰�$&#x5;��DT��i=Wt�&#x1e;��A�&#x0;cy��vg��&#x18;��&#x1;�S�y&#x14;����&#xd;
�r�D&#x19;�L��&#xc;���i��t��=&#x1;}t��8�Q�&#x10;&#x0;=�� ����&#xd;
?���ٍ;�@J\�O&#xb;�z�J&apos;B&#xc;3�ܹ&#xd;
�*�a|���&#xf;-ڦ�&#xd;��&#x4;�&#x17;�&quot;���&#xb;����Q2��&#x16;@��M[j�8&#xd;��&#x4;�&#x2;vnf/�g�Q&#x14;�إz���I�LA��V���	��g��?nǬT]�!���a��KW���k�c&#x4;��w@,?&apos;&#xb;��&#x2;m�ft&#x13;��?E���&#xb;E���놁Oi���^н�䚷�|�*&#x1e;T&#x19;�ۯ�&#xe;w`� &#xe;���{&#x1e;(��&#x18;��d��&#x2;��&#xf;&lt;&#x1e;3ܻ�$�ZKͺnD�*��`��z��y�&#xd;
�&#x3;MzPѐQ!�T�1&#x18;m��]�b(&#xf;�K&#x12;%.����Q&#x0;aG˶&amp;&#xb;�qˌq0hr)&#x1d;�,��c��q�gu���&#xe;{����!&amp;�9��?��&#x19;h�tV�/GY+h�\┼&lt;�&#x14;c�cr�&#x8;��A&#x1f;�&#x2;}��^)m�*[��;��D&#x12;B+&#x1c;���9.�T�&#x8;}&#x1e;&#x12;�ܕ�z!�ڇ�[���&#x1d;&#x16;���t&#x16;tC&gt;yu#&#x5;�ݺw4&#x12;��uR,&#x1a;�~[��H&#x2;L1&#x1;&#x11;���&gt;&quot;&#x19;��;Fp&#xd;
���&#x19;��+9��k\�&#xd;&#x16;&#x7f;&#x7f;�܏�`&#x6;̆��9��n�(z$к]Ӷl&lt;&quot;1&#x1a;&#xd;
���s&#x16;�x&#x15;o�&#xe;��ܞhgH�Wh����F&#x5;&#xe;��qz�6&#x7f;Eo\��&#x1d;(�&#x1d;f�&#x4;��&#xe;g`{yx�GL3K,	���&#x12;l�&#x4;�5U�?�&#x12;䲲&#x13;hdF��&#x3;&lt;V&#x1b;=&#x11;����{&#x8;���2꼄��e=��Ύ�q8&quot;�ɻg�&#x15;&#x16;&quot;��L���?�u���Q=���&#x7f;R[cj�N�-��&apos;��r&#xd;
�6�Ww?�p���~��&amp;�G�����Y5��&#x1e;_�&#x1a;|�)q���I�&#x11;&#xb;`����m&#x13;+&#x1c;pM&#xf;&#x5;�/��V��&#x6;m?R#5�a*��4��&#x12;�(E&#xd;�&#x7f;���fr&#x17;h�p��+�^V�-�@&#x1b;���X��&#xd;
	q}�&#x1f;�&#x0;�Ϡ杙�$�&#x13;n��c&#x15;R�XKE&#x18;z&#xf;��&#x16;&#x4;�l���&#xd;���q��&#xd;
s@yCX��	�as��T�&#xd;�d�B�_���eJ�/&#xd;Ѵ�&#x16;��x�7uu+捒�Ȭh�P�&#x17;����%s�g��9_��2rm�*�&#x0;@ح�Z�)&#x6;o&#x1b;�\N��&#x1f;�τ���&#xd;
�&#x11;:�L��A8�&#x1;�rL�*)��:#�_3{(&#x1;���&lt;@&#x19;&#x3;�&#x17;Y���K-��~W�Sⓜ���G�ޔ&#x1b;p����.&#x1d;m��/��&#x3;&#x1a;&#x1e;��	�3Ʈ�2�=v���^&#x6;��P�&#x15;��񒉙	˄u&#x7f;��&#x8;=��O���&#xd;
�3˸~H�p�.�Բz&#xe;�?q�]�&#x1e;��A&#x15;\?q�ڨS�J���a&#x1a;�2!��d�k���r&#x3;�;&#x12;�sql����&#x15;&#x4;Z�9�wF��B�&#x19;&lt;&#x1e;4f1͵�9�|SL�+&#x3;�k&#xf;m����&#x12;/p6i���Ԃ���f�:o8.�-&#x3;&quot;��J~9xϧ��UfM5&#x0;�&#x13;X|N��&#x2;G����&#x1f;�&#x3;�݇�Q&#x2;b&#xb;ે�&#x3;&#x1d;�d5(w�Jv� 7&#x6;�&#x15;PL�Y0��z&#x6;���&#x1c;��&#x7;��V�&#xb;��Ws�&#x13;YШ�#dɎq�+�&#x17;K4�4��ߡ&apos;&#xd;
#W�Z�S{U�&#x11;�w��&#x7;&#x1a;&#x7;�*�����Q]�X�&#x0;�n���e&#x19;��K&amp;[x&#x8;F�&#xe;�&#x1c;&#x1e;���ꞣ��G��\�4���R&#xc;�:[7�B&#xf;P9&#x11;&#x7f;l^&#x6;���+1A�O�;�����}u&#x19;h\&amp;Iu��&amp;��&#x8;z&#x14;� �R��THʱ&#x6;���LHP�&#x17;Es�ia�O�2&gt;U�B�:���1E`z!4v)�W08�����נ���&#x19;�X���&#x12;)48�QZ�~�Bo����q�X1�[H�&#x5;%�&#x8;���&#x7f;��:��/��n_���s&#x1f;&#x2;c�$���$%ֵ1�K�&amp;��yz�ȃl7�6�)PaPa�&#x16;ab���{�^b�&#x16;c�r&#x1c;�s%&#xf;q�x���&#x18;�&#x1f;v�HS8�&#x14;&#x5;&#x7;6���7��F�ޓNW�YcI�\�g����f^;��:���gi����}&#x10;.��3X�I&quot;b���R����Q&apos;R�rҁ�fW&#xf;�y^@&#x1d;�&#x1f;�G�ηS��X�ӆ&#x3;��s�&#x1c;&#xd;
�3&#x1f;�ȟ�����N���!i&#xc;���8Gg�*&#x16;��|;W�C��+�Y&#x14;1|8v9��&#x13;v��L��&#xd;&#x12;�&#x6;�(�}�ҽ3�&#x1b;鷈w���xZ�B[�m&#xe;3���`�&#x5;�&#x14;2�k��&#x7f;&#x1;|�К4)t|�&#x1c;&#xf;_yR#o,�4&#x1c;2&#x1a;��)�̰�&#xd;
���K���{&#x1d;��:L�8&#x12;�tY8�~���U�&#xb;�C�}8IX�{@�o&#x15;Y$&#x0;3��m&#x7;&#x18;�3/j9,C��	&apos;&quot;O&lt;�2�&#xd;u��]&#xd;����o%@�����:�}�&apos;?&#x7f;$��&#x10;���)�GZF�!D�	S�z�3&#x1a;+Oϝ&#x7f;�㦤یKͣ&#x15;m�0Ѕ��&#xf;F���zK�	v�8��ب9*E�%&#x8;Q&#x588;�R��\&#x18;(&#x11;k\B�`�&lt;���Ѐ&#x1;�&#x7f;�,ʇh�u&#x1b;&#x19;�e�!&#x2;&#x1;B�&#x1b;&#x11;8�&#x14;&#x1e;&#x10;�)��&#x2;���&#x16;Ĕa&#x1f;&#xf;퀟ק6$4�N|�&#x6;�ޟ&#x17;&#xd;
�&#x1d;&#xc;Mr�Tp�Y}&#xc;�4a�O&#x6;$d&#x17;�}:�&#x2;H�B�&#x12;�ߒ��9Q�&apos;�?��s&#x16;S�p�iCUZ��q5�&#x1a;&#x6;�Ix(���(9�#�&#xd;�iA�g�&#x1;tn&#xd;ڞn��d�&#xd;
��Y���&gt;�&#x1;�&#x15;&#xb;&#x16;�[&quot;��8�\&gt;TS&#x1b;&#x1e;��S&amp;��]{����#�M�&#xe;����HQ&#xb;�-����jK�5L�A�C�&#xe;ğ&#x1;&#x16;��^�+G&#xd;K&#x5;&quot;]n&amp;�*4Ag�&#x1c;�&#x15;*ΦE�?d��&#x0;r�A�&#xb;&#x10;J����3�GR&gt;&#xd;&#x10;�Eŋ�;� ��{@�&#x12;��5���o���b&#xf;=Y&#x14;����ܪo�rV�l�-3F�~���3Z+F��9��l�W{3���&#x19;�T`�ָ�쿝�r�l�&gt;&#x17;����&#x0;&#x16;�&#x18;J*ie,�f��&#x19;�&#x16;.&#x7;nF�S�&#x8;�����&#x10;�&#x1b;?k.&apos;�R90i�Y;�&#x14;���F���k��/Kds�&amp;�T�X�&#x1f;�n&#xd;쫰hquE&#x1;]������.�J�u��&#x0;C�fĺ&#x16;&#xb;N��G(�K&#x15;&quot;&#x1f;�&#x1b;���4q��2��R�&#x6;Q����Il9e�&#xd;
&lt;@	�a��b9���r��y�I���L&#x1e;洉�����I��\��J��&#xd;&#x1d;�/&#x16;Ծ{Ax��ͼ&#xf;u�jO���&#x1a;q{��&gt;�&#x3;�ߩ�ں�G��j�&#x2;��&#x1c;4b���&#x11;&#x1b;��&#x4;&#x10;&#x18;&#x4;�`�&#x4;&#x2;��o��!�k�&#x11;[w7��&#x5;��b��!���Q��5��-P�&#x1a;c&#x1e;d��`_&#x10;M2g�z&#x1b;eq���Q;&gt;?/&#x7f;�!&amp;�K��gA�&#x5;!�0�&#x2;@�&#xe;���w�i&#xd;
���&#x1;b&gt;�Aݹٍ��a���v=�},�����&quot;�&#x3;t�&#x1d;��&#x11;L�{��?[g�!X&#x6;&#x16;�&#xd;
ep,��8&#x2;��&#x16;BN��N1&#x12;�}��&lt;�&#xc;�~ٱ�x��&gt;�.&#x7;���x^^i[؈�&#x11;&#x18;菏iZ��^�$:-��,�畞�����IuE~p!*�h��_,���&#x80;&#x3;R�Q�r�� o��ϖ^vJ�hm&#xc;I,iy�v�T&#x6;Ez��Q�ܿ\��S.��n��KN�k&lt;R�|��4&#x6;&#x6;�BA�&#x12;tz��&#x3;��}	�&#xd;��:���&#x5;��| ��5b,�&#x17;&#x1f;�vyD���C��7�ҙ&#xd;\����c����&#xd;&#xe;Νr����4=	��du����ڬx�+w&#x5;8�;L��.y&#x8;�&#x1a;[L&gt;�7�&#x1a;��0&#x17;�&#xd;
{DMJ�:�$:v�G�4g_��n��Y�z_�g�R�&#x17;�v�݃	�&#x14;�&#x1d;��{����خ�u��Q��L��{�u���&#x1f;uz��&#x16;�}�k���.��es!�±3^C�&#x14;�(2&#x1f;�7��ι�&#x7f;A���&#x11;&#x10;.Ģ���&gt;�]#&#x2;�&#x8;V&#x15;}�i9E�l��0��挲�`�(n��И6����d&#xb;i��&#xc;�&#xc;W&#x2;�&#x19;�e�̳�&#xc;�&#x8;ٓ��-��&quot;���=Λ�sD&#xb;/�&#x1c;p���d)G/&#x18;8+�{i�3�HA��6&#x1f;�&#x1d;&#x17;ʃ�ˮ&#x7f;���1����&#x1;&#x7;P��u�vǏxs�&#x15;����[�&#x11;i���~�X#&#x1f;�HCZ|/&#xe;aw�ԛ5&#x11;0����Bx��fU̎c�&#xe;�y�˖�����i���H�U�&#x7f;+&#x3;U&#x13;RcRe�g&amp;�~�#�&#x17;�D�6n�� ����=�/n&#x16;��ގ��x&#x1b;�	+��rP&#x1b;&apos;�E���&#x0;V��&#x19;CT�L������q�!��E&#x7;�]0��T��3e&gt;�@d����g�Y����N�]��&#x0;&#x7;9�&amp;���[�&amp;�&#x14;���8=u&#xe;E�8&#x5;�TKMy �����&#x19;�a#�V��&#x4;\9���&#x4;���%�&#x1;нANn�c&#xe;��&#x3;���&#x0;Mi���&#x4;�0�_�V����&#x15;&#xd;
�l.]�W��0j]��&#x10;�l��.���&quot;x&#xd;
XY]*�&#x10;�]&#xd;
eW&#x14;����c&#x0;��1�E�2&#x13;杴J&#x1a;4�&#x7f;&quot;8��!wUa�A�#�י����3�緒C�&#x7;pʱ�����4�/C=�E�ɾv�c�����&#x8;���$�*�&#x13;�-%�$R}��&#x7;&#x19;wi����p��&#xd;
�1&#x11;��&#x8;���&#x10;&#x1;�&#x14;G+�z&#x4;72Nu��2[Q�x+&#x3;r�&#x1c;O�^�h�d��&#x1;&#x12;&#xf;�.�&#x16;m͂��&#x2;+���&#x16;��֓&#x18;&#x3;�iG��\�0�5[&#x10;�V��7�Ma&#x1f;�&#xe;�淥&#xe;�Sk��U&#x12;���Nǿ�Цn�Ի��j�&apos;��c0ZB&#x3;XJ�6&#x1c;�k(���t���E�&#x4;ޅC&gt;&apos;{&#x1c;���&#x7;E��P&#x1;�y	�&#xc;�IDof(9���캵�.%&#x4;I���F&#x1b;[&#x13;P&#x1e;e�&apos;���Q�#.}�&#x12;�&#x1;&#xc;�9��;[�x��&#x1c;�H&#x1d;&#x14;��AgVg�����zn��&#x8;�?&#xd;�&#xd;
��4ͬ$�f�x�-N�U3cbHX�64&#x1e;�&#x3;�~���ݸ�C���{�[���&#x19;�-�&#x8;�h{?q�&#x1f;���l�[���ݿ��&#x11;&#x7;N裞F&#x6;C���`q&#x7b4;��n/����&#x86;̠�5T��%�\�6!T/&#x0;�f&#x7;a`S �Ip8]�k���n���:t�ċ��&amp;�mX�)Fy�&#x6;�&#xc;�2�u��&#xe;-j&#x6;�[��*w����̘~vn���o[&#x17;Jr�&#x11;h�甆guc,�&#x14;P*��q&lt;�&#xc;&#xc;&#x1f;&#x11;P���c�hp��h*��or\ZI-��Q��&#x1a;ڍlnp&#x18;t)v�e�u��k�$�&#x10;�&#x7;�&#x10;v�.�Q&#x4;	�&lt;�*�Ks�&#x11;��ZQ�!7�&#x10;&apos;�/��(|_�&#x10;]&quot;j�Y�&#x12;�&#x1b;��&#x11;��^�_��˰�T����|�n�X&#x1e;,QKz&#x14;3���Ɂ�&gt;�K&#x18;�&#x15;������&#x7;&#x1a;��&#xe;8���ߥh�G7�؆&amp;b�ӓD&apos;��7�/��t�H�k&#x4;P�B�&#x14;&#x3;�1�V`�Rv51�C�&#x1e;&#x2;�&#x16;�&#xf;-L&#x14;&#x1f;&#xd;ud���P&#x17;�R�v�3&#x1a;&lt;&#x6;~ة�̡���&#x19;���&quot;�g�z�&#x5c9;.Ԍ\�[ ]&#x13;&#xd;
�&#x5;�n�4w��M��.90&#x10;b&apos;2,���rX���=G5�A&#x19;�j�6�y�#Wxbՙ&#x15;�0&quot;6���Z&#x16;̫�RL�H&#x1d;H�ώ�]&#x3;&#xb;0�&#x1a;���&#x16;�]&#xc;E&#xe;�w+�ͨ�&#xd;��@&#x16;&#x16;����$�q��b�4�{���&#x1e;�)�k5���m&#x1;���~�]n�?�HG��y^7&amp;�!�$&#x6;h�݂)Xy&#x1a;��d�f��&#x5;�&#x13;�t&#x19;�iN��ǂ	���4�&#x6;&#xc;@�)�^�&#x0;�g����I�&#xd;
����r~�C&#x15;��l��aE�˓F\����/�c��&#x1c;��&#x1a;~�Qw�i/�KS�ʙ&#x5;�@E&amp;&#x8;g����%�kX�&amp;&#x17;�G���&#x1b;0%�&#xe;�7�#�&#x8;&#x1c;�y�&#xd;�!���GI&#x11;�.P&#xb;����֘&lt;�$P�Ȋ7	�������)g&#x6;Sj&#x19;��&#x1d;��P&#x1f;����_z�r��&#x7f;_�_~D��֠7�&#x1d;r?�Q�K5��9[l#��dc��@)�0�k�_&#x15;pA!&#x1d;U���.�6nR&#x3;fq�2��+�A�f�Y��&#x17;�&#x6;)7�&#x1f;!&#x18;?�&#x1;�&#x5;b2_)sG.1&#x1d;[]&#x1;O\����n��EܡN�&#x1c;$1�-8�&#x1e;&#x5;���&#x1e;��&#x11;��π�K�q��S����&quot;$�ǵ�Z��ʠ4mW��&#x13;q�D&#x8;�D�������&#x19;��_���0�s�&#x7;�n.��4�%&lt;�~��̜@Ng��&#xb;NTЫ��Q�z�&#x11;cv7�����&#x8;&#x0;��;~PK&#x7;�AsL�&#x4;-�ɘ7��&#x1c;&#xd;ϱ&#x15;��j&#x14;�6N�&amp;v&#xf;�R2�F����z��]��Q�#&#x10;&#x15;8&#x0;(��&#xe;&#x3;(Zi�p��Q��k&apos;�&#x12;�&#x19;m��c&#x14;���Y�u��&#x1e;����-`R$5��6&#xf;J��ׁ&#x1c;j�B�&#x7f;���is���I���=;�-0�&#x19;]p��_���t	Lxi�);z�ǭ�͆����&#x5;K��\&#x14;�P�5�K�!,&#xf;aZ�oٙ&#x4;L&#x4;�&#x13;�&lt;�r����aI]tFA&lt;~�랑�Fx�+���&#x2;j�&#x12;g؆&#x1f;Ad�|��c0&#x1b;&#x3;�j&#x1d;�e&apos;�Jx���[�O:&#x2;-�iζ&#x7;���|M�&#xd;
?Ò�uW��h��S�&#x1e;�&#x1e;񆬣g��k�Ȳ�&#x6;&#xe;T�]�T&#x10;&#x19;&#x18;��o}&#x1c;J��(�h���Y��y.����*�&#x1b;S&#xd;�&#x11;�F�X!�9���q&#x19;J;�&#x17;b��y�[�&#xc;�w4&amp;&#x7;U�pM�-u-�y&#x7f;V����kI�w�^���T��&#x14;8��,&#x3;&#x1c;&#x8;�&#x1;&#x6;���ZP��Ȑ�f~&#x8;~�ϧS6��N!%��&#x12;&#x13;H�x&#xd;�&quot;N3J&#x14;4d��&#x7f;M�&#x5;�&#x7f;&#x9a;Y�z$�Co����0&#x18;+G&apos;��&#x12;&#x5;��D�&#x10;2V�cP}+�Y��&#x2;��^x�H�UAd�&#x7;H6�&#xe;�iA�&#x1a;�ggݺ����&#x1e;&#xf;&#x6;&#x1c;�*��̩rm״O�&#x98;��&#xf;#��\�^&#x1;}��n&#x14;��]�_Ř&#x1a;�J&#xf;*_c�O�B&#x5;&#x5;�J��? ����5��T&#x1a;�&#x7f;+�{�&#x1b;�TDj�S�L�v�G&#x1e;_:ȏ��+���&#xd;
&#x6;4.�G��K��1nB�S F8��&#x1a;E0F,�,�ݱ���y��L&#x5;�&#x12;���&#x1;ܩ�&#x8;���/t&#x1;�Ǌ���&#x11;&#x4;&#x7f;[.���u}BC|P�M��&#xf;WNy%J�Jz&#x10;&#x10;kg&#x15;;+�Gܸ&#x3;���T����V�ڝH�����&#xe;֝���y.ڙ����s��/f���x�&#x1f;	�&gt;.��1yu=h����Zu�&#x4;&#x10;���&#x1e;�ٴ�&#x1d;&lt;G-&#x6;&quot;��&#x7f;V�W�&#x7;� 1-%�~�6��&#xd;��U����&#x4;���&#x7f;l�8|8�&#x10;v���&lt;&lt;�&#x7;)�?$x&#x1c;��~}pi����.��2�&#x1;�J�0��R�P&#x1c;0땛4�f�p-��/!VE3�J[T��E&#x1f;&#x2;WMp&#x7;+�q�&#xb;P ��&#xd;
&#x12;��  @�\���6X�ҡa�*��V��&#x5;�&#x15;��&#x17;�*�&#x0;ʵH]ߠ&#x6;��}�O|&#x15;�Y�7��9H&#x15;^\z�&#x15;2Q�4��3(��&#x14;}t���2�l�̕@])�ts�v�Y�u�EUU�t&#x12;���&#x1a;kq�d�O�B&#x19;�[��p���B�c��3n~s{b&#x6;#�ɜ�&#x4;�����&#x2;���`��C��Ł���P�&#x16;sیQ&#x1e;qC��2O����!��n@3Lcy&#x1a;4�w��;����&#x1b;��ƿU���uK��&#xe;&#x14;&#x7;�;�63���&#x0;�?��(yoԅ��)&#xd;
�&#xf;��Hh���6���(a���͐n&lt;��&#x1c;�&#x13;z�9��&#x1d;Ē�;�-Z�7궺&#xf;&#x3;�[&#x18;�ɗ���&#x1d;A�w��,����m�iQ�MD�&#x10;4^�)������kĜ�&#xb;2�9�q��&#x3;�9&quot;ϸ�6q��&#x16;ݑ&#x3;��m��31�t&#xe;&#x12;,�&#x6;���&#x0;R�&#x6;{�̈́������&apos;+���ih&#x5;O��~�SS&#x10;��yL��:I�&#x1d;&#x16;m擉&#x1a;�-&#x14;�e��9Qd(0�|���Z���� &#x1e;�.4�)&#x1b;G�cH��Z&#x0;��wF�&#x1a;��&#x7f;]�Ɩ�$�&quot;xU�}�Rv1&#xd;�7&#x7;b�)ǁ6?�wno�&#x19;�&#x1b;5�wm��ve�&#xc;��UO�b���&#x19;;NQ�F&#xf;&#x18;&gt;�&#x4;ĭu3��ǟ�����-P�Q���&#x17;S�^?�Gqz�L�&amp;8v&#x1b;g��猫5�3TA��X7&#x16;&#x19;&#x7f;#&#x5;T~D*�Ǣh���(�U��&quot;W�J&#x19;�}��W�S4��چ��{���KR��z�Q&#x1c;�u}pӄԎ_��ؔ&#x19;�&#x0;�d*&amp;֒$&#x1;�M&#x5;^G�`8���/vΩ�&apos;k?x�d���_��&#x0;��&#xc;��Ny���&#x0;�Y��*H�t3~�&#x1c;��r�_��6ԟw&#x3;��&amp;&#x1b;��C�o�&#x1a;l�z�&#x17;&#x6;�Յ��z8�&#x7;�Z�����Q%&#xf;S&#xb;&#x6;*(��&#x12;M�0&#x19;�Z2�Xg4N�:F!Ґ2�=ϗ|&#x11;C4��ӑrUּ!�&#xf;͟� �k;ì&#xf;&#xb;�|�t�)w&#xb;	��&#x10;�,�~T+��{�\�&#x4;�L�0&lt;fa�g�&#x8;�q��.&#x6;�aF�y&#xe;�$�D���M�b�P&#x12;��)�&#x1d;�T@��Ё6U&lt;D�P[)M�&#x1c;^,�H��&#x7f;Q&#x16;����7&#xd;
��q����&#x4;6��b��Î��!�	R8��.��1�8#��&quot;�&#x16;�`*4?a��]&#xe;]&apos;�&#x1e;B�N�$ށ�n&#x4;Z�0�pxO��c�&#x1a;?&amp;��/G�&#x19;�{�&#x17;�!��#`�Q��(�u�f�&#x3;&#x13;���������~Ɨ&#x12;]DO&#xc;��B&apos;��W&#x8;Q����5U��E�&#x14;��&#x11;� �&#x1f;&#x18;&lt;d=�&#x6;�&#x1e;��&#x15;�ߠ����}8��Gl��~\��&#x11;�i����&#x1b;&#xd;
������G���&#x13;Ni�&#x14;�&#x7f;RI{&#xf;�$���!Ѻ�Q {`�c&gt;&gt;Os�&#x15;#�^9S&#x1;�J���,�r��J��TSӐ&gt;d��E�mM�&#xc;�K8|&#x1;H�&#x0;�{�$&#x12;l�0\nหm�[��n��6g&#xb;����&#x1a;&#x1e;�4���&#x1b;��ۥ�&apos;���u��t@|E^w�,�v6����*&#xf;�ۡ&apos;;10؂&#x19;��:5��P&#x16;�E&#x16;��R&#x1e;�&#x15;Q����Rψ\&apos;f&#xb;�(õ�~�9��G��X0���&#xb;~?�oR�SF�u��U���+�-`&#x5;UC&#x1d;��;WwD��ʧF�X{�&amp;�&#x3;�K�2K״�#X���zɸ�v������&#x7f;��,lz9�t�[�&#x1d;��o&#x15;�؇� Ee8j&#x10;���Ug�vy�	�ϑO&apos;.����Һ�&#x1c;(P�ל&#x2;�b���&#x3;�9&#x12;�˴�&#x10;,�빯�`+ǹϢ&#x1c;ɬJ&#x15;�&#x1e;&#x14;�&#xc;o�c&quot;&#x11;&#xf;n���|)�_����ci��&#x13;��*��m��U���yO��H��&apos;�皽#v�QS�&#xd;����ⷳ��72�&#x7f;��[�&#x18;l�G^�#���&#xe;	�[k�D�_�&#x1b;�*3a�;�a�`.҆�1&#x10;��(J����b&#xe;�W&lt;�S8��&#x14;@��,���QyQyi���bb&#x11;5D&amp;&apos;�B&gt;}���0�R�=��]�f&amp;��\Nj&#xd;
�傑i&#x12;+~&#x16;&#x1;�&#xe;&#xd;&#xd;T*VY�&lt;l�6�1�urt1E��oDP�(M�`&#xf; �h͢j�=�-k&#x0;E&#x8;	ϟ�v�2&#x7;ړh-�w�#M�U��Ogz�ג%q�*�p����t{U�z&#x3;�*&amp;�o8l&#x10;&#x5;�|���&#xf;p&#x7f;&#x12;���#w����c7����&#x11;G�&#x15;��$��_�,��E2��	]�{�PC�&#x6;�=��H����^���&#xb;b�&lt;[u��F9&#xd;
�&#x3;Sn�X7���&#x1a;���c&#x1c;���-��J�^?�Ǖ&#xb;�����&#x1f;Ҁc&#x16;	&#x15;�:�X,�;�Y���P��t�Jj�3&#x1e;���37�ߚ�E���Lt �&#x99;�&apos;c���6�&#x1;Iz��Sݓ�K�&#x18;�#&#x4;�&#x5;@o��&#x5;f�H���l?��&#x11;�dL��q���]&#x0;�R�a&gt;��;�|&#x15;&#x1d;�Z@&#xd;8˫�&gt;&#x13;d���S���&#x12;U�1�+v�]�c�ϫ�&#x1;�[&#x4;b=��&#x1e;��&lt;�E!�|u�Q9��&#x7f;���.�����&#xb;�&#x0;�fw��^��/^�7���n&#x1b;&lt;CH9&quot;	&#x1d;��P&#x18;gK~[&#x10;&#x1f;і&#x2;�B&#xb;���&#x2;l�c�&#xd;�&#x4;|&#x10;&#xd;���s�&#x1d;������,$�@a�)Gݮ�����.�; ס�C&#x1b;&#x15;�i�7&#xc;5�%_�W&#xc;MF��7���A&#x0;�?�&#x1a;4��v�&#x7;lJ�K�l��6�Ca�&#xc;�^�&#x1d;�c�V�ɢ�W�z&lt;�l�9&#x5;U;U�X&#x3;!6&#x10;��&amp;���[�I�r�F�F�&#x1b;�b&#xd;�u&#x2;;&#x0;G�3�r�{&#x18;r!&#x3;�7&gt;�&#x17;�:�&#x1b;&#x19;p&apos;&#xe;?7��&#x19;&#xd;�&#x6;�d�,�&#x1f;-B=&#x6;5i�&#x14;�&amp;��G�ɷ���l�F���1#�e����;&#x19;�q��J1&#x14;��U���ي�S��&#x6;*��ɬ`:&#x7f;�o&apos;#/�Y&#x1e;,tE�&#x1a;&#x7;&#x12;��ķ9&#x1d;��ˈ݀����F��&lt;��L�d!K^�S�&#x13;(�&#xd;!�&#x0;�&#x1;�cx{W��~�+*ϔ��z�]&#x19;&#xb;;�zg=&gt;m��&#x14;i�X&#xe;&#x1f;&#x1;&lt;:�1�/ˆG����&#x7f;8rr&#xf;������9�j�&#xd;&#x18;�&#x6;&#x1f;��������̆&#x8;i��Y�&#x4;l[��,�b��&#x19;3&#x1;�����&#xd;
;��#�]!&#xd;M&#x7;F.#ܸ6�}�2�n~�&#xd;�Fw&apos;�tfM�h�l���hS»�&#x1;R�K#�\(&#xf;�&#x5;b�_�.Hk���xY��	�&#x0;&#x3;&#x1;�&#xd;��&#xb;��Y&#x1;6�M��&#x13;�&apos;�&#x5;[�y�P�H&#x0;@&gt;j�&#x1f;^��%$��#f�Q�&#x2;�nD�=n�&#x17;2�op���L�9��&#x1b;���R�&#x7;3$����&apos;l�=&#xf;}T&#x18;�&#xf;�f&quot;�_t���Y�?&#x1c;�&#x15;���t&#x7f;�*:&#xf;a�&#x1;�&#xb;J���W���!C&#x1a;&#x2;�M��&#x1d;)&#x1a;��V���8&#xe;n�&#x12;�݄������&#x10;ߔ���&#x1f;�Q2�bR�&#x7f;e7#&#x4;N&#x15;��s�vӚS&#x1c;�+w�������(�4�&#x5;Zz�&#x18;���&#x52d;�ע�s0K1��դ�ΝȔ&#x1b;�&#x0;}Y�4&#x17;�&gt;�9ivt&#x1d;&#x16;s@f�vYu�j����&#x1c;Hh��&quot;w&lt;�p���&quot;[��+F��&#x0;X�Lμ&#x19;&#x7;}e�Đ:&#x18;&#x1e;1&#x1a;@��P�`��^Va�A�ݕZO�&#x1a;��]ū�p�&#x12;��^&#xd;
F&#x16;��6���&#x1a;���&#x1;�&#x11;�?&#xf;��*B.B|����&amp;��&#x4;J&quot;h�3��K5� ��^[�D:��qh���u���_&#x8;�˯�=��e�X&#x1b;�a�vݽ&#x1a;�$�ō1��&#x13;�&#x8;�]&quot;&#x4;���荇�x-��sԃ�8�&#x1c;U�.s�J-&gt; X)c��� �&lt;&#x14;|�@Mj�&#x6;sZ�t&#x15;��9#����T��̋�&#x18;&#x4;��پc�W%�O3���{i��&#x7;�@&#x0;���&#x1d;X�;s&#x17;�&#x7;�#�4o&apos;�~�x�&#xd;����&#x7f;�&#x1e;&#x1d;�C&#x10;�r�&#x2;�g;�UP��mC�z�l��\���&#xb;�����M�&gt;&amp;K���&#xc;�&quot;E�%&apos;&#x5;Y�a��/&#x3;�&#x10;&#x13;3B�����k�c.�l&#x0;�&#x0;���ܟH&lt;�WH&#x13;��&#x19;��TV뿡�`&#x13;&#x7f;��2&#x0;��&#x15;&#x5;��9�,\-!�!���W_p�uJ%&#x18;}��&#x18;~�&#x2;�(�G�&#x1e;H,7~m&#x7f;!�L`v�O��J��\�^�T�&#x1e;vψ�&quot;9l$�Sz&#x17;0��amm�2c�O��:�W�ו���&gt;�@&#xd;
h�M�~ȼvj�U�&#x1d;���k~�&#xe;�ڀ&quot;�[�VC��&#x1d;p�O��&#x5;����b��w�j��7&quot;�&#xc;&amp;C=�{��&#x2;����7��&#x0;�n�zٛ��=�fǭb&#x1a;�,+s-�&#x1e;_�W摡P�&#x1b;����IT`x봈;&#x82;�b�&#xd;�����+���2tU�$�#&#x10;#&#x7f;�Z�&#x0;B�&#x0;&#x1d;6��f���&#x1f;�J$KU�{��x���c��:&#x1d;S�5�vv��}b�\�t0��(&#x8;�f~�&#x6;�7�&#x16;r�QQ:&#xc;)�z��``PcW��u��5�l�&#x12;��w:酒&#x1;�4�hJL�s&#x6;�&#x1d;�ݛ�cdB�&#x2;&#x1a;դ��s�4&#xd;
�&#x12;��ۙ�M�&#xd;���4&#x15;�&#x15;��a��=��|��.\_�G֩A_&#xd;�&#x11;�}�=(��m�&#xe;&#x16;�A�_S��q�db?�&#x15;�w_&#xd;�&#x17;4���C&#x3;�kU�#m�&#xb;P����J)�:�&#x1b;&#x7;+;_���Z(�#bh���lP3&#x1b;��F ]v&#x1a;,�^&#x6;�B��Rr&#x18;�&#x14;&#x7f;�B�og_.�҂O�&#xd;
:$�A\���&#xc;3�M��&#x7f;*$�:j#a�yD�i�|���~@\�&apos;&#x14;Ū]KW�q&#xd;;�^D�ڣ��g�3B���&#x1c;�n�\���]T�&#x14;�����,5X�&#x1a;��Qa����&#x1a;����C�a��,�&gt;r���ON���f&gt;&#x11;��d��&lt;����?�Q�&#x0;�.n��T�$����M�l�+&#xe;C��b�ב�L�q�}��R��s&#x18;���&gt;`pGo[�9��K��,�8�HzN0�:O4iBHP&#xe;tƝ	�]X&#x0;�&#x8;���LſS���~�Z�&#x18;��&#xd;
�&#x16;�쪟�=m��1�J`�$�k���~���0CD&quot;Z�&#x1;�S���&#x5;�mդ�B4��&#x1d;�&#xf;1\|���&#x1a;�&lt;���&#x6;��&#xe;F�&#x8;)&#x16;P�[&#x13;�4��A��7Ps���u&apos;&#x2;MؘQ�Rn2&#x5;�_߂�~U[&#x17;�!����&#x1e;	&#x15;k�z��}6�x�C�mJ�&#x1c;}v�$���)ZW7Y|�I&quot;6����-����3��a`(�,2萙����CO{��O3�ɖ��s�&#x4;�p?푰�ԉ���8�&#x11;�&#x16;&#x7;.��w�m&#x5;G&#x8;Dl�~��|�L:&#x7f;�d��+&#x7;�}3����ո`	&gt;+��&#x7;/&#x18;K�&#x7f;�&#x16;�P�Oc`�t&#x3;����aV`4�/&#x7;Gj�xr�(D�4y��`���Q!&#x1d;��H}`rw{��7&#x13;���&#xc;}�$��&#x1e;o��s.�G�W��&#x1b;��6&amp;����Q�,�h�&#x11;M��CId��?&#x14;��ElG��O&#x2;tP�&#x1;p��&#xb;�_!�)�[��&#x1c;&#x1b;	z�n�Zu��IX��_�T�MlӾ5~\� ys&gt;&#x8;�3�xy�%�&#x1d;�L�o�0��B]{���s&#x10;F5S�f�&amp;q��M&#xe;&#x7;/&#x11;gh&#x16;�&amp;4�&#x8;~Bs&#x1;	���&#x1;�&#x5;4g&#x1d;�q�#��&amp;�&#x7;�@�&#x18;荑/�|�%j�&#x1f;����Z&#x4;O~�%&#x17;��E�`��A��\.��&#xf;&apos;Z�Tf�&#x0;ZYq(Wx.��Ń�#%t�&#x7;��&#x15;r&quot;��y�(L����M%��*S�o��oa&#x1c;ܩ�&#x15;�^1��&#x1c;��&#xf;1!����8�&#x15;@[���g��&apos;&#xf;4[&#x1b;���{N����T#��`���&#x18;Ngq�����&#xf;:A=&#x7;�&#xc;!]�f���Buδ&#x1d;L���&#x15;�4n&#x1c;&#xb;���j�&#x7f;ř&#x13;&#x7;+̳B��0�&#x4;��&#xd;�ʦ�0��&#xf;j�Wu��g&#x13;��&#x12;��mçN��1&#x1c;�]���A7}��if0�&#x10;&#x1b;Ӿ���\�Y��~�L�&gt;�x�&#xd;
�/X�N��&#x8;&#x1b;��c��M	q��KA8���U��ݮ��``�q�=ݵ&lt;&#x18;��I��Z�����`fIO4K�v82�&#x4;D�g4W�R�ϗn,C&#x10;e�9V�&#x1;�2E�ϙ�%&#x1f;(��$����&#xc;�&#x8;gvWO�&#x11;_��#��&#x8c;�&#x12;A)�(j&#x6;�&#x15;&#x11;�̐�Pq�{�;U��A���U&#x1c;�XW�g�ۭ�#Ҫ4�����&#x16;�ි@kE��&quot;~&#xf;�����rDy�t��%Q�R&#xe;&#x18;\?���&quot;|�M&#x0;��&#xd;
�B���7�?^J��&#x5;�&apos;�7���&#x8;�&#x1;��&#x17;�2&#x1a;&quot;�&gt;&#x17;(&#x8;�coO����x&#x5;&lt;.��&#x15;�N��R�4��&#x6;�&quot;zl�ݳ)7B�!&#x2;�&#x7f;z�~&lt;4��&#x17;��_ϻS�|s�@Ω��~�Dr�&#x10;��v*^�&#x17;�&#x12;&#x16;������F&quot;�&#x1;P&#x19;�$RY#&gt;�1���J&#x5;#��m��n3�6����Z]s�&#x11;&#x1b;ے(eh&#x1e;�÷�&#x17;&#x11;#7j�W�qy��={�7]&#x17;6-�b�&#x19;&#x3;����&#x1a;uy��Y�`&#x1e;�NѱP�=blAFg�ҫ�&gt;�B$ťO&gt;i�O�hTfk�&#x12;�v��&#x1c;]�Ě����j9�$�a��b¾kc��㑫&#x1c;���7�*�IzG�LD��b&#x13;&#x1e;�&#x7;�J6n&#x1;Q�D�����Q\r���;&#x12;+��9����|���&#x11;ZL}8j&#x18;틌j(����[s��.�&#x5;y$�^���(6��7&#x15;�V�&#x1d;+&#x19;����u{�&#xe;��5&#x1a;k�Gj���x&#x1e;|�&#x12;�;&#x7f;H@���ɦ�oMkcA�g���()7�&#x1;K&#xd;Z��&#x6;���&#x1a;q�&#xd;�I�&#xd;i�3�{���Q���a��&gt;&#xb;=bOoB=&#x1f;�&#xd;
&#x1f;�,dj&#x1a;�&#x9c;?-��o�2�:f��ƾ;�&#x18;@��&#xb;����&#x1e;	&quot;���&#xe;�Si\yWV������&#x4;1ip�h�@��67믙Ըњ����&#x15;e&#x1;&#x7;m�h6@�&lt;ģ�Z&#x7f;/��F�A&#x1b;�2�l��D����$��\�ّ��ȭn��X��&#x1f;�duT��&#x8;&#xb;S�&#x12;�k�J[��&#x1;���q���g&#x16;*&#x15;*��{�&#x3;&#xb;��纭��6&#x11;��r�[�8W�g�09���H�&#x3;�ah��5�6&#xf;~&#xc;�:R��sgGz0?vE�i$.)��c&#x15;������-#�&#x14;&#x1c;��ٙ�&#x12;�_�&#xc;�Y�t&#x1c;)��&#xf;�&#x7f;f#��?�]�ϼ�	&apos;;��&#x12;&#x5;&apos;Jt��K��h	�&#x19;O�}]Z��.u��덁!s+煞�&#x1b;E��9��&#x8;Ց��wWҨ&#x11;Z�&#x1b;r�1|,�&gt;�0���q&#x1a;K&#x17;��^,�&#x1a;ؚ�&#xe;�^&#x6;j�g����[7�&#x11;sa-�^5�Y����M��_3.5�~&#x16;XAh��Sj&lt;&#x0;��&amp;� &#x2;���&#x1f;o4���d��3P���P�L�����	�Fq~&#x16;t&#x13;*/�^9&#xd;
�����&#x7f;�v��fm-�&#x10;�_̙O&#x1f;�������e��	�Ҧ���WF&#x10;���rӦ&#x7f;��N&#xd;
&#x15;�&#xe;jY&#xe;��[K}��|�м��/�&#x1b;�ʞ�|�zAЪ\��&#x1e;&gt;r{ǜ	���#o&#x1e;ƈ&#x5;T&#x7;�&amp;�&#x11;�&gt;&#xc;{_u&#x1a;[�&#x1d;&#x1;��a�y&apos;��.�FF&apos;%~�3�[g�3��К&#x8;�&#x12;�&#x4;�*��A{�&#x2;&amp;X{���&#x18;&lt;��Q�&#x17;Lb��&#xd;&#x17;L�_�&#xf;�&lt;;&#x4;�O�&#x18;&#x1b;@�{��_���\�^&#x1d;j�n?�D&#x12;�A&#x10;&#xd;
&#x0;&lt;0c&#x4;�ޙfq���s��`�\&#x3;l&#xd;R�6fo�ɢ�:�Kwuб)l2H���d�&#x1a;�H&#x1;&#x6;&gt;P��&#x13;����3��R҅Q �d�3�q�NmR�`��c�Ub~5���&#x58c;�&gt;&apos;�u&#x8;�#�~��rҽ�xŅA��&#xb;t&#x19;&#x7;�&#x14;j&#x5;f7��l&#x14;�8����&quot;��Җz$y��r�s�$F�������&lt;�&#x3;g�&#x19;.���7&#x1d;���.&apos;MW��^�t&#xb;��IL��R2�&#xd;
)@�l��G�&lt;Y&#x0;����@�&#x12;��Z^&#x18;�Jk�Ҳ�8z���&#x2;���+&#xe;&#xd;
�&#x8;c&#x6;&apos;%�_�&#x15;?U���&#xd;ck}�]��f��&#x12;a����&#xc;4p\�P_�l h&#x12;cm�&#x17;�j&#x8;�w���&#x14;���&#x13;&#x13;��o#q��\&amp;B{	���Is&lt;&#x12;%�&#xb;5��c��	�T��&#x1b;��MA&#x11;�,��&#x0;��&#xe;����*(]��i�&#x1e;�w�&#x18;P&#x6;Q��&#x14;&#xc;o=`9�6G,�O�~&#xf;qM�&#xd;
Z&quot;|i���H[7�L�����1�i�H��)U�4�哳&#x15;&#x1d;�Zk��y�T�,&#x1a;}k���&gt;�Q@��&#x2;�	��&#x3;&#x7;0�T�&#x14;n�U`W&#x1d;!�Q(ɇ���k~f�[&#x1a;{A�&#x16;��}�&amp;�W�&#x1;��g�ݍ����&#x1a;&#x7f;&#x12;�/i��+��NӾ�2���L{�&lt;&#x14;.��&#x10;J&#x15;&#x18;&#x19;��!�O&#x6;��PZ�z��(Pm������&#x14;�&#x10;&#x9c;&#x17;&gt;7�w�&#xd;
�ƁS�%��;&quot;ll�D��g&lt;Nc&#x2;�{����`&#x17;K0�eYi�ʍ��\XDn�������&#x1a;Qk�F�_$�@&#x17;��A��&#xd;|	od�¶.T�����)^LA�8C_�&#x1d;��F:9RpA��r\�z����mA&#x1c;7a|��!(�&quot;���+v&#x1f;��&#x6;�;di��@O�&#x13;&amp;C��s���L�$l���ʠ�!K���@�#�_�ݒi�&#x0;[�$��.�jt�x&amp;b&gt;~&lt;&#x1d;:&#xd;
� &#x7;&#x4;&#x3;]+`&#x4;w&amp;J1��c3�f&#x17;�sD��a��O ��B&#x14;��&apos;�RJNt&#x5cf;�����.��X�&#x4;&#x16;&quot;48�&apos;�bO��;ER&amp;T�&#x1d;s��;����G=Q�F	�\oK&#x15;j�n��U�N_v�$&#x13;���R� &#x11;A~�[$��)���&#x5;�&#x6;&#x5;1�h�J���Z&#x14;.��+&#x1a;�&#x19;�W�}�,e���n7��&#x5;,�\����&#x11;&#x18;��M_٘:�&#xc;�{}�덻�&#x1a;*h��כ��PΌiWs&gt;�w�#bf:�Tu0&#x16;&#x6;83�03�[v�]�9AK&#x1f;���K%��^E!r�E�&#x2;з�5�&#x15;HϚ�t�[mH&#x16;ҿ�tk&#x4;&#x1;@�&#x19;���&#x10;�bXO�V�Y�&#x7f;Kbo#0��@eɫ]ܹL�HHևn^^�����&gt;h�`�2�?&lt;�R,4%�&quot;�&#x8;bV�&#xb;�FD����cZ�(�z	&#x1c;���&#xd;
����&#x1b;&#x6;}&lt;&#x19;�.D�*��wjS�_&#xc;$���O�C4��m&#x11;��&#x14;Tu1.�&amp;�`�C󙿁�~��Y&#xc;�e��g�:��S%�&#x12;�����Y��3�-&#xf;z��q&#x19;W6��S=�x&#x14;��jz&#xc;v�YS9IR�ڲJ&#xd;&apos;�&#x1d;s�(�&#x12;��&#x3;&#x6;3�4�*����(i�n�R���a&#xc;��&#x6;�&#x1e;&#x16;��ae��	&#xd;�~��Q=&#xe;=B.�&#x15;n@ѫ&#x1f;�=E&#x15;��:v=�&#x16;c&gt;;�!rW$&#xd;
%:��&#x1f;q�ފ�o�4٬V&#x11;�&#x6;1�UR��xj��g��Gw:��{��-K�xj�&#x16;&#x1;��s&#x12;&#x4;]ؤ���a�*站�����QD��9��L�&#x3;�&gt;V�p&#xb;)�Y:&#x1d;�D�f�]�.����n�7�t�#���&quot;D&#xb;&#x16;��M��З9�# &#x6;�Q-�^�ܻ*;� U&#x1f;\�2~k��\�e3ȦI&#x12;m��V��$�\�Q?�g�ֿ*��&#x13;\7�)9��&#x61d;0H���4�3��&lt;&#x11;�&#x1d;�&#x14;%6.�L�&lt;��d2@7�\���mt�&#xd;&#x15;&#x16;�5�s�̚&#x80;Z�Z�3�d�Z&#x0;E�֡s9+�HZ&quot;2���J�p&#xc;��bf�&#xc;&#x1;���&#x8;&#xb;�&#x1f;5y����wX�T�&#xc;O�c���X��:`h&#x1e;�=OL	�LO��1�&#x1d;�Q&#x5;;�&#x7f;&#x1c;²�&#xb;(����M����&#x5;I&#x13;pHZ:�mj�0 ^%z.��wL��r��6&#x7f;���&gt;�U�&#xd;
�O�+��W��&#x1e;�AƦB�̳W���?r&#x11;q(&#xf;��.o&#x8;�؀�{�z7h�q��4&#x11;����#&#x1;�&#x5;[a�	[��Լp&#xc;kh&#x10;&#x17;��&#x8;�F&#x18;z��[O�w&#x19;��&#x14;�!l���=)��N�nn�E&#x18;�vl�&#x7f;�D߁_�I	a�&#x1a;��=&lt;�u}�Q&#x1a; �V�p&#xd;
�8���&#x14;��$�JgA$&#xd;
~&#x1b;&#x12;��^Z�Z�s�1�=r��SJ�P&#x0;��&#x5;�&quot;&#x15;��Vq&#x1e;&#x8;��&#x7;��/&#x15;�fW�&gt;�&#xb;!��I�ӌ��y�&#xc;}&apos;q������\�8)`�I�&#x1;8f�����)#�?	�yk�]h&#xc;��&#x17;&#x14;M	��Ӊ���z�^�A��&#x5;W�rGi�&amp;���H&#x10;sǊ��5&#xf;ų��U&#x8;�R�L�&#x5;�&#x7;�&#x13;�&#x14;&#x11;!�&#x18;��s�6&#x18;���K�J{�s&#x1f;@�&gt;=�&#x3;PS&#x1d;�&#x1;&amp;&#x5;��&#x14;�&#x11;�r�Z����.&#x5;�����&#x8;�d�ƽ��&#x1;�_�����K&apos;sy�K�&#x5;e�o��9b0�c���z�Ee.�+�1��&#x1e;ᙱ�ϔ�U���o�[�&gt;���_�&#xd;
�&amp;mXd�q/����o=z��e�����JH4�:�&#x3;&gt;��mi�|G).��&#x11;&#xb;��Vi�^66��K��6&#x8; N� q&quot;�u��2��&#x1c;��cY^8�^n&#x16;�N�S�&#x18;����CS��3A3&#x1f;QS?��yz`�n,Մ�UG����&#x8;�&#x6;3�lL�u&#x3;&#xd;^�nT7�U���k&#x8;�&#x6;�~&#x7;���d�m�QCNX{�Ѣ�S�:�]$�&#x4;�}�W��&#x3;&#x7f;&#x10;&#x17;D�&#xd;
���u�/g�h-�I�z��&#x5;g���i���&#x1a;n&#x1d;�X1��==]�\A�&#x3;F��e(,&#x15;��8\��&#x1b;&#x1b;��b�H&#x1f;s�&#xb;Tor}&#x3;�cV��&#x16;_gD&#x1f;p�%�&gt;&#x5;����t��c�&#x1f;�={&#x5;&amp;,M�2��|L��!�&amp;�}%�?O~S�-���������&#x381;y���L�K��8�P^�P���&#xe;Ȁ�	�&#x3;&#x7f;*&#x4;&#x8;�C0m&quot;vb��S0*dE��&#x10;QB&#x18;�&#x17;���M�,&#x17;�������Q�r�ɔ��&#x13;I��=�,&#x2;s7�M��Z&#x1a;u&#x11;�&#x11;3j�pȽ���HႺ��~L�F��&#x10;�T1&#x17;B&#xd;�0%_��A��Ƭ&#x1e;�sB&lt;;�7���]�ǧ��XlE2B8�^&#x7;q	��#��à[�(&#x15;Lg�_�	&#xc;�&gt;s&#xd;
&#x1e;����&quot;&amp;m\%�UG��:G�&#x1c;���@��&#x10;r�UӎHp�Wm�ڣ&#xd;
��U[�g*���ê�&#xf;a$�WC�ݣ3K��&#xd;
�����=v���7&#xf;X�x&#x7f;F%&#xb;[�&#x12;������L:@��&#xb;W���&#x14;P�4���D洼��k�(�m�g�P&#x3;}�&#xc;&#xd;
L�_�&#x1c;��&apos;CZ��=&#x4;&#x1d;�F�&#x1d;��U܏r4.M[�CƎu����X�����!&#x10;�:`K��JNШ�����|�&#xc;o���͌�6�&#x14;���&#x18;��jK�5����&#x1;��A����&#x18;	�Zy�P��0XY�2����N�/��r&quot;&#x1f;k&#x5;+��$��r���x,&apos;�DM6{4@�l�&#x1;��p*�&#x16;��b��/G&gt;�sU&gt;uѻ!�8rE�#��&#x86;)�i�&#x19;�4���T��^��g�&#x5;�&#x1f;��;6ˇ���&#x14;�6�F��@&#x6;wu�{&#x7f;9�-CC&#x529;8�&#x3;&apos;���ov&#xc;g�������hRY&#xe;O�5��qQ��0i�r�\~ԣ�&#x8;&#x1f;g�L�D\&#x19;�| 9�&#x10;Tv]{~&quot;&#xd;&#x18;�P-�;&#x13;p���Y�F�&gt;0�Ø�@���EN�&#x1a;4U&#x8;.��d��9�)0��c�&#x7;����Į&#xf;r&#x3;�&#x19;&gt;�ԥ���-�&lt;�&lt;cIť����ڿ�ʾ��&#x1b;�&#x18;�є�)}�&#x2;_�L�p&apos;&#x7;���&#x1c;7���y���^��}&#x17;~���h�2f�&apos;b6&#x17;�&#x16;[�-&#x3;�;vU-�&#x8;II�0�~�8�1�CXo�E&#x16;[�ɬR�ەɍ�&amp;�9�H&#x13;�sn��O&#x14;]����&#x1b;�ʖ%&lt;�&#x7;���&#x16;�&#xf;j�&#xb;�2?g&#x12;� &#x5;���T�d���F&#x11;�&#x16;�y��&#xf;�Z&#x1a;&#x6;^��]s���Y\��T�����^!�Z�qϑ[���:�ָN��U&#x7f;\.f��&#x1d;끢�&#x1f;.��Ԍ&#x14;�=���t9*��u@L�K���&#x11;�&#x0;�&#xf;�&#xe;;�c�b`���&#xc;&#x1;�W&#xf;:Y&#x17;�#��&#x18;&gt;)��{�&gt;��&#x1c;6��^��N��cǦ࣭Q�u� �&#x8;3�����B]�&#xc;��.d�&amp;&quot;X&#x1a;&gt;�8&#x7;ٹ�a�!ݕ&#x7;�R\��&#xd;
{��&#x7;E�]�n&apos;[�a��&#xd;
�cZhZ7&#x5;vX&#x1;�U�p�&#x4;4Os�)���&#x1d;�WoCU���=o&#xe;&gt;&#x1a;�Kz����&#x12;��X^NЅ�&apos;0�&#xc;�;���&#x11;�&#xd;==�u�@�E�r���М���_�&#x4;�O?�*����4���gi����W&#xd;
�&#x2;-E&#x11;��D&#xc;�&#x13;�&#x1d;&apos;#�Nfi�&#x7f;�Tܽ�����jyj&#x8; &#x2;Ăn���9&#x14;&#x5;��#(R�}&#x11;�\�&lt;b�~�&#x1b;���&#x1a;�p6M&#x1a;�&#x5;���n��hc&#x6;Ko&#x7f;&#x1d;@� $&#x7;�&#x1f;���M�p�&#x1e;6��a	�[��_���p^Ǜ�1_�?�#x|�&amp;G�]?y\���	��&amp;Xak��&apos;�0,&#x4;���A&#x14;}��ͯEiW|��&#x12;�&#x1b;txA�L�ۣ0���X&#x4;=([�&amp;&#x0;�H��w�	���Y�q!�O	&quot;��&#xf;�&#x10;��&#x3;�m-�q�^�q}jRI�g����%&#x15;���&#x8;�&#x1b;��}5z/�z�#FF�&#x13;�Vj��&amp;�&#x2;�g+�Cﶲk������*sQ�&#x17;A��&#x13;Tz���&#x16;�S���&#x17;&#x18;9r�9]Z}�H�n�ĩ�&#x13;ݗ^&#x1;�s^B#@RIo�tD&#x4;2�CB�&#x1;��&#x17;���(�&#x5;6�ht#�&#x13;�^&#x1e;��S8&#xd;7&#x13;��oi����:*�Ǯ�g��/&amp;&#x7f;w. ��&#xb;\&#x15;k&#x12;?2NA�R&#x7f;��Y�{�Y[&#x14;�&#x18;&#x8;��C��Ef&#x0;u:L,%)]�&apos;8|B��&#x2;&#xb;�&#x7f;�=P&#x2;&#x7f;�&#xd;�����c��&#x18;�t&#x11;Dr)&#x19;�&#x2;)S&#x19;P�O�&#x6;*M��@�R;&#x4;89yv�L&#xd;Ue�&#x1b;���&#x1;�&#xe;�]+q&#x1a;G��M5�C�q8G�&apos;q&#x12;�Ԧ�4��z�&#x1a;s͋=&#x10;1����Zq&lt;&gt;	=&#x18;Q&#x1a;�&#x1c;��	�͵J&quot;j$&#x1b;,ش�� &amp;5��Hƨ:ۘ�&#x3;�&#x1a;-��I���&#x5;��)oߐ&#x11;|Ȁ&#x10;�O�rթvʐ91^XU����&#x15;��ɵ}���@&#x1d;�cNZ�f&#xd;
�L�|�&#x1a;�㿎�轒&#x12;��&amp;ћ��bby�_0.�Wؓ&gt;�7&#x8;f�&#x2;&#xc;���/�s�&#x7f;�J6l�LF��&#x12;�H�J��`��}&#xf;p&#xb;�p&#x11;d�$��c��&#x1e;DF���&#x7f;^�Z &#x1d;&#x1c;&#x12;�&#xd;����W&#x15;�-&#xd;��Zm�&#xb;���p&#x6;j�y�3����&#x7;Q&#x13;�&#x7f;�1gv����&apos;���S4�&#x17;�$X���&#x1f;��ڒ��c��H�Ib�r�&#x7;���/�,�&#x14;&#x16;���a{�LV&#x7f;&#x19;#f��%l�&#x18;�R�&#x4;&#xb;J&#xd;�rf6��8ɒ�&#x7b4;�&#x7;LP��&#x14;��2�k��&#x2;&#x3;����ݐc�߰��h��g���B(&#x1f;}��&apos;e�qT�zA���&#x13;^�^�&#x18;��+��� &#x1d;��X^����t&#xd;
��4��&#x17;���&#x1f;f�Yo�!�&#x18;�\��|��&#xd;
*p��|�&#x14;Ӯ2&#x8;��o[�喀&#x18;-4�����öQ)�f�¨P&#x7;���Gl���WѤz�@d���&#x2;����&#x17;����A�9&#x0;5&apos;u�i�#���)!&#xd;
��X&#x12;IiS&quot;&#xf;��*{C~&#x7;ÿ\=4%�@���ǈ�F&#x11;�j_}a&#x12;�;G&#xe;��ޏ���&#x14;�]V{o1�*�ͺ&#x17;�Ie`\��\��F&#x1c;ǭ&#x0;��*&#x17;*�ab6��я�KW����VI���\Z&#x1;V�IM�&#x7;��ܚ&#x14;&#x1c;&#x1;�7&amp;u�7�,�u������&#x6;Io�$&quot;&#x1a;̸M�&gt;|[5&#x1a;͵�pq&#x7;./�n&gt;-4\��!�U�&lt;qgXb&#xb;S&#xd;
��6��[dz���&#xc;&#x4;G�֏&#x12;&#x10;�|z���&amp;&#x7f;&#x1b;`�P�[&#x1c;��&#x1c;&#xd;
��D&apos;&#xf;��,&#x1b;�&#x8;�|:�&#x17;�P0^&#x10;m�U�4�0&gt;��Zݯ�`&#xc;aZ�{�����Ŗк����7#@[,{��z��[M����v�`��!aK�ŷ7���(k����1�=���&#xf;Y8&#x0;&#x5;�Р��&#x8;v@�Q&#xb;뚻&#x8;&#xd;
&#x1d;I��B&lt;h����?�&#x15;~:�4&#xe;��\C~[&#x8;�@�HWTJ3�#�^&#x12;�Y���&#x10;Z��U��T�Ƀ�����M�Q���?&lt;�&#xd;
���f�&#x12;3j}��]��%&#x18;!�&#x1;�5�@�~7�&#x1f;g&#x8;g�H&#x12;&#x5;_y&#x10;r4�h���&#x16;2�Fu9����dp����~L�Tc��Z&#x1b;m�W�&#x15;��&#x1d;l{Ҧ�]w �I��&#x1e;��R�rPR&#xc;�M��N&#x1b;&#x0;�ʢ~A���:	���X�������dg��of��2���&#x7;❧�� 6&#xd;
���~�&quot;�&#x8;�����f�x&#x16;���/���G&#x14;O̰n�&quot;&#xf;&gt;&#xd;
&#x18;Q7�&#x12;&#x10;*&quot;�+��M3&#x17;���+m&#x17;(�&#xf;E4��&#x1d;&#x14;��t;GZ$x��&#x18;rl=�7&#x6;�h���&#x14;�N�[�Y�=½��l�&#x0;&#x4;7��F&amp;ǰ����V^���&#x5;���6?�d�(DC�m�&gt;�:�5�Z�1m:$Jߪ��R�&#x15;��&apos;{M��Mۻ&#x1;&#xd;
�Ͽ�M&#xf;i����}�&#x15;�9�&#x1;�w&#x1a;��Ү��t_�!��[&#x1d;���`&#x12;j{�G)�tH��&#xd;
�P���&#x10;e�&#x14;F��`_pW�O�&#x2;#��SF&lt;瘀&#x10;&#x1d;9�-9n�͘�&#x3;&#x11;&#x0;;sl&gt;���&#x1a;ض[��+���wZ�*f�b�a]&#x19;zEMTD&amp;v@J��:�RjK�4|	�p��k�&#xd;
��&#xe;&#xe;���8m+�VS,ӑգ�g��ȷ�}��]&#x560;J���(~C�x���&#x6;&lt;��&#x16;&#x11;�4�h��e��a�G&#x92;���Ղ�HH&#x1c;�ë����&#x7f;�qt�ݙ:TLڏ��Q�@~-V��[8�4�J��0a���gU�AIlݐ��o�&#x13;�ۓq�&#x19;0��}�zp�Ǳ&#x1e;(&#xf;�j$&#x7f;&#x4;\�&#x7f;	Ra�&#x1c;U6t&#x8;���0-�&#x15;`�}��&#x6;����&#x1a;O�s��*�u�R�vT(���m&#x17;�̢�K��Љs*�&#x0;���MMS�%`&#x19;�vh\�E�F&#xd;
&#x16;&#x1a;&#x5;&#x1b;��y�w1w&amp;B�&#x1c;����F��Ժ@�&#x8;���:&#x1e;����&#xf;��2H+�&#x7;}�u�s�&#x7f;���r4��&#x3;���Di&#xe;��#�&#x8;|�&#x14;ya�ᥘ9�#d���N���:k&#x0;&#xd;
c̹&#x1c;|�E&#xf;-k&#x7f;6`h�(F��J.��BfZ��&#xd;GG�Q�3�&#x10;?b3�,w&#xd;a}*�D��߄z�%��BR�ign!�uH&#x17;O�,�~:lkRt�&#xc;C*���S^n1��Nn&#x6;���&#x18;X��Lv�p�&#x2;�&#x1c;p���m��/n&#xb;�,fA��n�&#x1;۸�90�&quot;�&#x7f;Z��Ow�/L�9p@�&#xc;	�L��&gt;w�BP�&#x1b;}�&#xc;&#x12;&quot;�e�}�;�`�K&#x1d;��d[C#_�&#x13;*&#x12;%)�_O��z~&#x13;�kZN�bT�&#x15;a�E~�P��&#x18;�r�4c&#xb;�&#x0;�j���bi�Eȣ ��`&apos;����a&#x17;&#x5;��Q,����~��1��&#x1;���QL&#x1b;��n�.�&#xd;N���p��ܧ��ͮ���炨�Zi�A��b-f&#xd;�&#x16;�ʎ&#x18;x�&#x6;b�W&#x1f;l	g�Տ�i��Yr&#x5cd;�羛�&#x13;Z��&#x12;��&#x3;G�L�!,a�&#x1;&#xe;��&#xd;G�A�E�&#x17;�7u��&#x17;�9�I�xx+&#x1d;&#x1e;8�ռ�k&#x5;isw��d�Q��B�H�E��[�3&#x17;�FP�&#xe;&#x3;�g#C�2����*�&#x2;h&#x13;&quot;&#x1d;[%�&#x14;�}�&#x5;=@��&#x2;�&#x1d;*B&quot;�l&#x14;n��VEڐ&quot;tҶ�&lt;&#xc;���&#x1a;�Sj��&#xf;��*�&#x7f;&#xb;�2ƺ&#x8;�3�.�픯�O`��&#x5;��=�#ٵ�&#x10;���&#x8;P�Gp�[p��=:&#x10;s���	r&#x19;&#x7f;�x�&#x19;E9(L�lPD==�J8;?rѭ�N��7�4(�ѫ%�S&#x1e;��~;���T�q��m��+���bkP&#x1e;��u�&#x13;�&#x14;��cK»�&#x1c;E�p��&apos;��d�҅�O��eۅ7�r�&#xd;
�TR&apos;�@�&#x11;U-&#x1c;�	�T�Q[&#x11;�*tu�&#x6;�5��a�e�&#x15;��&#x1;!�f?g1+�&#x1a;�S&#x1f;T�E@��&#x16;Y&#x18;���=d:���Jk��9�&#x13;=ix&amp;P�]�T��.���2�&#x5ee;�G�wEbm_Bz�;Imd-&#xe;&#xc;d�V)�w��&#x7f;�$Q/�J���&#x5;���pТ�,ו�O�}F��&#x2;&#x1c;��&#x11;�:��T&#x15;�����5�~��`���m&#x10;����/Z&gt;?�v�@&lt;�H�u&#x1a;�-�jd����݁酲&#x1f;z^�^[7��zSgƽ�גP;��&apos;��&#x5;^���Ye`xW,!6-&#xd;
5&#x3;�-�&#x5;Z!���&apos;-8���m�&#xe;a�,Љ�͊ث{�5�&#x1d;B&apos;%}�h.*�&amp;v�&#x13;&#x10;M/�w�N&#x1a;&#x1d;��;j&#x16;eTM(5��Eh��.�L=~%&#x6;�&#x1d;�&#x1b;���3&#x8;���,�ވ&#xc;n��W:Gn$`�C&gt;�Am{)��羑�&#xf;�C&#x7f;z4@;��}&#x12;�&#x1f;��R&#x1d;���W&#x13;h�;�6��ۀ�H�&amp;���&#x1e;3�@9��bR��*�ɀ?��f`�ժ&#x1c;�G&#x1a;*�:d&#x11;mv&#x13;.�&#x15;&#x15;ǔ~�&#xf;��D=��$�}Pu&#xb;�u&#x14;Ͼ�#��l������{&apos;M2z��g[�%]a�9,�&gt;m���}��&#x13;v��n���,�A&#x18;������s��&#x11;�rض��~�1�B�,ƻ~9^�G1�N���e{�0C;.��Q&#x17;1�V�l��|Fi��i�uٍps���&#x2;L�H�x#A�٘�G�%&#x1a;�e5T�&#x13;c�*��)�^�@P�&apos;ZԲ&#xe;iJ&#x7f;�J&lt;;&#x3;EV.#~{��7ٖv��&#x19;�r�b��I�¹�|�&#x19;&#x4;�&#x1b;���z�s&#x1b;�s&lt;6�4.i�yZ�Ϛ&#x1e;y��_����B���*�]4jV&lt;=Uyy�ɂ�\� ��&#x19;�:�W�c@�u&#xf;���+�&#x15;C�b&#x0;���&#x6;�e֩&#x7f; \�1�u�f&#xd;
&#x4;��bs�&#xc;��rW����y&#x15;oL �((�]%����-�&#x2;�8�&#x5;�?&#x0;&#x19;r��~asw7&#x16;��&lt;&#xc;�����&#x8;&#x2;sO����d�&quot;W�Ϯ�N����h&#x1e;u&#x7f;DlJATl&#x1d;&quot;��&gt;q]S���fG/&quot;&#x16;�`�&lt;1��ep�&#x7;�&#x15;-û0���0�&#x1d;&#x7f;&gt;�(���&#xd;5�+&#x1c;�&#xb;X��&#xd;
�F�v�ɪ&#x3;&#x11;D�)f���&#x16;�c�u�J˰�&#x3;$�H&#x1e;zr�_9�&#x0;t���&#x7f;ƛ{�n:Z�|�6k� �wPR|�.�8�&#x12;S�^&#x16;�yK$&#xb;q��I{�&#x5;�4x�&gt;A����@��v��&#x1d;�T&#xd;
��m&lt;��]&#xb;2m]&#x14;��������Ug&#x6;$��@[�&#x1b;�7^��n�&#x3;�I�&lt;��f�ӳ���&#x1d;�?M?�2Ø�L@�&#x1a;s&#x17;��%&#x6;�=��U\L�CN�G7�&#x7;9n��uز�Y�k|S���ӣ&#x7;0��i��&#x16;&#x1e;�|&#x1d;�i�m&#x4;O&#x17;[����&#xc;����N{k�&#x6;7�&#x4;&#x1b;@��q��&#x17;;&#x14;�&#x17;���������&#xe;F&#x16;y�_�B��&#x3;v��Xis�k�/��QC&#xd;
�zO8K�&#xd;�a&#x6;Y&#xf;̋�&#xc;�{�\Ґ�뙷�@����&#x1f;�1�&#x13;cIr���B�W�6mõڢ��&apos;�&#xd;5�06�&#x1b;,+�&#x11;�[&#xc;�ꀹb�,��w&#x9d;.&#x18;&#x8;��đzjA��tx�Ҋ��fZߕu$&#x10;��� y=�k�3���������T(�|����{�x�n&#x12;|�&#xd;
&#xe;�&#x3;���&#x1c;�&#x8;@9��,�gӏd����&#xd;��&#x8;��e�6&#xb;�&quot;&#x1;�Ґ�t�{ѫ$�O~̴� ��&#x14;aX0�Oͱ��ʤr�����Cz�f���{��&amp;��Y${��n�&#x1;+��p&gt;��|$N�̢c!|I��x�&#x1;��&#x1d;&#x14;o�	�q�D��i&#xd;
&#xb;�܌�t�&quot;��s)���li�&#x19;N��N&#x1d;j;)����v�&#x1e;F�)��&#x18;�&#x12;��V�χ&#x15;5�=��;�42�Fc��&#x1f;�&#x1f;�::�&#x5;��쏬d)s�&#x5ee;�&lt;�R&#x6;tH�8&lt;�]�H�4o\&#x1c;q��&#xd;
&#x19;��̚�E,�&#x7;�͍�:�AA&apos;+w۾	pv&#x6;{z|�68��{,��V&#x11;�}dD���&#x1e;�&#x0;?&#x1e;�q!\ �ƒ\b&#x0;�&#x10;ި��;&amp;�&gt;�&#x13;�&lt;���&#x10;��ӣ&#xd;
��o�&#x14;	u&#x2;J�D�Q&#x4;h�iҡ/Q&#x1e;#!��8d�g�&#x14;��&apos;T_ԇ&#xe;��	� ���&#x1a;/6t,&#x1b;(cL�&#x11;��Y�`}��G��s�&#x590;a&#x1;$�5B��:��&#x13;S����&#x7;r��&#x13;H�Z��Y����6��������FG4&#xf;G&#x1a;b�yD&#xd;
vW��,IQ�&#x1;�&#x1d;�D&#xc;��נ&#x10;�$S|�(V�Ǹe��&quot;�B�&amp;�*&#x10;�M篹��+\-,���4�&#x19;�_�����n&#x11;&#x19;fKP�ṕ�[;��q�n8O�&#x1f;fŕ]&#x3;&#x1e;\4Fι_�&#x7f;�4��g8S��q��:�q&#x7;�,�3&#x19;�e�Շ���p�1�����������Z�p%&#x7;q&apos;�K&#x18;4;r�Ns���g��E�&#x6;x��&#x12;:�]3�Q&#x7;��x;c&lt;�g�&#x19;�B�&lt;���)j�t�4XrG&#xc;�fgD&#x2;&#x14;�B���&#x3;�]&#x13;�&#x7f;.G+���^&#x1;f�}�����&#x7fb;�s?O&#x10;�_&#xb;��@�fz�~w�q&amp;e�&#x6;&#x15;�&quot;苳�&#x17;YNnzc�okn&#xf;�q���&#x1c;|Yw�&#x10;�&#x1a;��Mg�&#x11;�&lt;�UPd��-��&#x7f;�m|LJ����o�3|6x�9�&#x13;�+�]�&#x14;�&#x11;�7&#x7f;\�ZI�&#xd;��u�ax)�iv;&#x1c;�:{�t�&#x14;&#xb;&#x2;h�`�~(Sa&#xd;&#x18;$&#x0;B+��/��&#xd;
��I`&#x1a;�&#x13;hT&#x19;{`��&#xb;&#x14;���0&#x7f;E�����ӻݠHq�0ip)�&#x11;�3KPd+�&#x1c;�x��L &#xe;���Z�rP}�	��&#x14;��۸&#x19;}Ws.bKy?�ǂ2���O&#x1a;n[�߭h}r�&#xf;�&#x1b;{8&#x19;Z[A����&#x13;p�b�&#x1d;�2+@&#x1;@������i3&quot;�B|f��7�,&#x10;/b�&#xc;�9�:&#x10;rgx�p&#x7f;��I	��{���&#x16;�5�$������Rc&#x1b;)�ö���&#x1e;��l}�mO����g&apos;Ҍ�?:	�w BmٴU&#x10;���&#x12;�b���@�W��q&#x4;�AI�P&#x1f;F&#x16;��1&#x7f;&#x1c;�/��8.+&#x6;n��m�ܶ&apos;��&#x4;�ک&gt;%��&#x1d;�����2s}m�.F6�&#xb;?�QHJ@ѳ����W�su&#x1e;!�5�&#x0;+��&lt;�D�5�&#x3;,��I��&#x15;4t`��Y&#x17;|͡�&#x2;5�&#x3;�r�&#xc;ʗ��&#x19;&#x10;&#xf;�T&#x15;c&#x7;&#x13;�={&#x8;Txk@Hn�2�-&#x17;&#x1c;��-RJ)�	2&#x1d;��H�v㕮��ڿVm�,2,w��&gt;�&#x1a;?y#jNˈ��&#xc;�2�Os�y�tV�N�9߳\�tF�&#x16;���]tn_rg�i&#x12;&#x2;�&#x12;�?2;G�N�&#x15;ga�H�����&#x4;��Rx�&#x11;�&#x5;#&#xe;6�}xӢ���&#x1e;&#x7;&#x4;�*�9O&lt;$&#x1d;�1s6���߁�4+n�8����2|v�K�&#x2;��&#xd;
&#x7;w���8�&#x19;��&#x10;�(&#x18;���&#xb;O&#xc;��B4K��G��C�(�5�i���:q�.�&#x15;����&#xc;�^���9���r�:�F&#x5;˙�&#x1b;Y@�&#xe;���&#x1a;vD���a&#x1d;���.&#x0;&#x1f;&#xc;&#x3;�����&#x5;4���U08�Fd�&#x7;\�n��	�!9~&#x1;��&lt;P/&#x1c;�k�����09&#x18;����&#x13;��&#x0;&amp;p ��&#x11;�iH�&#x7;/�6&#xf;]&#x19;m��Cr9�c�ֱ�&#x5;I�h��|&#x1a;�&#x15;&apos;�}&#xe;.n��CwD��&#x13;�5�&lt;&#x14;�&#x6;�wrz�w8�&#x1a;O��&#x13;�W�b��&#x1;I�5�L�!��&#xb;&#xf;6�/��҇Mv��&#xd;
&#x6;ۿ��e�D�V��&#x12;��Y�&#x1d;�m�k�&#x0;Ж�&#x18;@�B&#x1c;&#x7;��&#x1c;��n&#x1d;)j~�a&#x5;&#x7;�tX����&#x2efd;�&#x10;�*�N�&#x2;p&#xe;��7��&#xc;I��t�_�4�rT�&#x12;���3p�S/%�.7&#x7f;bMm�&#x4;��&#x1d;�JI����;rъ&#x1c;��U&#x10;��saM���]9�&#x1e;0��uþ��{+�&#xd;��T&#x7;&#xd;&#xf;�&#x1b;`��&#x11;V�&#xc;�p�ɧ��I�&#x0;s_�&#x17;&#xd;
&#x18;�&#xc;#&#x18;&#x1d;�vcH��&#xd;
���\g&amp;X�f&amp;�&#x12;v�ol|�b{�0-1�(c�D�3��{�y�&#x13;���xOo�}&lt;�h�o��s&lt;�&#x1f;�Gy(&#x17;Ͱ�6rP:dM��$��e&#x8;&#x14;&#x14;?&#x1;J��|Ϲ�a�&gt;#��A&#xd;�I= ���8&#x1a;�+J0h��&#xd;BL�vۈ䍯�&#xd;
&#x1b;�:�Yp}&#x12;p&#x8;8��I�ЄD&lt;�&#x15;�M*��&#x5;�a%&#x7bb;&#x7f;^&#xb;|�ݫ���S���� =(&#x0;÷UE�9�~1��m�_@`Yu�DJV��;��ub�Y��{&lt;�q����˅��&#xf;�X!ee����Oj��K��~�]g��x�u�1��q��1�P&#x93;4�4�&#x7;Sŝab8�oxߓ���7+Ӏ%�[�������&amp;�&#x3;&#xd;z�&#x1a;]�֚�|�5��&amp;&apos;��X���e�����d�`l|&#x1f;.X&#x7;��j�}9���jjF����y��&#x1b;&#x18;L+�&#x15;&#x0;�^0�&#xb;w�&#x13;�&quot;u	&#x1;g��\6��;�5���l&#x1b;Ё�&#x12;�E�*��^E�Zq&#xf;�,&#x14;1����&amp;4s&#x1b;��:N+���[o���d�9(�2�N�L&amp;&#x8;���&#x15;߉W���]&#xf;��&#x2;�H�&#x15;���Dd �K�D ?�&#x4;��_&#x6;Pc��ǖp�r����W�o��&#x1e;UҔL��]��ʾ&quot;��v&#x7f;�$� S=���N��&#x19;�]��&#x14;�;bmNεT&#x11;]0�ש&#x3;@��5-%����D:�(+�.&#x11;�E`��b�!��%)%��;�&#x16;Q���G�9&#xb;QĊt������&#x18;9��Rc]�_]���%���0�T,7&#x18;�y,`�z=���&apos;3���&#x4;&#xb;3�3�t� �;��I&amp;&#x2;&#x17;sh���Pڧ�[3K(�IG&#x10;}ؽ&#xf;�c�&apos;�P�)�h��sj&#x13;|@�&quot;*�d����h��5&#x12;����&#x17;r&#x1b;$H��%�;1���47#�e�}&#x13;�Z�T�&#x18;&lt;ʎ��,bz����k��o&#x4;7��p�&apos;3㜛�&#xd;=ӝ�Q!D���}������&#x17;�&#x10;��&lt;�9&#xf;^�&#x2;ѐ#��&#x1a;/�&#x12;U��-&#x2;&#x5;q�o�&lt;���?ð�W�`7��M�(��O�n�1u�B/9��0&#x11;h!y�5�!�R骆&#x10;��&#x8;&#x5;&#x18;��ѶЃ&#x14;ע���	�k5ɜq;�&#x15;�&#x1b;Pd&#x2;�&#x7f;&#x4;��&apos;&#x7;�k�bS�����&#x1d;&#x18;�0&#x1;!��&#x1b;%�h�{yCXa\�&#x13;Q�-�d��1c���xQꯍ�&#x17;4�!�&#x1;��X	,�o�z�&#x11;&#x16;&#x4;U9?�&apos;:�~3��&#x4;Hh-�&#x14;&#x7f;&#x11;��&#x17;�����&gt;I��Ƕ%2Xi�k^C&#x1d;��`Q�&lt;S,D����k�4&#x17;!�=&#x1f;�&quot;���n&#x12;&#x16;&#x14;�IYxėp&#x4;X�W��CNh�0��&#x17;���Q&#x14;&#x11;&#xd;
&#x1e;w��=�5~���&#x6;!v��N��&quot;ZN�N$*�۞���&#x1d;����ܯ��*_@��&#x1;�a&#xe;섔R��4αÐ��\�_����x&gt;[�&#x12;&#x7f;|ls�7�&#xd;
ꊝ&#xd;�&lt;�=ML&#x4;&#x1a;�����&#x17;\&gt;���A_&quot;;���舸n&amp;����&#x3;�A�JxցS�&#x1e;y�W&#x1a;$&#x7f;M��#&#x15;�������ӝAtg�03�ʙ&#xb;9�/0QO�,1�&#xc;��3+�ךСݟ��h^��遇Ol����&#x0;�H&#x1f;&#x5;��R-�XL}��*9��/���;�&#x10;���w�&#x1a;�,R��T�&#x19;&#x11;N߭�&#x13;�-���&#x1a;�J���s&#x0;��_�g�M��&#x4;���&apos;c�	�1#��yE&#x1b;�J�Lő&#x14;&#x1d;&#xe;WVO�n&#xd;U�,�˄���&#x16;^����su�3�$�e��Ϭ�X���9iAM�)q�{Oi�&#xe;&#x1d;�i%&#xd;
l�&lt;-�Q���&#x8;_K���I���p1�&#xe;&#x11;����&#xd;
&#xc;�D��髄�$0d�&#x8;�4f&#x5;�m�p|�Sl�{�@ Y&#x14;�&#xe;|5��&#x17;&#xf;��&#x18;��q��qvq�&#x1b;dx&#x6;�{-n�4]��L��=���&#x15;���p�(&#x17;&#x4;2&#x12;�f�&#x1;(&#x7f;�t��7&apos;��&#x19;�,��7&#x18; &#xc;�&#xd;
M����&#xd;
瀰��	+����dŏ��W&#x1c;�^��&#x14;�D&#x16;D3�&#x11;&#x7f;&#x15;�q����e��&#x15;8�V&#x17;͏����]���=����#��YJ�;&#x14;�,�4&#x1e;�Ͼ�\F��&#x11;�;Ɓo�%�&#x15;}�&#xc;&#xf;�&apos;��&#xd;
��v�&#xb;ˈ��xUm&#x1e;�P4�f��{K&#xf;&#x3;���&#xc;��&#x5;����@&#x11;c&#x1d;�3�g��8q|�&#x1c;�a&#xc;&#x11;/��Xr&amp;�5�&#xd;
*�Ņ|�0��(�`��M/Ec�F�;�l��&#x1c;��&#x6;&#x2;���TC&#x7f;�+�&#x6;&#xb;j�k�#�&#x1;�&#x7f;&#x16;&#x7f;���&#x1a;3��23f�m�^dK�q&#x11;&gt;:�����=$�&#x0;`ܗ0�E�?&amp;cM����y�&#x5;&#x1b;j��&quot;������&#xc;x�&#xb;�&#x1e;&gt;�9&#x4;��F�h�1S���T�J&#x17;ࢫn\K]4����ƞЖ3�����s+&#x13;h&#x1f;&#x1f;{m�	O&amp;�&#x5;���D&#x3;������듅�+7F]�0&#xe;T1_e�&#x14;$&#x19;&#xe;l&#x3;F���S���&#x5;Z�&#x14;��&quot;�&#x3;&gt;��(83VH�^����&#x1c;�Hz.p��Plɑȡ&#xf;��d=`�V�Z�_&#x1b;�&#x1b;�_�Z&#x3;e��07���H&amp;�&#x18;Όlv��8lw&#xc;F&amp;Xkbs&#x1e;&#x2;��&#x2;���j��&amp;&#x4;��04��&quot;�9&apos;V��w��1�e&#x11;/������I&#x1b;�*��$W�fg�o�I![/Ho�&#x1;fyhr���&#xb;,��Z�^�&#x3;���n&#x15;&#x12;aq���G�&#xc;�C%�&#x7;&#x19;;1�&#x2;��y�i&quot;?�&#x1a;릈����XgXvWc[���S&#x6;~V	&#x1d;8&quot;v�d9�T�qp!I0&apos;��T�\��HO�ĸ|S��g&#x0;?�&#xd;&quot;�g�R�r�T	����j&amp;+z�N&lt;���&#x1b;)�&#xb;�h?����p}�~� ���{b&#x5;m&#x558;K~&gt;�tU&#x1e;���+h�F��=�v�.�/s1$�&#x1a;��[&#xc;��!���4b(S!�&#x1a;{&#xc;���&#x14;B�X&#xd;
-�y&#x1e;�B���0h&#x16;*T&#x19;�Ԉߪ�[b-���&#x15;��E&#x4;�&#x4;�i��4����FP&#x8;&#x17;{&#x12;[��t&#x17;Hl�L^&#x12;hp��&quot;&#x1a;&#x12;��*I����8&apos;���ɕ��N�&#x7;����&lt;&#x7;�.*��J����&lt;�7&#x1e;@ 񛩙cF��e�7�&#xd;
�m�=0�~3��v&#xe;���g&#x2;�Վ�&#xe;Y���()&#x4;���2}6{�&#xe;}͝&#x16;�Bf��&#x13;�Χ�0Y��&#x4;-r�v��ie�_#�HJqN���jB�9_�H4���my&#x13;жC&gt;{�Wt&#x4;���&#x16;�_&#x5;����&#x5;��l&#x13;Rf��*�&#x1f;�&#x10;�?+��&#x10;�Q\A|W�2�;��T�CǾY^&#x18;a�&#x17;��H��Lk����b�_�h&#xb;B��	�!&apos;��wQ��f&#x2;	&#x6;��&#xd;4g��X&#x7;Y�zm&#x17;r��&apos;���crW|\FT��FZ��t%m&#x1c;�&#x1d;` &#x16;&#x1f;�&#x12;��&gt;��Ę2��&#x6;l&quot;�&#x1d;:?�5��#�-&#xc;�����&#x2;h���*�2)�Tbb���t6�k�&#xd;
&#x0;,�&#x18;����:�&amp;��|7-��_�W��&#xe;)�k�Us�&#xd;�&#xf;�i�.9E*�-;����cE�Nv[p��dA���&#x8;8�ݧ�פ&#x6;ǹ2��J��&#x7;P#�B��	�&#xf;��-&#x1a;#&#x1e;W��&#x13;���BKdΉK�&#x1;T�^��[�����f�&#xc;�S�^�kir�.�&#x7f;�&#x10;�G�V&#x2;b&quot;�F&#xb;�i��&#x11;&#x19;E_vl&#x13;�R��&#x4;1U�d&#x1a;��&#x5;�fX&amp;���y��g==|�&apos;��m�3&lt;e&#x6;�tc�[,&#x14;���&#x16;[4�a��&#x19;���?���L&#x3;�&#x1f;qP�&#xe;&#xc;�VK�.b�utd��-�&#xc;4�]���p��	��BF+��&#x0;�&#x11;&#x1e;q&#x1e;&apos;��t���&#x5;ţw��w����&#x5;&#x1f;&#x0;�Y���Fn9~�E�&amp;K�F�3�&lt;e&#x7;��&#x5;z/C&#x8;�����&#x18;�&#x16;�s�b��j&#x1d;%l&#x19;IH�&#x1b;�9�����7i&#x6;�$R���C�@���g&quot;�i�&#xd;�&amp;E�W�&#x11;�&#x1e;&#x4;��?�-�V�����&#x1f;}0�0,��n&#xf;.&#x0;�&#x1b;�V��|p&#x11;�ouÉ/����õ����г&amp;Y&amp;~^���j�&#x1d;���&quot;�y�j� �&#xc;3���&#x14;Z&#x1c;rRy��Ip)`P&#xb;zvosC&#x1f;��K�+ϊ&#x16;&#x0;]4�&#x1b;)8s���T&#x14;�����yxǶi&#x13;+25�V8�&#x7;��₺�2���-*�+�t�`������&#x7f;c�x�&amp;@�Nr���Dة&#x2;��p&#x15;i�Wy�l��A��Y��w!뻯YX*�o�O�&#x3;&#x7f;E9��&#x11;&apos;�ݚ��~�G��q!�Z8&#xc;&#x1f;ɸv����&#x1c;��Y&#x18;L&#x1f;��ӏћ�ٌ��&#x1a;�5?s��&#x15;)&#x18;GN&#x13;]���\ٵz�#�߫&#x6;�b/��fj���O�&#x12;nj�sJ�sQ.#&apos;����@&apos;����&#x2;�&#x6;{�IT�ʸ�&#xd;u�&#xd;(&#x1b;l�&#x0;*&#x1;6��N�&#xc;L�&#x4;��Qzrߊ&#x13;EmH�3cބ�Dj�5�&apos;Lߍ&#x1e;g�)g��&gt;WI=������Hs�&#x1d;I&#xf;�rA�����&#x8;jm.L��KE&#x6;Ji����&#xc;^h&#xf;�����&#x6;&#x11;4����8&#xc;���鳷�vC&#x18;b��s�&#x18;�R��&#x11;���t�&#x7f;&#xd;�ܾE&gt;.�G��^rY�­&#x4;�z(-ߒHR?&#xe;q�g=���$��&quot;&#x8;m&#x3;���u��&#x1;x�逰3�&#x15;�dm0R�%�r���&#x1e;A�L�FG��GX7)U&#x1d;��s��V�:8&#x10;&#x1d;ua&#x2;�&#x0;��v��fNZ�������(�F^�00��Cχ&#x1;&#xc;��&#x5;��lq-,��s���?&#xc;�&#x11;�}Q��P�3m#=,�vN\E0I�$+xP&#x1;�@&#x1c;w��z�#��?$�&#xc;&#x8;��Fe�&#x1a;��&#x7;&#x11;&#xb;��aN�č�&#x7f;k[&#x7f;�dF�&#x13;�.&#xc;�x�&#x8;�A�`�&#x7bf;֮&#x12;����&gt;9���a�&apos;�&#x8;z�ƄƠ_&#x12;�U�a{&#x11;�&#x15;a_4�}&#x2;:&#xe;��E��&#x19;�&#x13;&#xc;�&#x4;����Vb��?i���R�&#x17;�5���&#x15;�&#x1c;d�&#x4;ɫ).4�&#x3;?�NT�o&lt;&#xd;
�4��ƷkΑ�x�&#x15;F�-�ޫ����&#x1e;�[��I�&#x17;�l&#x1f;��/m�p&#x7;����`I&#xd;G&#xd;
�.&lt;���³��&#x5;��K&#x18;��X��!O�,��QbW7}�쭚�%&#x1c;S���f��&#x7;H����x&#xc;Ĩ&quot;���&quot;�&lt;}�=鏛:s�Se�eb����e&#x11;��&#x1;�Pԑ`m�&#x19;��Jz]&#x15;%���&#x18;�k�f�&#x1b;�i&#x1b;N/�sx�ɰ��D&#x13;2F=K���O�&#x3;�p��~Ɵ�d �~H�:B*�?�,D��x&#x10;Ժ��&#x10;�w*��z�#=B@�?&#x14;&#x13;iz��&#xb;X�E��[�ֺm&#x0;ظ&#x10;����&#xb;H��2yD4�|&#x7;��{�?�&#x7f;��#�&#x0;�&#x1d;&#x7;$�&quot;���:�od��&#x18;_u+Oi[&#x19;}7*!8t&#x6;퍫P�K�\��������&#x7f;�Phwrij����Yt��6���4�v&lt;˻q&#x17;&#xd;��ɾX&#x1a;��&#x10;&#x8;�&#x1e;]��ۭ_L����j`��i�������i[��&#x16;9Sh��&#x6;&#x5;�.�w;�&#x1b;@&#x6;&#x14;&#x1f;�����$ґ�&#x17;d��N&#x1e;&apos;�fC�&quot;��&#x10;�˨J�&#x1;c�&#x1f;,uc#=������uY7�[&#xf;&#x7;&#xd;�&#x6;0�&#xf;z��D8�9�����&#x1d;�*�X&#x8;��&#x1b;?ܧ&#x13;&gt;M�`�&#x11;L&#x10;]&#xf;�?���`���&gt;�M���2nf&#x6;�&#x1c;�U�&#x5;4_&#x0;�&apos;&#x15;Q&#x5;!@)���|�LE�p-/�&#x15;&#x14;V&#xd;
&#xd;����&#x1e;Uw&#x1a;�R8���SP�&#x1a;�����zØ�?�����=&#x1a;+&#x10;B�7;}By��+?5�&#x17;}}&#x16;&lt;e�`�S&#x1e;eS�c�3����wǏ0&#xd;;;��4&#x19;#&#x15;E&#x7;��^&#x528;��ɐ&apos;H*��&#x1c;&#x2;�� �&#x19;��&#x1c;�K�&#xf;�Y$�f��S�r��r&#xe;�k&#x1d;�?�g[㭄&#xc;��&#xb;�L�/M���-�c��d{#��l�%_&#x7;&#x17;v�]�&#x15;|�&#x14;�F�j�&#x5;&#x1d;���U&#x6;��m��6%�&amp;�ĳ���&#x12;�a�+,����&#x0;����gF&gt;��N*&#x15;��6G�&#x3;�TY�{��mt&lt;�(B�82�(rG;R%:���8�ĭ8lqo����Q�&#x13;�oY�&#x1a;r&#x7f;&#x11;&#xd;V7�C�K�(��|u�&quot;X3k��xmePذ�N���A]&#x1a;1~�1��t&#x0;Y��,{���R�;���U&apos;�j`��3}��0&#xb;&#x3;�	&#x1f;(.&#xe;K�&#x1e;{&#x16;��,��5Ϥ`&#x1d;�&apos;Սh=�����&#x18;&#x11;.&#x1b;&#x5;s��j6[�ጿz�o5d&#x11;z&apos;N��&#x1f;R&gt;��^����6&#x15;*�d��P�Jp��v?&#x13;�&#x19;ۻ�-��%�W`&#x1f;e�sy��Zv&#x14;&#x7;�W��8Cw]�&#x4;��rQ�&#x8;�f�������&#x12;��qI�&#x10;�5b�X@&#x7;�S�DDbw�[&#x16;�aԔF�x��&#x6;e_��op�Yr��!��R&#x19;����u@��U&#x6;,w��V�Q	%�]�y�&#x17;ñ���bs��p&#x5;h�E�s���U&amp;@��J&#x19;��&#x70e;�ɵ�ٞL����C.&#x16;&#x4;&#x0;s�g{��E�6�/�7�wgs=��&#x5;&#xd;&#x1a;��M&#x1d;�FXxNk�E0��i&#x0;&#x8;&gt;qm&#x5;@H�-�e&#x3;EĒ�Ky6��s�X$0&#x17;�E �����*�e� y&#xc;!&#x1e;1&#x4;&#x3;_9���,ֶ�!&#xd;EEȧB�&#x4;C�~��u�ZV�j��Y��A?�!Fp&#x17; LD�D��aAd&amp;&#x1f;&#xd;�ȰM�:���&#x8;.�TH�q&#x10;*}fB&#x16;�`�p݊��;�&#x1d;K�&#x1b;�H���=&#x10;�xq�l&#xd;&#x5;ꄖ�T8�w�&#x4;&#x14;��!,&#x17;�=����p�I�i�&#x18;&#x12;�D����TR�B\���&#x13;2{�C&#x5;�&#xc;-6���S���!�,�2�:4$&#x7;�s&#x1b;O&#x1d;F�� wY-�ˊ�w	�)�KW��&#x1a;#�ʆ�$&#x1b;�&#xd;0��^H��&#x1d;�&#x11;��ܻ�&#x5;��X��&#xd;W��#&#x0;�$&apos;��&amp;&apos;&#x2;&#x4;��&#x1;&#x11;�.�$sz�&#x7f;�&#x12;Sz��7�nk�-&gt;�y�&#x1;��j��5��&#x14;&#x1;䜇�r���&#x6;!��D��ar?~�&#x7;�;-v�/�&gt;�m�&#x7f;a�R�g&amp;��^&#x19;&#xe;&#x0;���&gt;&#xf;�Β03�)&#xc;�S&#x0;����|&#xd;
�&#x13;�F�&#x1c;&#x15;���&#x2;�&#x7b3;��&apos;�K�&quot;&quot;�&#x4;&#x10;����&#xc;&#x12;�M��+Z&#xc;8��,�L�ܱ|8B%�&#x19;铎�-[8�&#x17;SC�Ncz�&#x11;�&#x1f;�X`T;&#x1e;�&#x19;&#x1b;5w&#xf;&#x4;x��g&amp;�&gt;&#x13;����&#x4;�a&#xb;���k���D&quot;�&#x16;�A�&#x1a;��՚�&#x7f;��&#x16;� \��z�\_��Lwg��L�*�&#x19;&#x16;O4&#x1f;�7�.�&#x1c;����&lt;,S�&#x14;{�&#x1f;�E&#xc;`���C�/��E�;����&#x16;j�E���8�F��P܀�֭&#x6;&#x10;�s��&#x8;���w��^�!�;Q��,��d�&#x5;��&#xd;
y��b��&#x8;	�Д��&#x0;�i�����.�т&#x1b;6%[{�Ý.4�&#x3;�k�Mt�1؂��d���4=�&#x10;��&#xf;��(V7jW��f&amp;�&#xe;m�&#xc;�&#x7;�C6&apos;BG&lt;*a��ˠh�S��;H��N�&#x1e;P�&#x3;�&#x7f;���l9���&#xd;$&#x1a;&#x1a;�&gt;192v���l&#x1c;F&#x19;��(&quot;�&#x1c;��&#x19;�@5�ɘaކ�&#xd;
��,���ae�Q��e:OZ&#xf;&#x8;�bQ�&#x10;&#xd;�&#xc;&#x13;n�u�47.c0��@��;��&#x2;�&#x7;��}s�ؕ&gt;&#xf;�	�/�4~g5��F8��&#x0;&#x11;��^*��r)�ah����&gt;+�y@ڛ�V�@��6��85;��Z���&#x3;&#x3;�E&#x2;?&#x14;5���&#x4;�5uS&#x2;qȞ�NȨ&#x3;���&#x17;&#x11;&#x14;o\exM�&#x8;����sm+������%� &#x1c;��&#x15;23��pb�/��؟�&#x15;ȩ!����faJ�,&#x18;w4D30gJ[��3��)��Ѫ&#xe;F?���dt�釹c�7\��w��&gt;m�s&#x12;5Z��&#x11;Љ�&amp;&#xe;��.��&#x6;�b&#x14;+���~��,:�YE���&apos;V�4e��eJT0i&#x15;&#x16;�&#xf;�k�1&#x6;�&#x1a;���&#x0;.���t��4���&#x18;&#x12;�V%&#x1a;?Ni�z/j�\�&#x11;�&#xf;��&#x11;���#��&#x1;�l��D&#x16;�9/�z~��&#x7;�[��������&#x1c;�u|���K�cV&#x15;Of&amp;&#x4;�b�~�]Z�&#x8;]?�&#x1a;w&#x1d;&#x0;��}L;ʐ&#xb;c��W�$�&#x4;���&#xc;�2�&gt;�&#xe;��&#x1c;NG&gt;#�&#x3;&#x1f;�&#x15;_�F��N�&#x12;��M�/�d��ゎA��{��9	èi���������&#x11;�&#x12;�//XI�%�I�[��q,�Ƚ!)�G&#x1f;�&#x0;��@�m&quot;9�&#x1f;|j�1&#x16;&#x98;^&#xc;X&#xb;��&#x1a;��5&gt;�j��V&#x1c;K�FxB�+&amp;yH�@��.;C��៍߁ �3˳tӷD1DNq�&#x1b;�j&#x4;0���`&#x12;��BVh&#x1d;�U�+J7	�TFä1&amp;A%&#x5;5�J1�ҨU@s��ߎ�ʫ�����K�Ǣ$�u$�Z]f��4e�hR�q&#xd;�/��&#x5;�&#x8;��&#x1f;E&#xe;^f#&#x3;�&#x14;X�y�N�i?���(����L\0~�;&#xe;����&#x8;�˜Y��&lt;�	����[�&#x3;�y(&#x18;�a&lt;�]���G��}s���1�ˬ�Z&#x17;�m��_&#x19;;c��&#x16;M&#x1f;SU&#x0;&#x1b;�&#x10;Ri�á&#x15;�Z�0�=��k��8&apos;��v=�P±�S�&quot;����Z��ض�;!&#x2;�9�/X花��41���P���[�骙&#xd;3ʖ��_N&apos;ɟ&#x2;&#x10;��&#xd;
�X�u=&#x4;&#x1d;�i��Y�&#x6;(T�&#x1;�&#x18;򗶁_#Ύ���)���&#x7;r&#xd;
X�&#xd;�&#xf;��&#x0;&#x1e;�ɿq&#x1b;���4�Z�;��3l=cfr�e�&lt;X�C�&#xe;?�j&#x14;�7G�ш���wG����5�a��&#x1;�&#x11;��Մ=:�w&amp;&quot;(T@&#x8;b�&#xc;�;zq��ũ&#x7f;K�crk4z&#x11;�&#x12;�q6����^�܌Bc&quot;����&apos;�n��&#x4;V���q�tjI(G���1��:P�@�OO���u����K�s��&#x1e;q&#x5;w5��(��&#x6;�|u&#x19;&#xd;
��w���~��&#x12;�_5�̰�G�	�����&#xb;_�Y&gt;��V�}]m&amp;&#x1d;n����s�&#xe;�1�&#x1f;�&#x14;Vg�z&#x1;&#x15;���K���M]��&#x11;��qd(� �&#xb;J&#x5;�ڴ��[�g&#x14;ȹe��ɬﱁ���ǰeV��x,vm)�A�C�.���m��r��3�k&apos;�}V�J��dPnQ�~�V�� d�$&#x8;��&quot;�X�V�?�&#x2;;�&amp;�z�肨h�Ҷ�&#xd;
~��&#x5;��G�(&#x1d;���¼���8ԏ��=tȰ#�&lt;�rA8�&#xb;�&#x1;�鉄�H*��ݮ���~�xv�&#x18;.�=�&#x4;�fby��&#x1a;���&#xf;&#xb;\��&#x5;!��M��&#x3;��Oq��&#x15;���i���v�3�&#x1b;�)cUdz�x&#x11;�Z����.�r�IP�1I&quot;:}�L�X&#xc;ߘ&#x12;��&#x7;���D��&#x7f;$&#x16;�\�rZ�&#x5;h�=˰�:��w��d��&#xc;_��/mm���tu!�`�Be�d=���z�`C&#x1d;��&#x1e;�3�&#xc;�&#x4;&#x11;�ܟ�&amp;&#x10;G&#x1a;�0ª\��ҽ]|s��&#xd;
|��h��`&#x6;i�kM\�&#x1b;�2+�&amp;A&#x1c;��yj/k3c&gt;��&#x17;&#x13;�U�F&#x14;�S��&#x15;�FVУ�^�xR�&#x3;4����&#x7;�ѵ��:i��&#x13;&quot;����H&#xd;
@&#x17;C���Ւ�&#x19;Z��a]7-ޛj�h&#x2;K&#x8;��J&#xf;�.���y0E��&#x1e;��n&#x1;ԛ&#x12;:�ɦ#h���S&#x12;ј&#x7;��e&#xb;EO52��&#xd;
�6��o�uG��B�4���Y�p�1�^�&#x1f;&#x1a;�~���&#x15;xW%	�.;�n|��9�&#x1a;��&#x3;&#x17;G�6��&#xf;6����U�Avڪ�Ξ�JF�$[�b;Q��&#x1;r�H�?Ҡ��&#x7;|p�k,�5w	D�&#x1;��L&#x18;�&#x19;z��RR���&#x19;��4Ǝ�&#x10;�&#x11;���&#x5;�&#x13;���+;x@�t�S�D��z&#x13;��t��~���&#x19;=v�v&#x1a;��F#��&#x0;.V,kg���b6�� �&#x10;�&#x1c;OjvD&#x1b;�m�Ü��x�Nd�y8�&lt;^)���`&#x1d;��u�T�;��+��4��O~&#x6;P=&#x1;&#xd;�G1d�A��&#x0;^�TI��q\t&#xb;&#x7;7�&#xe;&#x18;v&#x14;v&#xf;c�,И��l���L�蝄E�&lt;x�$7���&#x4;yz���:\�A&#x17;&#x16;�&#x3;f�k�J5`&amp;HT����&#x6;���G8��M,�&#x6;��&lt;�9�����Upﲍ&#x1d;����7�(�&lt;�8&#xe;6&gt;}�����&#x1d;��&#x16;:u�noG�&#xe;|Kcڭ�&#x1d;�Gt���c�Qp�s&gt;�:^&apos;�3Ϫ�.��&#x10;�&#x8;B��w?W�1�,NԞ%�-���-�&#x11;&#x1;���~J�&#xe;A҂5��8ꩪ�v�6&#x15;�\�3aNR;��+e&quot;[�W�҆��)f䪋�&#x10;�&gt;��d����&#x1b;}&#x19;m~&#x18;&#x10;&#x1d;�F�8\���&#x13;��)�N5��VH�ǣ&quot;͙�&#x1d;B������JuLC�I?&#x14;��âl�%=��D��۳%崕-�P%��5U&#x3;r���!C�8�M)R&#x17;�A�k&#xf;Ĝ�w���&#x15;�dY��Az�HK���n���۽%pUD&#xd;
p�&#xe;�5�5&#x3;&#x19;�&#x1c;&#x7;�&#xd;`f.�_v�&#xe;&#x1b;O@�|\&#xd;
��&#xd;
^�]���V&#x8;�i��u{&#xb;rQ~�M��Z�E��(�}�G�p��q�������==�	H�&#xb;��&#x1;�n�{b�i�U���ب5&#x6;���(ȗ{��&#xd;uH=DK�&amp;�&#x15;G�W&#x1b;��{��,��&#x5;��@��&#x13;��H�o�&#xf;V&#x7;�2&#x1d;YG��cvc�|F&#x5;�K/�g�&#x17;g0�B�N��&#x1d;�&#x8;���Wm��&#x58e;~���o��&#xb;&#x7f;&#x6;�%&#x0;��!&#x5fb;�(y#,BLX����5&gt;Ud��1�s��&#x2;�O�R��&#x1a;l]*��Ov&#x1d;�T��&#x3;DXX}��O&#x1c;/(h�j�&#xb;Ki�m�&#x1d;������&#xf;.j�2���&#x15;���:O���&#x16;Կ㍽&#x1b;�9&#xb;&#x19;��#�9�&#x15;b�	܇&#x11;a�;x���:+��q?^Ԕ�y��!�F��R&#x19;&#x19;&#x14;��y&#x1;7&#x7f;����&#x1c;/J��K2�n��j&#x6;,�i��I�%����p��Q&#x2;���`?�m8�}�o���L3&#x1e;�Ǝts��&#x12;{�2�!&#x17;�D��&#xf;����5c�(b	&#x17;ezw2��&#xb;Y\�������������gVd�o��&#x6;�V&#x2;g&#x8;�H�&#x0;t�]��&#x11;�,2�&quot;[+m&#x10;��W).-9#ǩd&#x5;��	Z�UەZ�=�=�A\&#x7;&#x13;��&#x12;�����&#xf;�&#x1b;�Ud&#x16;&#x14;[��Z/�,J��h����zEX�@��F{c&#x18;&#x7;~&#xe;k*�R���&#x13;h,�&#x4;&#x14;�0�6�C-�&#x16;��&lt;ߘ�V&#x1e;QFS�!��겿⑺M&#xc;&quot;&#x18;Q��vq�&#x19;�-��&#x2;�M ^�&#x0;{��&#x1d;,�`�!�G!bnw{��0=Hw2D%��}Z��&#x13;6��Q�b�-�&#xf;{&#xe;FG��9&#x1d;&#x14;&#x11;n�I�N��wr�6@�k�C&#xd;&#x13;G�jCi���&#x15;�Q�|Ƥ�y���C��Y�~��$��,&#x1c;�&#x18;�,�%������&#x1d;&lt;��WR1V&#x6;&#x8;�&#x0;��8&#x17;8~Jf2&#x1c;�1&#x5;e&#x8;�2��&#x0;L��cj��n&#x2;/&#x7f;fV&#x14;�:!�4%�k�:��&#x1;&#x5;&#xd;
�wIz���!��z\�?&#x13;�eM�&#x7;&#x13;��Z�j&#x10;&#x18;c���u�&#xe;&#x1;�D���&#x1e;6&#x12;�&#x1c;-c[E��nB�kzP�f��Z}zf@i&#x1b;���x|�ۂ$4�#���	y�&#x13;�&lt;&amp;&amp;w?����$jL��K(G�`��`Z�h&#x1a;&quot;rT&#x11;zyZ&#x18;��&#x1d;:�Yꪱ�]u�U&quot;&apos;�ܸT&#x4;*&#x1a;V?��y�&#x13;&#x1a;�v@�W-)�&#x12;8��o�V�&#x1b;�c�K&#x18;h&#x7;&#x7;I��d��hZ&#x19;DrG&#x1;z!	�&amp;�&#x13;&#x6;���c&gt;�&#x13;�̉&amp;a��&#x2;y���Hu���r��&#x8;��*[(Oƥ&apos;���B��_�i&#x14;/��&#x1e;&apos;���M�Uj	}x7��&#xd;XK��Q�&#x7f;B�X��d�w;��.&#x12;H]&#x2;&#x8;g�&#x1e;���%�����~8�mx�+�氌�&#x15;I&quot;�&#x12;��|r�;$K�6�&#x8;~&#x0;@F���&quot;�g�}�/q�\�\���&#x1;��e�U�&#x5;h3��&#x1b;f��t�ږ&#xd;�u��V���o�&#x12;���N&#x1;!{��&#x15;��6L���b&#xd;
&#x15;�I��6ڂ�.�1�^��º�����d���u,�1&#x2;��5��E@nݏ^2,��&#x0;�XǸ8�,�ީ��=���+�x&#x16;�A��&#xb;Ɩ����&#x4;&#xd;���k�CN(�̒g���z�@?� o&#x6;iҳ�ka����&#x3;&#x12;sn��=&#x1e;y���/����n�ʘ;]$�&#x10;����&#x10;�U��8�\D�]�+��&#x1b;�&#x1;��&amp;t@8���w?�fl�բ&apos;�R&#x14;l&#x1b;�X&gt;-�&#x14;&#x19;1&#xd;
ؔf�;���o��Z)B��iD���*�&#x11;�Z5&#x15;�q���&#x3;e��! 8�֊�=�&#x7;D4U�6A�r�1��&#x1;�&#xc;��~P�Sl&#x5;�Ȼm��W-�&#x1e;;��Dq�&apos;�*M�?�&#x1b;f��.��&#x13;E�\�5٘���!q��&#x6;z9����b�&#x12;{4�:�2�&#x1f;}3�ubP�&#x16;;(��ɀK&#x18;�^n�e2�y�&#x31e6;?=���&lt;&#x19;&gt;4�y&amp;&#x14;�4��w�&#x12;��&#x13;&lt;&#x0;e&#x90;&amp;�n�~&#xd;
�`�&apos;�?�&#x1d;^ņ��&#x16;f��&#x1c;��9�&#x19;u&#xf;���A!u�&gt;�X�&#x1e;UQ�&#x7;&#x7f;�&#x1e;G�J&#xf;��V�?9�e̵��&#x1;�Rjҳn�G��&#x18;�[�Ӏ!z&#x2;&#x1c;J_�\�&#x1;�&#x13;��s���z�&#x16;��ef��\��/q��,�&#x0;���������&#x7f;��OT���������&#x1;*y�9k&#x1b;&#x7f;&#x1a;bI]Ⱦ��P�%Cj0q��&#x5;�&#xd;
��s\,��d[^;�x��γQ&#x19;&#x10;�6�&#x7f;�PW&#xc;�Q��A�&#x15;&#x1c;ܐ5/���&#xd;
6UH�p����&#xe;N��*�&#x1;�A��!MP&#x6;h�&#x1e;���Z&#x1e;� �V�&#x5;Q��&amp;��&#xc;n����LV���&#x10;W�n�0qV����~)�&#x3;x&#x11;�&#x7;�]8R&#x3;�i&#xb;s�&#x12;(��&#x13;�`E&#x1a;!?���l�&#x8;)�&#x17;Wۦ	�	��9$�=�W������6XF��e����@8��&#xf;�h�&#x7;&#xe;�&#x1d;�Y�f\&#x18;�@X&#x1b;��4��R�F?&#x8;C�&#xe;����&#xb;&#x1e;[�W��w*�}�s&#x8;ץ/�&#x2;0ks*&quot;&#x1;��&#x1f;&#x0;�&#x4;����g�\�_5ݮ�K�N*5Z��b��G�Ԝ��oߗ&apos;&#xd;
�0U����yy~#˦Ys�\�&#x1d;Gt���&#x7f;�=3��4y3��M9O�X�v�&#xc;&#x1e;�-�� Q+�&apos;��&#xe;��&#x3;0Ǭ��V�&#x1f;�&#x7f;��&#x17;&#x18;&#x10;�]�O��&#x8;�c�x�Y�wu.�Qu��J[ɧ�Yo�&#x16;1&apos;�ݹjwru`&#x10;&#x7;\���b���ۖ�u�&#x4;[R~W���Wt�:�m�i&#x0;�&#x2;�&#x1;��&#x10;��H�a&#xf;(0&#x19;����3)�&#x16;��&#x18;�&lt;3&#x1d;�&#x17;&#x5;9?3&#x2;�cQ&lt;�&#x19;�r�&amp;&#x10;�5`W��{RJDIC�e&#x7;��:��&apos;�7�I�7�%�{1o#Z���\��ᝑ���Rf-3�||&#x10;�YE�g�F/&#x7f;�o7�a[zK��N�&#x1e;&#x2;A&#x17;:Q����6��&#x15;7;&amp;&amp;D/ՀĂ#N۳��&#xb;(Wo�&#x7;C���ڙv8&#x18;^&#x15;2�&#x7f;&#x1a;;�B��&#x3;s��m�KOK8�T��X�&lt;x���&#x19;?��:N�X&#x6;F8�&apos;&#xc;k��&#x14;,�}��c䇵��&quot;���G:b2$&gt;4&#x1b;,���&#x15;Ea�:&#x1b;�_4��&#xf;&#x1c;V&#xd;�R4͕^��R!.�v��r�lc����&#x7;&#x5;�C&apos;�&#xf;�K�,��y2�&#x1;��Ɯ1��&#x0;�&#xf;qr���f&#x13;|&#x5;�g�4=.q�g��&#x1c;@������&#x8;���}���g&#x6;c%�a��Ѥ�w{�έ&#x1a;��Y�����B���&gt;P,&#x15;m&#x7f;&#x1a;lS&#x4;�P���&quot;Ӓ9xwA��J���ʹb�z,0K����ʽz%�Dy����&#x16;���Z���BVɠ�d&#x5;�y���&#x7f;+gg�QT&#xe;�{��]&lt;&apos;&#x10;cv�}�&#x10;��&#x10;g?��7g�y��TBM�.�&#x11;&#x11;d]=�ˉ&#xc;&#x1b;3��x&#x17;�k�%3�&#x10;�	���[s���E ��&#xf;V�a��~��C�W&#x1e;�J!7T���&#xb;�&#x19;}i�&#x15;&#x2;&#x1c;����=���&#x17;A&#x16;���&#x0;�&lt;Q�D&#x0;r��zw?&#x12;��&#x1a;%��cۋ�-�&#xe;^P����(&#x7f;���$�9b�.&#x1c;E�&#x1d;���&#xb;+f�&amp;:�&#x17;z�?ї��������c��&#xb;&#xc;)&#x13;2�t���&#x1f;&#x11;[&#x1f;�d�/��}��X&#x8;����&#xf;�jl�;~�A�@�&#x5;�&#xb;�rk��#B��&#x5;D&#x1;��o1E:&gt;�F�&quot;��&#x1d;��q���x��D�ɫCL��e�m.��!�5����&#x1c;D���$ק�&#x1c;�7�Ӌ�~~&#x1f;���&#xb;_�^�p`4��f������w�.�K&#x2;&#x7;&#x12;�&quot;e�h�yN%�51H�(�|����e&#x8;�ɴ&#xc;鼁h&#x1b;&#x11;�F�&#x1f;2��}7l�&#x1d;�LQt��&#x1c;[ǵآ��3_�����&#x1d;�h&#x11;&#xc;H&#x17;��q�����&#x13;�d�]���&#x16;өL�&amp;m�&#xc;\qf`Sz���}&#xb;6�&#x18;�e�o�&lt;M��2��m��s�w��l�s&amp;�]���H����b�&quot;�[��I�HN�&#x17;&#x0;y�d!&#x16;�\�f!_M~vN)��&#x2;.pX�&#x5;V��&#xd;��\]�&lt;�&#x95;O&#x8;��E�0k�]P$����v�UWc&#x1f;,���8,�n�١&#x19; &#x8;�f�L�J�u��V6D�-m�T�w�d�&#x13;��&#x10;�&#xd;
��U�|�����&#x18;F���r&#x5;4�����rQ�G���1�k߳�u���qi��F:j�� �yWI&#xe;�FŶ�W�w�&#x7;&#x6;�1xX�&#x11;\V�%�,·lId��b��&#x10;&#x1;&#x1a; � i�Q����l�̠hץt�P�G6U&#x5;0���&#xb;1�M &#x1;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="X-Chrome-UMA-Log-SHA1" elementType="Header">
                <stringProp name="Header.name">X-Chrome-UMA-Log-SHA1</stringProp>
                <stringProp name="Header.value">Ckj42k7LLGYN5ymh2YkGu5v2JsDd5k5yevF2yRgVSgfz+xR28MYwasviM8MRhjVwmtUXw9Jux1K6DZaQX6nVmfd7HcC+/kDNuWsQARogEhSwyEEUhOpteY0jlC1ckqauErsFxvqqpz5doWWj8nYgAQ==</stringProp>
              </elementProp>
              <elementProp name="X-Chrome-UMA-Log-HMAC-SHA256" elementType="Header">
                <stringProp name="Header.name">X-Chrome-UMA-Log-HMAC-SHA256</stringProp>
                <stringProp name="Header.value">CkzHxzVqe7rn4fdxpCO0inHV6not/3Hhe0fr9GHSeHqxgmjxI0NtlFGofxKDbH9zp9ZKziKYdCFDHhr4Wpm2ft2zd/tLR72IaiaNxyDZEAEaICij+8j7whe07qFa/AQAiCBuJ67ZamjMW49NnEI6RO9lIAE=</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/vnd.chrome.uma</stringProp>
              </elementProp>
              <elementProp name="X-Chrome-UMA-ReportingInfo" elementType="Header">
                <stringProp name="Header.name">X-Chrome-UMA-ReportingInfo</stringProp>
                <stringProp name="Header.value">CkT6ElYgALcF7QusorhxkfuxShwYL1H/JM6dcG2NDjF/h3bQq2BPaYpu2GJNNKhObhAQk712xEFcZ6601XT0GQ0SUBIODRABGiAECdkl9uxCGMDxJbt8vnG2rG6Q+W6UsynH+qYtB409ZCAB</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AddFlightSchedules" enabled="true">
          <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          <stringProp name="HTTPSampler.domain">10.0.0.5</stringProp>
          <stringProp name="HTTPSampler.port">0</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">/demoair/add_flight_details_form_handler.php</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments">
              <elementProp name="flight_no" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">flight_no</stringProp>
                <stringProp name="Argument.value">2910</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="origin" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">origin</stringProp>
                <stringProp name="Argument.value">Bangalore</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="destination" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">destination</stringProp>
                <stringProp name="Argument.value">Mumbai</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="dep_date" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">dep_date</stringProp>
                <stringProp name="Argument.value">2024-08-01</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="arr_date" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">arr_date</stringProp>
                <stringProp name="Argument.value">2024-08-01</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="dep_time" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">dep_time</stringProp>
                <stringProp name="Argument.value">04:52</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="arr_time" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">arr_time</stringProp>
                <stringProp name="Argument.value">08:52</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="seats_eco" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">seats_eco</stringProp>
                <stringProp name="Argument.value">120</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="seats_bus" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">seats_bus</stringProp>
                <stringProp name="Argument.value">20</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="price_eco" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">price_eco</stringProp>
                <stringProp name="Argument.value">3000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="price_bus" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">price_bus</stringProp>
                <stringProp name="Argument.value">7000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="jet_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">jet_id</stringProp>
                <stringProp name="Argument.value">2910</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Submit" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">Submit</stringProp>
                <stringProp name="Argument.value">Submit</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://10.0.0.5/demoair/add_flight_details.php</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://10.0.0.5</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">max-age=0</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SuccessMsg" enabled="true">
          <stringProp name="HTTPSampler.domain">10.0.0.5</stringProp>
          <stringProp name="HTTPSampler.port">0</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/demoair/add_flight_details.php</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments">
              <elementProp name="msg" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">msg</stringProp>
                <stringProp name="Argument.value">success</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://10.0.0.5/demoair/add_flight_details.php</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">max-age=0</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC_07_Logout" enabled="true">
          <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          <stringProp name="HTTPSampler.domain">10.0.0.5</stringProp>
          <stringProp name="HTTPSampler.port">0</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">/demoair/logout_handler.php</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://10.0.0.5/demoair/add_flight_details.php?msg=success</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout/demoair/home_page.php-26" enabled="true">
          <stringProp name="HTTPSampler.domain">10.0.0.5</stringProp>
          <stringProp name="HTTPSampler.port">0</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/demoair/home_page.php</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://10.0.0.5/demoair/add_flight_details.php?msg=success</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group2">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="FutureDate" elementType="Argument">
              <stringProp name="Argument.name">FutureDate</stringProp>
              <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd,,P10D,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
          <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
        </CookieManager>
        <hashTree/>
        <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
          <boolProp name="clearEachIteration">true</boolProp>
          <boolProp name="useExpires">true</boolProp>
          <boolProp name="CacheManager.controlledByThread">false</boolProp>
        </CacheManager>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="filename">C:/Users/Administrator/Desktop/JMETER/destination.csv</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">Destination</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">C:/Users/Administrator/Desktop/JMETER/Handson4.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames"></stringProp>
          </CSVDataSet>
          <hashTree/>
          <com.blazemeter.jmeter.controller.ParallelSampler guiclass="com.blazemeter.jmeter.controller.ParallelControllerGui" testclass="com.blazemeter.jmeter.controller.ParallelSampler" testname="bzm - Parallel Controller" enabled="true">
            <intProp name="MAX_THREAD_NUMBER">6</intProp>
            <boolProp name="PARENT_SAMPLE">false</boolProp>
            <boolProp name="LIMIT_MAX_THREAD_NUMBER">false</boolProp>
          </com.blazemeter.jmeter.controller.ParallelSampler>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC_01_Launch" enabled="true">
              <stringProp name="HTTPSampler.domain">10.0.0.5</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.path">/demoair/home_page.php</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">max-age=0</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Click Login" enabled="true">
              <stringProp name="HTTPSampler.domain">10.0.0.5</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.path">/demoair/login_page.php</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://10.0.0.5/demoair/home_page.php</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Include Controller" enabled="true">
              <stringProp name="IncludeController.includepath">C:\Users\Administrator\Desktop\JMETER\Login_H4.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Transaction Controller" enabled="false">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC_02_Login" enabled="true">
                <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
                <stringProp name="HTTPSampler.domain">10.0.0.5</stringProp>
                <stringProp name="HTTPSampler.port">0</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.path">/demoair/login_handler.php</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="username" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">username</stringProp>
                      <stringProp name="Argument.value">${username}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="password" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">password</stringProp>
                      <stringProp name="Argument.value">${password}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="user_type" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">user_type</stringProp>
                      <stringProp name="Argument.value">Customer</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="Login" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">Login</stringProp>
                      <stringProp name="Argument.value">Login</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://10.0.0.5/demoair/login_page.php</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">http://10.0.0.5</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                    </elementProp>
                    <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                      <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                      <stringProp name="Header.value">1</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                    </elementProp>
                    <elementProp name="Cache-Control" elementType="Header">
                      <stringProp name="Header.name">Cache-Control</stringProp>
                      <stringProp name="Header.value">max-age=0</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LoginPage" enabled="true">
                <stringProp name="HTTPSampler.domain">10.0.0.5</stringProp>
                <stringProp name="HTTPSampler.port">0</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.path">/demoair/admin_homepage.php</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://10.0.0.5/demoair/login_page.php</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                    </elementProp>
                    <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                      <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                      <stringProp name="Header.value">1</stringProp>
                    </elementProp>
                    <elementProp name="Cache-Control" elementType="Header">
                      <stringProp name="Header.name">Cache-Control</stringProp>
                      <stringProp name="Header.value">max-age=0</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="1192936124">TC_02_login</stringProp>
            <stringProp name="1192936124">TC_02_login</stringProp>
            <stringProp name="170071582">Test Fragment</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="T04_DemoAir_BookTickets" enabled="true">
          <boolProp name="TransactionController.parent">true</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/demoair/view_flights_form_handler" enabled="true">
            <stringProp name="HTTPSampler.domain">10.0.0.5</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">/demoair/view_flights_form_handler.php</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="origin" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">origin</stringProp>
                  <stringProp name="Argument.value">bangalore</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="destination" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">destination</stringProp>
                  <stringProp name="Argument.value">${Destination}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dep_date" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dep_date</stringProp>
                  <stringProp name="Argument.value">${FutureDate}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="no_of_pass" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">no_of_pass</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="class" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">class</stringProp>
                  <stringProp name="Argument.value">business</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="Search" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Search</stringProp>
                  <stringProp name="Argument.value">Search+for+Available+Flights</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">localhost</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://localhost</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://localhost/demoair/book_tickets.php</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not/A)Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;126&quot;, &quot;Google Chrome&quot;;v=&quot;126&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Boundary Extractor" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">C_TableData</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&lt;td&gt;</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">&lt;/td&gt;</stringProp>
              <stringProp name="BoundaryExtractor.default">Not found</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">-1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="false">
              <stringProp name="scriptLanguage">groovy</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">import java.text.SimpleDateFormat
import java.util.Calendar
// Get the current date
Calendar calendar = Calendar.getInstance()
// Add 10 days to the current date
calendar.add(Calendar.DATE, 10)
// Format the date as needed (e.g., yyyy-MM-dd)
SimpleDateFormat dateFormat = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;)
String futureDate = dateFormat.format(calendar.getTime())
// Store the formatted date in a JMeter variable
vars.put(&quot;futureDate&quot;, futureDate)</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
              <stringProp name="scriptLanguage">groovy</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">// Get the count of captured variables
def count = 0
while (vars.get(&quot;C_TableData_&quot; + count) != null) {
   count++
}
// Store the count in a JMeter variable for later use
vars.put(&quot;TableDataCount&quot;, count.toString())
// Check if the count is &gt;= 1 and stop the test if true
if (count &gt;= 1) {
   log.info(&quot;Captured destination count is greater than or equal to 1. Stopping the test.&quot;)
   org.apache.jmeter.engine.StandardJMeterEngine engine = org.apache.jmeter.util.JMeterUtils.getJMeterEngine()
   if (engine != null) {
       engine.stopTest(true) // &apos;true&apos; forces the test to stop immediately
   }
}</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <InterleaveControl guiclass="InterleaveControlGui" testclass="InterleaveControl" testname="Interleave Controller" enabled="true">
          <intProp name="InterleaveControl.style">1</intProp>
          <boolProp name="InterleaveControl.accrossThreads">false</boolProp>
        </InterleaveControl>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.text.SimpleDateFormat;
import java.util.Calendar;
// Get the initial start date
String startDate = vars.get(&quot;StartDate&quot;);
// Parse the start date
SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);
Calendar cal = Calendar.getInstance();
cal.setTime(sdf.parse(startDate));
// Add days based on the counter value
int dateCounter = Integer.parseInt(vars.get(&quot;DateCounter&quot;));
cal.add(Calendar.DATE, dateCounter);
// Format the date back to the desired format
String formattedDate = sdf.format(cal.getTime());
// Set the updated date to the parameter
vars.put(&quot;flightDate&quot;, formattedDate);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="Random Controller" enabled="true">
            <intProp name="InterleaveControl.style">1</intProp>
          </RandomController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/demoair/view_flights_form_handler_1" enabled="true">
              <stringProp name="HTTPSampler.domain">10.0.0.5</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.path">/demoair/view_flights_form_handler.php</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="origin" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">origin</stringProp>
                    <stringProp name="Argument.value">bangalore</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="destination" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">destination</stringProp>
                    <stringProp name="Argument.value">${Destination}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="dep_date" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">dep_date</stringProp>
                    <stringProp name="Argument.value">${FutureDate}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="no_of_pass" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">no_of_pass</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="class" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">class</stringProp>
                    <stringProp name="Argument.value">business</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="Search" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">Search</stringProp>
                    <stringProp name="Argument.value">Search+for+Available+Flights</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">max-age=0</stringProp>
                  </elementProp>
                  <elementProp name="Connection" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Host" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">localhost</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://localhost</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://localhost/demoair/book_tickets.php</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not/A)Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;126&quot;, &quot;Google Chrome&quot;;v=&quot;126&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Boundary Extractor" enabled="false">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">C_Destination</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">&lt;td&gt;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&lt;/td&gt;</stringProp>
                <stringProp name="BoundaryExtractor.default">Not found</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">-1</stringProp>
              </BoundaryExtractor>
              <hashTree/>
              <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="false">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">import java.text.SimpleDateFormat
import java.util.Calendar
// Get the current date
Calendar calendar = Calendar.getInstance()
// Add 10 days to the current date
calendar.add(Calendar.DATE, 10)
// Format the date as needed (e.g., yyyy-MM-dd)
SimpleDateFormat dateFormat = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;)
String futureDate = dateFormat.format(calendar.getTime())
// Store the formatted date in a JMeter variable
vars.put(&quot;futureDate&quot;, futureDate)</stringProp>
              </JSR223PreProcessor>
              <hashTree/>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="false">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">// Get the count of captured variables
def count = 1
while (vars.get(&quot;C_Destination_&quot; + count) != null) {
   count++
}
// Store the count in a JMeter variable for later use
vars.put(&quot;destinationCount&quot;, count.toString())
// Check if the count is &gt;= 1 and stop the test if true
if (count &gt;= 1) {
   log.info(&quot;Captured destination count is greater than or equal to 1. Stopping the test.&quot;)
   org.apache.jmeter.engine.StandardJMeterEngine engine = org.apache.jmeter.util.JMeterUtils.getJMeterEngine()
   if (engine != null) {
       engine.stopTest(true) // &apos;true&apos; forces the test to stop immediately
   }
}</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/demoair/view_flights_form_handler_2" enabled="true">
              <stringProp name="HTTPSampler.domain">10.0.0.5</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.path">/demoair/view_flights_form_handler.php</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="origin" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">origin</stringProp>
                    <stringProp name="Argument.value">bangalore</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="destination" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">destination</stringProp>
                    <stringProp name="Argument.value">${Destination}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="dep_date" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">dep_date</stringProp>
                    <stringProp name="Argument.value">${FutureDate}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="no_of_pass" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">no_of_pass</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="class" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">class</stringProp>
                    <stringProp name="Argument.value">business</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="Search" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">Search</stringProp>
                    <stringProp name="Argument.value">Search+for+Available+Flights</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">max-age=0</stringProp>
                  </elementProp>
                  <elementProp name="Connection" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Host" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">localhost</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://localhost</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://localhost/demoair/book_tickets.php</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not/A)Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;126&quot;, &quot;Google Chrome&quot;;v=&quot;126&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Boundary Extractor" enabled="false">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">C_Destination</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">&lt;td&gt;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&lt;/td&gt;</stringProp>
                <stringProp name="BoundaryExtractor.default">Not found</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">-1</stringProp>
              </BoundaryExtractor>
              <hashTree/>
              <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="false">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">import java.text.SimpleDateFormat
import java.util.Calendar
// Get the current date
Calendar calendar = Calendar.getInstance()
// Add 10 days to the current date
calendar.add(Calendar.DATE, 10)
// Format the date as needed (e.g., yyyy-MM-dd)
SimpleDateFormat dateFormat = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;)
String futureDate = dateFormat.format(calendar.getTime())
// Store the formatted date in a JMeter variable
vars.put(&quot;futureDate&quot;, futureDate)</stringProp>
              </JSR223PreProcessor>
              <hashTree/>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="false">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">// Get the count of captured variables
def count = 1
while (vars.get(&quot;C_Destination_&quot; + count) != null) {
   count++
}
// Store the count in a JMeter variable for later use
vars.put(&quot;destinationCount&quot;, count.toString())
// Check if the count is &gt;= 1 and stop the test if true
if (count &gt;= 1) {
   log.info(&quot;Captured destination count is greater than or equal to 1. Stopping the test.&quot;)
   org.apache.jmeter.engine.StandardJMeterEngine engine = org.apache.jmeter.util.JMeterUtils.getJMeterEngine()
   if (engine != null) {
       engine.stopTest(true) // &apos;true&apos; forces the test to stop immediately
   }
}</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/demoair/view_flights_form_handler_3" enabled="true">
              <stringProp name="HTTPSampler.domain">10.0.0.5</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.path">/demoair/view_flights_form_handler.php</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="origin" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">origin</stringProp>
                    <stringProp name="Argument.value">bangalore</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="destination" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">destination</stringProp>
                    <stringProp name="Argument.value">${Destination}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="dep_date" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">dep_date</stringProp>
                    <stringProp name="Argument.value">${FutureDate}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="no_of_pass" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">no_of_pass</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="class" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">class</stringProp>
                    <stringProp name="Argument.value">business</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="Search" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">Search</stringProp>
                    <stringProp name="Argument.value">Search+for+Available+Flights</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">max-age=0</stringProp>
                  </elementProp>
                  <elementProp name="Connection" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Host" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">localhost</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://localhost</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://localhost/demoair/book_tickets.php</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not/A)Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;126&quot;, &quot;Google Chrome&quot;;v=&quot;126&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Boundary Extractor" enabled="false">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">C_Destination</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">&lt;td&gt;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&lt;/td&gt;</stringProp>
                <stringProp name="BoundaryExtractor.default">Not found</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">-1</stringProp>
              </BoundaryExtractor>
              <hashTree/>
              <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="false">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">import java.text.SimpleDateFormat
import java.util.Calendar
// Get the current date
Calendar calendar = Calendar.getInstance()
// Add 10 days to the current date
calendar.add(Calendar.DATE, 10)
// Format the date as needed (e.g., yyyy-MM-dd)
SimpleDateFormat dateFormat = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;)
String futureDate = dateFormat.format(calendar.getTime())
// Store the formatted date in a JMeter variable
vars.put(&quot;futureDate&quot;, futureDate)</stringProp>
              </JSR223PreProcessor>
              <hashTree/>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="false">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">// Get the count of captured variables
def count = 1
while (vars.get(&quot;C_Destination_&quot; + count) != null) {
   count++
}
// Store the count in a JMeter variable for later use
vars.put(&quot;destinationCount&quot;, count.toString())
// Check if the count is &gt;= 1 and stop the test if true
if (count &gt;= 1) {
   log.info(&quot;Captured destination count is greater than or equal to 1. Stopping the test.&quot;)
   org.apache.jmeter.engine.StandardJMeterEngine engine = org.apache.jmeter.util.JMeterUtils.getJMeterEngine()
   if (engine != null) {
       engine.stopTest(true) // &apos;true&apos; forces the test to stop immediately
   }
}</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/demoair/view_flights_form_handler_4" enabled="true">
              <stringProp name="HTTPSampler.domain">10.0.0.5</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.path">/demoair/view_flights_form_handler.php</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="origin" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">origin</stringProp>
                    <stringProp name="Argument.value">bangalore</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="destination" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">destination</stringProp>
                    <stringProp name="Argument.value">${Destination}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="dep_date" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">dep_date</stringProp>
                    <stringProp name="Argument.value">${FutureDate}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="no_of_pass" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">no_of_pass</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="class" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">class</stringProp>
                    <stringProp name="Argument.value">business</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="Search" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">Search</stringProp>
                    <stringProp name="Argument.value">Search+for+Available+Flights</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">max-age=0</stringProp>
                  </elementProp>
                  <elementProp name="Connection" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Host" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">localhost</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://localhost</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://localhost/demoair/book_tickets.php</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not/A)Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;126&quot;, &quot;Google Chrome&quot;;v=&quot;126&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Boundary Extractor" enabled="false">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">C_Destination</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">&lt;td&gt;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&lt;/td&gt;</stringProp>
                <stringProp name="BoundaryExtractor.default">Not found</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">-1</stringProp>
              </BoundaryExtractor>
              <hashTree/>
              <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="false">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">import java.text.SimpleDateFormat
import java.util.Calendar
// Get the current date
Calendar calendar = Calendar.getInstance()
// Add 10 days to the current date
calendar.add(Calendar.DATE, 10)
// Format the date as needed (e.g., yyyy-MM-dd)
SimpleDateFormat dateFormat = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;)
String futureDate = dateFormat.format(calendar.getTime())
// Store the formatted date in a JMeter variable
vars.put(&quot;futureDate&quot;, futureDate)</stringProp>
              </JSR223PreProcessor>
              <hashTree/>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="false">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">// Get the count of captured variables
def count = 1
while (vars.get(&quot;C_Destination_&quot; + count) != null) {
   count++
}
// Store the count in a JMeter variable for later use
vars.put(&quot;destinationCount&quot;, count.toString())
// Check if the count is &gt;= 1 and stop the test if true
if (count &gt;= 1) {
   log.info(&quot;Captured destination count is greater than or equal to 1. Stopping the test.&quot;)
   org.apache.jmeter.engine.StandardJMeterEngine engine = org.apache.jmeter.util.JMeterUtils.getJMeterEngine()
   if (engine != null) {
       engine.stopTest(true) // &apos;true&apos; forces the test to stop immediately
   }
}</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/demoair/view_flights_form_handler_5" enabled="true">
              <stringProp name="HTTPSampler.domain">10.0.0.5</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.path">/demoair/view_flights_form_handler.php</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="origin" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">origin</stringProp>
                    <stringProp name="Argument.value">bangalore</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="destination" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">destination</stringProp>
                    <stringProp name="Argument.value">${Destination}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="dep_date" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">dep_date</stringProp>
                    <stringProp name="Argument.value">${FutureDate}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="no_of_pass" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">no_of_pass</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="class" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">class</stringProp>
                    <stringProp name="Argument.value">business</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="Search" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">Search</stringProp>
                    <stringProp name="Argument.value">Search+for+Available+Flights</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">max-age=0</stringProp>
                  </elementProp>
                  <elementProp name="Connection" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Host" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">localhost</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://localhost</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://localhost/demoair/book_tickets.php</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not/A)Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;126&quot;, &quot;Google Chrome&quot;;v=&quot;126&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Boundary Extractor" enabled="false">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">C_Destination</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">&lt;td&gt;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&lt;/td&gt;</stringProp>
                <stringProp name="BoundaryExtractor.default">Not found</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">-1</stringProp>
              </BoundaryExtractor>
              <hashTree/>
              <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="false">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">import java.text.SimpleDateFormat
import java.util.Calendar
// Get the current date
Calendar calendar = Calendar.getInstance()
// Add 10 days to the current date
calendar.add(Calendar.DATE, 10)
// Format the date as needed (e.g., yyyy-MM-dd)
SimpleDateFormat dateFormat = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;)
String futureDate = dateFormat.format(calendar.getTime())
// Store the formatted date in a JMeter variable
vars.put(&quot;futureDate&quot;, futureDate)</stringProp>
              </JSR223PreProcessor>
              <hashTree/>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="false">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">// Get the count of captured variables
def count = 1
while (vars.get(&quot;C_Destination_&quot; + count) != null) {
   count++
}
// Store the count in a JMeter variable for later use
vars.put(&quot;destinationCount&quot;, count.toString())
// Check if the count is &gt;= 1 and stop the test if true
if (count &gt;= 1) {
   log.info(&quot;Captured destination count is greater than or equal to 1. Stopping the test.&quot;)
   org.apache.jmeter.engine.StandardJMeterEngine engine = org.apache.jmeter.util.JMeterUtils.getJMeterEngine()
   if (engine != null) {
       engine.stopTest(true) // &apos;true&apos; forces the test to stop immediately
   }
}</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/demoair/view_flights_form_handler_6" enabled="true">
              <stringProp name="HTTPSampler.domain">10.0.0.5</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.path">/demoair/view_flights_form_handler.php</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="origin" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">origin</stringProp>
                    <stringProp name="Argument.value">bangalore</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="destination" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">destination</stringProp>
                    <stringProp name="Argument.value">${Destination}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="dep_date" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">dep_date</stringProp>
                    <stringProp name="Argument.value">${FutureDate}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="no_of_pass" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">no_of_pass</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="class" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">class</stringProp>
                    <stringProp name="Argument.value">business</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="Search" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">Search</stringProp>
                    <stringProp name="Argument.value">Search+for+Available+Flights</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">max-age=0</stringProp>
                  </elementProp>
                  <elementProp name="Connection" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Host" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">localhost</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://localhost</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://localhost/demoair/book_tickets.php</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not/A)Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;126&quot;, &quot;Google Chrome&quot;;v=&quot;126&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Boundary Extractor" enabled="false">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">C_Destination</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">&lt;td&gt;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&lt;/td&gt;</stringProp>
                <stringProp name="BoundaryExtractor.default">Not found</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">-1</stringProp>
              </BoundaryExtractor>
              <hashTree/>
              <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="false">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">import java.text.SimpleDateFormat
import java.util.Calendar
// Get the current date
Calendar calendar = Calendar.getInstance()
// Add 10 days to the current date
calendar.add(Calendar.DATE, 10)
// Format the date as needed (e.g., yyyy-MM-dd)
SimpleDateFormat dateFormat = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;)
String futureDate = dateFormat.format(calendar.getTime())
// Store the formatted date in a JMeter variable
vars.put(&quot;futureDate&quot;, futureDate)</stringProp>
              </JSR223PreProcessor>
              <hashTree/>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="false">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">// Get the count of captured variables
def count = 1
while (vars.get(&quot;C_Destination_&quot; + count) != null) {
   count++
}
// Store the count in a JMeter variable for later use
vars.put(&quot;destinationCount&quot;, count.toString())
// Check if the count is &gt;= 1 and stop the test if true
if (count &gt;= 1) {
   log.info(&quot;Captured destination count is greater than or equal to 1. Stopping the test.&quot;)
   org.apache.jmeter.engine.StandardJMeterEngine engine = org.apache.jmeter.util.JMeterUtils.getJMeterEngine()
   if (engine != null) {
       engine.stopTest(true) // &apos;true&apos; forces the test to stop immediately
   }
}</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/demoair/view_flights_form_handler_7" enabled="true">
              <stringProp name="HTTPSampler.domain">10.0.0.5</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.path">/demoair/view_flights_form_handler.php</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="origin" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">origin</stringProp>
                    <stringProp name="Argument.value">bangalore</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="destination" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">destination</stringProp>
                    <stringProp name="Argument.value">${Destination}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="dep_date" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">dep_date</stringProp>
                    <stringProp name="Argument.value">${FutureDate}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="no_of_pass" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">no_of_pass</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="class" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">class</stringProp>
                    <stringProp name="Argument.value">business</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="Search" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">Search</stringProp>
                    <stringProp name="Argument.value">Search+for+Available+Flights</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">max-age=0</stringProp>
                  </elementProp>
                  <elementProp name="Connection" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Host" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">localhost</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://localhost</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://localhost/demoair/book_tickets.php</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not/A)Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;126&quot;, &quot;Google Chrome&quot;;v=&quot;126&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Boundary Extractor" enabled="false">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">C_Destination</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">&lt;td&gt;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&lt;/td&gt;</stringProp>
                <stringProp name="BoundaryExtractor.default">Not found</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">-1</stringProp>
              </BoundaryExtractor>
              <hashTree/>
              <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="false">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">import java.text.SimpleDateFormat
import java.util.Calendar
// Get the current date
Calendar calendar = Calendar.getInstance()
// Add 10 days to the current date
calendar.add(Calendar.DATE, 10)
// Format the date as needed (e.g., yyyy-MM-dd)
SimpleDateFormat dateFormat = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;)
String futureDate = dateFormat.format(calendar.getTime())
// Store the formatted date in a JMeter variable
vars.put(&quot;futureDate&quot;, futureDate)</stringProp>
              </JSR223PreProcessor>
              <hashTree/>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="false">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">// Get the count of captured variables
def count = 1
while (vars.get(&quot;C_Destination_&quot; + count) != null) {
   count++
}
// Store the count in a JMeter variable for later use
vars.put(&quot;destinationCount&quot;, count.toString())
// Check if the count is &gt;= 1 and stop the test if true
if (count &gt;= 1) {
   log.info(&quot;Captured destination count is greater than or equal to 1. Stopping the test.&quot;)
   org.apache.jmeter.engine.StandardJMeterEngine engine = org.apache.jmeter.util.JMeterUtils.getJMeterEngine()
   if (engine != null) {
       engine.stopTest(true) // &apos;true&apos; forces the test to stop immediately
   }
}</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/demoair/view_flights_form_handler_8" enabled="true">
              <stringProp name="HTTPSampler.domain">10.0.0.5</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.path">/demoair/view_flights_form_handler.php</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="origin" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">origin</stringProp>
                    <stringProp name="Argument.value">bangalore</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="destination" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">destination</stringProp>
                    <stringProp name="Argument.value">${Destination}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="dep_date" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">dep_date</stringProp>
                    <stringProp name="Argument.value">${FutureDate}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="no_of_pass" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">no_of_pass</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="class" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">class</stringProp>
                    <stringProp name="Argument.value">business</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="Search" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">Search</stringProp>
                    <stringProp name="Argument.value">Search+for+Available+Flights</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">max-age=0</stringProp>
                  </elementProp>
                  <elementProp name="Connection" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Host" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">localhost</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://localhost</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://localhost/demoair/book_tickets.php</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not/A)Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;126&quot;, &quot;Google Chrome&quot;;v=&quot;126&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Boundary Extractor" enabled="false">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">C_Destination</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">&lt;td&gt;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&lt;/td&gt;</stringProp>
                <stringProp name="BoundaryExtractor.default">Not found</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">-1</stringProp>
              </BoundaryExtractor>
              <hashTree/>
              <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="false">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">import java.text.SimpleDateFormat
import java.util.Calendar
// Get the current date
Calendar calendar = Calendar.getInstance()
// Add 10 days to the current date
calendar.add(Calendar.DATE, 10)
// Format the date as needed (e.g., yyyy-MM-dd)
SimpleDateFormat dateFormat = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;)
String futureDate = dateFormat.format(calendar.getTime())
// Store the formatted date in a JMeter variable
vars.put(&quot;futureDate&quot;, futureDate)</stringProp>
              </JSR223PreProcessor>
              <hashTree/>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="false">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">// Get the count of captured variables
def count = 1
while (vars.get(&quot;C_Destination_&quot; + count) != null) {
   count++
}
// Store the count in a JMeter variable for later use
vars.put(&quot;destinationCount&quot;, count.toString())
// Check if the count is &gt;= 1 and stop the test if true
if (count &gt;= 1) {
   log.info(&quot;Captured destination count is greater than or equal to 1. Stopping the test.&quot;)
   org.apache.jmeter.engine.StandardJMeterEngine engine = org.apache.jmeter.util.JMeterUtils.getJMeterEngine()
   if (engine != null) {
       engine.stopTest(true) // &apos;true&apos; forces the test to stop immediately
   }
}</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/demoair/view_flights_form_handler_9" enabled="true">
              <stringProp name="HTTPSampler.domain">10.0.0.5</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.path">/demoair/view_flights_form_handler.php</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="origin" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">origin</stringProp>
                    <stringProp name="Argument.value">bangalore</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="destination" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">destination</stringProp>
                    <stringProp name="Argument.value">${Destination}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="dep_date" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">dep_date</stringProp>
                    <stringProp name="Argument.value">${FutureDate}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="no_of_pass" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">no_of_pass</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="class" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">class</stringProp>
                    <stringProp name="Argument.value">business</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="Search" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">Search</stringProp>
                    <stringProp name="Argument.value">Search+for+Available+Flights</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">max-age=0</stringProp>
                  </elementProp>
                  <elementProp name="Connection" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Host" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">localhost</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://localhost</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://localhost/demoair/book_tickets.php</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not/A)Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;126&quot;, &quot;Google Chrome&quot;;v=&quot;126&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Boundary Extractor" enabled="false">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">C_Destination</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">&lt;td&gt;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&lt;/td&gt;</stringProp>
                <stringProp name="BoundaryExtractor.default">Not found</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">-1</stringProp>
              </BoundaryExtractor>
              <hashTree/>
              <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="false">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">import java.text.SimpleDateFormat
import java.util.Calendar
// Get the current date
Calendar calendar = Calendar.getInstance()
// Add 10 days to the current date
calendar.add(Calendar.DATE, 10)
// Format the date as needed (e.g., yyyy-MM-dd)
SimpleDateFormat dateFormat = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;)
String futureDate = dateFormat.format(calendar.getTime())
// Store the formatted date in a JMeter variable
vars.put(&quot;futureDate&quot;, futureDate)</stringProp>
              </JSR223PreProcessor>
              <hashTree/>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="false">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">// Get the count of captured variables
def count = 1
while (vars.get(&quot;C_Destination_&quot; + count) != null) {
   count++
}
// Store the count in a JMeter variable for later use
vars.put(&quot;destinationCount&quot;, count.toString())
// Check if the count is &gt;= 1 and stop the test if true
if (count &gt;= 1) {
   log.info(&quot;Captured destination count is greater than or equal to 1. Stopping the test.&quot;)
   org.apache.jmeter.engine.StandardJMeterEngine engine = org.apache.jmeter.util.JMeterUtils.getJMeterEngine()
   if (engine != null) {
       engine.stopTest(true) // &apos;true&apos; forces the test to stop immediately
   }
}</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/demoair/view_flights_form_handler_10" enabled="true">
              <stringProp name="HTTPSampler.domain">10.0.0.5</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.path">/demoair/view_flights_form_handler.php</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="origin" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">origin</stringProp>
                    <stringProp name="Argument.value">bangalore</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="destination" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">destination</stringProp>
                    <stringProp name="Argument.value">${Destination}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="dep_date" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">dep_date</stringProp>
                    <stringProp name="Argument.value">${FutureDate}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="no_of_pass" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">no_of_pass</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="class" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">class</stringProp>
                    <stringProp name="Argument.value">business</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="Search" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">Search</stringProp>
                    <stringProp name="Argument.value">Search+for+Available+Flights</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">max-age=0</stringProp>
                  </elementProp>
                  <elementProp name="Connection" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Host" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">localhost</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://localhost</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://localhost/demoair/book_tickets.php</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not/A)Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;126&quot;, &quot;Google Chrome&quot;;v=&quot;126&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Boundary Extractor" enabled="false">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">C_Destination</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">&lt;td&gt;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&lt;/td&gt;</stringProp>
                <stringProp name="BoundaryExtractor.default">Not found</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">-1</stringProp>
              </BoundaryExtractor>
              <hashTree/>
              <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="false">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">import java.text.SimpleDateFormat
import java.util.Calendar
// Get the current date
Calendar calendar = Calendar.getInstance()
// Add 10 days to the current date
calendar.add(Calendar.DATE, 10)
// Format the date as needed (e.g., yyyy-MM-dd)
SimpleDateFormat dateFormat = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;)
String futureDate = dateFormat.format(calendar.getTime())
// Store the formatted date in a JMeter variable
vars.put(&quot;futureDate&quot;, futureDate)</stringProp>
              </JSR223PreProcessor>
              <hashTree/>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="false">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">// Get the count of captured variables
def count = 1
while (vars.get(&quot;C_Destination_&quot; + count) != null) {
   count++
}
// Store the count in a JMeter variable for later use
vars.put(&quot;destinationCount&quot;, count.toString())
// Check if the count is &gt;= 1 and stop the test if true
if (count &gt;= 1) {
   log.info(&quot;Captured destination count is greater than or equal to 1. Stopping the test.&quot;)
   org.apache.jmeter.engine.StandardJMeterEngine engine = org.apache.jmeter.util.JMeterUtils.getJMeterEngine()
   if (engine != null) {
       engine.stopTest(true) // &apos;true&apos; forces the test to stop immediately
   }
}</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ProxyControl guiclass="ProxyControlGui" testclass="ProxyControl" testname="HTTP(S) Test Script Recorder" enabled="false">
        <stringProp name="ProxyControlGui.port">8080</stringProp>
        <collectionProp name="ProxyControlGui.exclude_list">
          <stringProp name="-2063843150">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|woff|woff2)</stringProp>
        </collectionProp>
        <collectionProp name="ProxyControlGui.include_list"/>
        <boolProp name="ProxyControlGui.capture_http_headers">true</boolProp>
        <intProp name="ProxyControlGui.grouping_mode">0</intProp>
        <boolProp name="ProxyControlGui.add_assertion">false</boolProp>
        <stringProp name="ProxyControlGui.sampler_type_name"></stringProp>
        <boolProp name="ProxyControlGui.sampler_redirect_automatically">false</boolProp>
        <boolProp name="ProxyControlGui.sampler_follow_redirects">true</boolProp>
        <boolProp name="ProxyControlGui.use_keepalive">true</boolProp>
        <boolProp name="ProxyControlGui.detect_graphql_request">true</boolProp>
        <boolProp name="ProxyControlGui.sampler_download_images">false</boolProp>
        <intProp name="ProxyControlGui.proxy_http_sampler_naming_mode">0</intProp>
        <stringProp name="ProxyControlGui.default_encoding"></stringProp>
        <stringProp name="ProxyControlGui.proxy_prefix_http_sampler_name">Logout</stringProp>
        <stringProp name="ProxyControlGui.proxy_pause_http_sampler"></stringProp>
        <boolProp name="ProxyControlGui.notify_child_sl_filtered">false</boolProp>
        <boolProp name="ProxyControlGui.regex_match">false</boolProp>
        <stringProp name="ProxyControlGui.content_type_include"></stringProp>
        <stringProp name="ProxyControlGui.content_type_exclude"></stringProp>
      </ProxyControl>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Test Fragment" enabled="false"/>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="T03_Book_flight_Tickets" enabled="true">
          <boolProp name="TransactionController.parent">true</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request" enabled="true">
            <stringProp name="HTTPSampler.domain">10.0.0.5</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">/demoair/book_tickets.php</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
